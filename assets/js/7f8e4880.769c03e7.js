"use strict";(self.webpackChunkstarrocks=self.webpackChunkstarrocks||[]).push([[65880],{82385:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var t=r(85893),s=r(11151);const o={displayed_sidebar:"English"},i="Deploy StarRocks in Docker",c={id:"administration/deploy_with_docker",title:"Deploy StarRocks in Docker",description:"This topic describes how to deploy StarRocks in a Docker container.",source:"@site/versioned_docs/version-2.3/administration/deploy_with_docker.md",sourceDirName:"administration",slug:"/administration/deploy_with_docker",permalink:"/docs/2.3/administration/deploy_with_docker",draft:!1,unlisted:!1,editUrl:"https://github.com/StarRocks/starrocks/edit/main/docs/administration/deploy_with_docker.md",tags:[],version:"2.3",frontMatter:{displayed_sidebar:"English"},sidebar:"English",previous:{title:"Deploy a Compute Node [Preview]",permalink:"/docs/2.3/administration/deploy_cn"},next:{title:"Enable FQDN access",permalink:"/docs/2.3/administration/enable_fqdn"}},a={},l=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Create a Dockerfile",id:"create-a-dockerfile",level:2},{value:"Create a script",id:"create-a-script",level:2},{value:"Build a Docker image",id:"build-a-docker-image",level:2},{value:"Start the Docker container",id:"start-the-docker-container",level:2},{value:"Log in to StarRocks",id:"log-in-to-starrocks",level:2},{value:"Verify the deployment",id:"verify-the-deployment",level:2}];function d(e){const n=Object.assign({h1:"h1",p:"p",h2:"h2",ul:"ul",li:"li",strong:"strong",blockquote:"blockquote",code:"code",pre:"pre",a:"a"},(0,s.ah)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"deploy-starrocks-in-docker",children:"Deploy StarRocks in Docker"}),"\n",(0,t.jsx)(n.p,{children:"This topic describes how to deploy StarRocks in a Docker container."}),"\n",(0,t.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,t.jsx)(n.p,{children:"Before deploying StarRocks in Docker, make sure the following requirements are satisfied."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Hardware"})}),"\n",(0,t.jsx)(n.p,{children:"You can follow these steps on relatively elementary hardware, such as a machine with 8 CPU cores and 16 GB of RAM. The CPU MUST support AVX2 instruction sets."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"NOTE"})}),"\n",(0,t.jsxs)(n.p,{children:["You can run ",(0,t.jsx)(n.code,{children:"cat /proc/cpuinfo | grep avx2"})," in your terminal to check if the CPU supports the AVX2 instruction sets."]}),"\n"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Operating system"})}),"\n",(0,t.jsx)(n.p,{children:"Your machine MUST be running on OS with Linux kernel 3.10 or later."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Software"})}),"\n",(0,t.jsx)(n.p,{children:"You must have Docker and MySQL client 5.5 or later versions installed on your machine."}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"create-a-dockerfile",children:"Create a Dockerfile"}),"\n",(0,t.jsx)(n.p,{children:"Create a Dockerfile to download and install StarRocks."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"FROM centos:centos7\n\n# Prepare the StarRocks Installer. Replace the `<specific_ver_num_of_starrocks>` below with the StarRocks version that you want to deploy, for example, `2.4.0`.\nENV StarRocks_version=<specific_ver_num_of_starrocks>\n\n# Create the directory for deployment.\nENV StarRocks_home=/data/deploy\n\n# Specify the download path. Replace the `<url_to_download_specific_ver_of_starrocks>` below with the download path of the specific version of StarRocks that you want to deploy.\nENV StarRocks_url=<url_to_download_specific_ver_of_starrocks>\n\n# Install StarRocks.\nRUN yum -y install wget\nRUN mkdir -p $StarRocks_home\nRUN wget -SO $StarRocks_home/StarRocks-${StarRocks_version}.tar.gz  $StarRocks_url\nRUN cd $StarRocks_home && tar zxf StarRocks-${StarRocks_version}.tar.gz\n\n# Install Java JDK.\nRUN yum -y install java-1.8.0-openjdk-devel.x86_64\nRUN rpm -ql java-1.8.0-openjdk-devel.x86_64 | grep bin$\n\n# Create directories for FE meta and BE storage in StarRocks.\nRUN mkdir -p $StarRocks_home/StarRocks-${StarRocks_version}/fe/meta\nRUN mkdir -p $StarRocks_home/StarRocks-${StarRocks_version}/be/storage\n\n# Install relevant tools.\nRUN yum -y install mysql net-tools telnet\n\n# Run the setup script.\nCOPY run_script.sh $StarRocks_home/run_script.sh\nRUN chmod +x $StarRocks_home/run_script.sh\nCMD $StarRocks_home/run_script.sh\n"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"CAUTION"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Replace the ",(0,t.jsx)(n.code,{children:"<specific_ver_num_of_starrocks>"})," in the Dockerfile with the StarRocks version that you want to deploy, for example, ",(0,t.jsx)(n.code,{children:"2.4.0"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Replace the ",(0,t.jsx)(n.code,{children:"<url_to_download_specific_ver_of_starrocks>"})," in the Dockerfile with the ",(0,t.jsx)(n.a,{href:"https://www.starrocks.io/download/community",children:"download path"})," of the specific version of StarRocks you expect to install."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"create-a-script",children:"Create a script"}),"\n",(0,t.jsxs)(n.p,{children:["Create a setup script ",(0,t.jsx)(n.code,{children:"run_script.sh"})," to configure and start StarRocks."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"#!/bin/bash\n\n\n# Set JAVA_HOME.\n\nJAVA_INSTALL_DIR=/usr/lib/jvm/$(rpm -aq | grep java-1.8.0-openjdk-1.8.0)\nexport JAVA_HOME=$JAVA_INSTALL_DIR\n\n# Start FE.\ncd $StarRocks_home/StarRocks-$StarRocks_version/fe/bin/\n./start_fe.sh --daemon\n\n# Start BE.\ncd $StarRocks_home/StarRocks-$StarRocks_version/be/bin/\n./start_be.sh --daemon\n\n# Sleep until the cluster starts.\nsleep 30;\n\n# Set the BE server IP.\nIP=$(ifconfig eth0 | grep 'inet' | cut -d: -f2 | awk '{print $2}')\nmysql -uroot -h${IP} -P 9030 -e \"alter system add backend '${IP}:9050';\"\n\n# Loop to detect the process.\nwhile sleep 60; do\n  ps aux | grep starrocks | grep -q -v grep\n  PROCESS_STATUS=$?\n\n  if [ ${PROCESS_STATUS} -ne 0 ]; then\n    echo \"one of the starrocks process already exit.\"\n    exit 1;\n  fi\ndone\n"})}),"\n",(0,t.jsx)(n.h2,{id:"build-a-docker-image",children:"Build a Docker image"}),"\n",(0,t.jsx)(n.p,{children:"Build a Docker image for StarRocks."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"docker build --no-cache --progress=plain -t starrocks:1.0 .\n"})}),"\n",(0,t.jsx)(n.h2,{id:"start-the-docker-container",children:"Start the Docker container"}),"\n",(0,t.jsx)(n.p,{children:"Start the Docker container. You can start it by mapping the relevant ports or with the network environment of the host machine."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Start by mapping the ports:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"docker run -p 9030:9030 -p 8030:8030 -p 8040:8040 --privileged=true -itd --name starrocks-test starrocks:1.0\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Start by using the network environment of the host machine:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"docker run  --network host  --privileged=true -itd --name starrocks-test starrocks:1.0\n"})}),"\n",(0,t.jsx)(n.h2,{id:"log-in-to-starrocks",children:"Log in to StarRocks"}),"\n",(0,t.jsx)(n.p,{children:"Log in to StarRocks after the Docker container is started."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"mysql -uroot -h127.0.0.1 -P 9030\n"})}),"\n",(0,t.jsx)(n.h2,{id:"verify-the-deployment",children:"Verify the deployment"}),"\n",(0,t.jsx)(n.p,{children:"Run the following SQLs to check if StarRocks is successfully deployed in the Docker container."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:'CREATE DATABASE TEST;\n\nUSE TEST;\n\nCREATE TABLE `sr_on_mac` (\n `c0` int(11) NULL COMMENT "",\n `c1` date NULL COMMENT "",\n `c2` datetime NULL COMMENT "",\n `c3` varchar(65533) NULL COMMENT ""\n) ENGINE=OLAP \nDUPLICATE KEY(`c0`)\nPARTITION BY RANGE (c1) (\n  START ("2022-02-01") END ("2022-02-10") EVERY (INTERVAL 1 DAY)\n)\nDISTRIBUTED BY HASH(`c0`) BUCKETS 1 \nPROPERTIES (\n"replication_num" = "1",\n"in_memory" = "false",\n"storage_format" = "DEFAULT"\n);\n\n\ninsert into sr_on_mac values (1, \'2022-02-01\', \'2022-02-01 10:47:57\', \'111\');\ninsert into sr_on_mac values (2, \'2022-02-02\', \'2022-02-02 10:47:57\', \'222\');\ninsert into sr_on_mac values (3, \'2022-02-03\', \'2022-02-03 10:47:57\', \'333\');\n\n\nselect * from sr_on_mac where c1 >= \'2022-02-02\';\n'})}),"\n",(0,t.jsx)(n.p,{children:"If no error is returned, you have successfully deployed StarRocks in Docker."})]})}const h=function(e={}){const{wrapper:n}=Object.assign({},(0,s.ah)(),e.components);return n?(0,t.jsx)(n,Object.assign({},e,{children:(0,t.jsx)(d,e)})):d(e)}},11151:(e,n,r)=>{r.d(n,{Zo:()=>c,ah:()=>o});var t=r(67294);const s=t.createContext({});function o(e){const n=t.useContext(s);return t.useMemo((()=>"function"==typeof e?e(n):{...n,...e}),[n,e])}const i={};function c({components:e,children:n,disableParentContext:r}){let c;return c=r?"function"==typeof e?e({}):e||i:o(e),t.createElement(s.Provider,{value:c},n)}}}]);