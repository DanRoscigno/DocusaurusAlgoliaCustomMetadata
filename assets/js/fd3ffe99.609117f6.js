"use strict";(self.webpackChunkstarrocks=self.webpackChunkstarrocks||[]).push([[96817],{38619:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>m,frontMatter:()=>r,metadata:()=>l,toc:()=>o});var n=s(85893),i=s(11151);const r={},a="DELETE SQLBLACKLIST",l={id:"sql-reference/sql-statements/Administration/DELETE SQLBLACKLIST",title:"DELETE SQLBLACKLIST",description:"Description",source:"@site/versioned_docs/version-3.1/sql-reference/sql-statements/Administration/DELETE SQLBLACKLIST.md",sourceDirName:"sql-reference/sql-statements/Administration",slug:"/sql-reference/sql-statements/Administration/DELETE SQLBLACKLIST",permalink:"/docusaurusv3/docs/latest/sql-reference/sql-statements/Administration/DELETE SQLBLACKLIST",draft:!1,unlisted:!1,editUrl:"https://github.com/StarRocks/starrocks/tree/main/versioned_docs/version-3.1/sql-reference/sql-statements/Administration/DELETE SQLBLACKLIST.md",tags:[],version:"3.1",frontMatter:{},sidebar:"documentation",previous:{title:"CREATE STORAGE VOLUME",permalink:"/docusaurusv3/docs/latest/sql-reference/sql-statements/Administration/CREATE STORAGE VOLUME"},next:{title:"DESC STORAGE VOLUME",permalink:"/docusaurusv3/docs/latest/sql-reference/sql-statements/Administration/DESC STORAGE VOLUME"}},c={},o=[{value:"Description",id:"description",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Parameter",id:"parameter",level:2},{value:"Examples",id:"examples",level:2}];function d(e){const t=Object.assign({h1:"h1",h2:"h2",p:"p",a:"a",pre:"pre",code:"code"},(0,i.ah)(),e.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"delete-sqlblacklist",children:"DELETE SQLBLACKLIST"}),"\n",(0,n.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,n.jsx)(t.p,{children:"Deletes an SQL regular expression from the SQL blacklist."}),"\n",(0,n.jsxs)(t.p,{children:["For more about SQL Blacklist, see ",(0,n.jsx)(t.a,{href:"/docusaurusv3/docs/latest/administration/Blacklist",children:"Manage SQL Blacklist"}),"."]}),"\n",(0,n.jsx)(t.h2,{id:"syntax",children:"Syntax"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-SQL",children:"DELETE SQLBLACKLIST <sql_index_number>\n"})}),"\n",(0,n.jsx)(t.h2,{id:"parameter",children:"Parameter"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"sql_index_number"}),": the index number of the SQL regular expression in the blacklist. Separate multiple index numbers with a comma (,) and a space. You can obtain the index number using ",(0,n.jsx)(t.a,{href:"/docusaurusv3/docs/latest/sql-reference/sql-statements/Administration/SHOW%20SQLBLACKLIST",children:"SHOW SQLBLACKLIST"}),"."]}),"\n",(0,n.jsx)(t.h2,{id:"examples",children:"Examples"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-Plain",children:"mysql> DELETE SQLBLACKLIST 3, 4;\n\nmysql> SHOW SQLBLACKLIST;\n+-------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| Index | Forbidden SQL                                                                                                                                                                                                                                                                                          |\n+-------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| 1     | select count\\(\\*\\) from .+                                                                                                                                                                                                                                                                             |\n| 2     | select id_int \\* 4, id_tinyint, id_varchar from test_all_type_nullable except select id_int, id_tinyint, id_varchar from test_basic except select \\(id_int \\* 9 \\- 8\\) \\/ 2, id_tinyint, id_varchar from test_all_type_nullable2 except select id_int, id_tinyint, id_varchar from test_basic_nullable |\n+-------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n"})})]})}const m=function(e={}){const{wrapper:t}=Object.assign({},(0,i.ah)(),e.components);return t?(0,n.jsx)(t,Object.assign({},e,{children:(0,n.jsx)(d,e)})):d(e)}},11151:(e,t,s)=>{s.d(t,{Zo:()=>l,ah:()=>r});var n=s(67294);const i=n.createContext({});function r(e){const t=n.useContext(i);return n.useMemo((()=>"function"==typeof e?e(t):{...t,...e}),[t,e])}const a={};function l({components:e,children:t,disableParentContext:s}){let l;return l=s?"function"==typeof e?e({}):e||a:r(e),n.createElement(i.Provider,{value:l},t)}}}]);