"use strict";(self.webpackChunkstarrocks=self.webpackChunkstarrocks||[]).push([[60007],{51358:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>a,default:()=>m,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var t=n(85893),i=n(11151);const r={},a="SHOW TABLE STATUS",o={id:"sql-reference/sql-statements/Administration/SHOW TABLE STATUS",title:"SHOW TABLE STATUS",description:"Description",source:"@site/versioned_docs/version-3.1/sql-reference/sql-statements/Administration/SHOW TABLE STATUS.md",sourceDirName:"sql-reference/sql-statements/Administration",slug:"/sql-reference/sql-statements/Administration/SHOW TABLE STATUS",permalink:"/docusaurusv3/docs/latest/sql-reference/sql-statements/Administration/SHOW TABLE STATUS",draft:!1,unlisted:!1,editUrl:"https://github.com/StarRocks/starrocks/tree/main/versioned_docs/version-3.1/sql-reference/sql-statements/Administration/SHOW TABLE STATUS.md",tags:[],version:"3.1",frontMatter:{},sidebar:"documentation",previous:{title:"SHOW STORAGE VOLUMES",permalink:"/docusaurusv3/docs/latest/sql-reference/sql-statements/Administration/SHOW STORAGE VOLUMES"},next:{title:"SHOW VARIABLES",permalink:"/docusaurusv3/docs/latest/sql-reference/sql-statements/Administration/SHOW VARIABLES"}},l={},c=[{value:"Description",id:"description",level:2},{value:"Examples",id:"examples",level:2}];function d(e){const s=Object.assign({h1:"h1",h2:"h2",p:"p",pre:"pre",code:"code",blockquote:"blockquote",ol:"ol",li:"li"},(0,i.ah)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h1,{id:"show-table-status",children:"SHOW TABLE STATUS"}),"\n",(0,t.jsx)(s.h2,{id:"description",children:"Description"}),"\n",(0,t.jsx)(s.p,{children:"This statement is used to view some of the information in Table."}),"\n",(0,t.jsx)(s.p,{children:"Syntax:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-sql",children:'SHOW TABLE STATUS\n[FROM db] [LIKE "pattern"]\n'})}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsx)(s.p,{children:"Note"}),"\n",(0,t.jsx)(s.p,{children:"This statement is mainly compatible with MySQL syntax. At present, it only shows a few information, such as Comment."}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"examples",children:"Examples"}),"\n",(0,t.jsxs)(s.ol,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsx)(s.p,{children:"View all the information of tables under the current database."}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-SQL",children:"SHOW TABLE STATUS;\n"})}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsx)(s.p,{children:"View all the information of tables whose names contain example and who are under specified databases."}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-SQL",children:'SHOW TABLE STATUS FROM db LIKE "%example%";\n'})}),"\n"]}),"\n"]})]})}const m=function(e={}){const{wrapper:s}=Object.assign({},(0,i.ah)(),e.components);return s?(0,t.jsx)(s,Object.assign({},e,{children:(0,t.jsx)(d,e)})):d(e)}},11151:(e,s,n)=>{n.d(s,{Zo:()=>o,ah:()=>r});var t=n(67294);const i=t.createContext({});function r(e){const s=t.useContext(i);return t.useMemo((()=>"function"==typeof e?e(s):{...s,...e}),[s,e])}const a={};function o({components:e,children:s,disableParentContext:n}){let o;return o=n?"function"==typeof e?e({}):e||a:r(e),t.createElement(i.Provider,{value:o},s)}}}]);