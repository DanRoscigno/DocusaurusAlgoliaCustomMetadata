"use strict";(self.webpackChunkstarrocks=self.webpackChunkstarrocks||[]).push([[17248],{39804:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>m,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var s=t(85893),i=t(11151);const r={},a="ALTER VIEW",l={id:"sql-reference/sql-statements/data-definition/ALTER VIEW",title:"ALTER VIEW",description:"Description",source:"@site/versioned_docs/version-2.5/sql-reference/sql-statements/data-definition/ALTER VIEW.md",sourceDirName:"sql-reference/sql-statements/data-definition",slug:"/sql-reference/sql-statements/data-definition/ALTER VIEW",permalink:"/doc/docs/2.5/sql-reference/sql-statements/data-definition/ALTER VIEW",draft:!1,unlisted:!1,editUrl:"https://github.com/StarRocks/starrocks/tree/main/versioned_docs/version-2.5/sql-reference/sql-statements/data-definition/ALTER VIEW.md",tags:[],version:"2.5",frontMatter:{},sidebar:"documentation",previous:{title:"ALTER TABLE",permalink:"/doc/docs/2.5/sql-reference/sql-statements/data-definition/ALTER TABLE"},next:{title:"ANALYZE TABLE",permalink:"/doc/docs/2.5/sql-reference/sql-statements/data-definition/ANALYZE TABLE"}},o={},c=[{value:"Description",id:"description",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Examples",id:"examples",level:2}];function d(e){const n=Object.assign({h1:"h1",h2:"h2",p:"p",pre:"pre",code:"code",ol:"ol",li:"li"},(0,i.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"alter-view",children:"ALTER VIEW"}),"\n",(0,s.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,s.jsx)(n.p,{children:"Modifies the definition of a view."}),"\n",(0,s.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:'ALTER VIEW\n[db_name.]view_name\n(column1[ COMMENT "col comment"][, column2, ...])\nAS query_stmt\n'})}),"\n",(0,s.jsx)(n.p,{children:"Note:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"View is logical, where the data isn't stored in the physical medium. The view will be used as a subquery in the statement when queried. Therefore, modifying the definition of views is equivalent to modifying query_stmt."}),"\n",(0,s.jsx)(n.li,{children:"query_stmt is arbitrarily supported SQL."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,s.jsxs)(n.p,{children:["Alter ",(0,s.jsx)(n.code,{children:"example_view"})," on ",(0,s.jsx)(n.code,{children:"example_db"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:'ALTER VIEW example_db.example_view\n(\nc1 COMMENT "column 1",\nc2 COMMENT "column 2",\nc3 COMMENT "column 3"\n)\nAS SELECT k1, k2, SUM(v1) \nFROM example_table\nGROUP BY k1, k2\n'})})]})}const m=function(e={}){const{wrapper:n}=Object.assign({},(0,i.ah)(),e.components);return n?(0,s.jsx)(n,Object.assign({},e,{children:(0,s.jsx)(d,e)})):d(e)}},11151:(e,n,t)=>{t.d(n,{Zo:()=>l,ah:()=>r});var s=t(67294);const i=s.createContext({});function r(e){const n=s.useContext(i);return s.useMemo((()=>"function"==typeof e?e(n):{...n,...e}),[n,e])}const a={};function l({components:e,children:n,disableParentContext:t}){let l;return l=t?"function"==typeof e?e({}):e||a:r(e),s.createElement(i.Provider,{value:l},n)}}}]);