"use strict";(self.webpackChunkstarrocks=self.webpackChunkstarrocks||[]).push([[8803],{20388:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>h,frontMatter:()=>l,metadata:()=>a,toc:()=>c});var s=i(85893),t=i(11151);const l={displayed_sidebar:"English"},r="System variables",a={id:"reference/System_variable",title:"System variables",description:"Variable Settings and Viewing",source:"@site/versioned_docs/version-2.1/reference/System_variable.md",sourceDirName:"reference",slug:"/reference/System_variable",permalink:"/docs/2.1/reference/System_variable",draft:!1,unlisted:!1,editUrl:"https://github.com/StarRocks/starrocks/edit/main/docs/reference/System_variable.md",tags:[],version:"2.1",frontMatter:{displayed_sidebar:"English"},sidebar:"English",previous:{title:"System Limit",permalink:"/docs/2.1/reference/System_limit"},next:{title:"StarRocks version 1.19",permalink:"/docs/2.1/release_notes/release-1.19"}},o={},c=[{value:"Variable Settings and Viewing",id:"variable-settings-and-viewing",level:2},{value:"View",id:"view",level:3},{value:"Settings",id:"settings",level:3},{value:"Setting variables in query statements",id:"setting-variables-in-query-statements",level:3},{value:"Supported Variables",id:"supported-variables",level:2}];function d(e){const n=Object.assign({h1:"h1",h2:"h2",p:"p",code:"code",strong:"strong",h3:"h3",pre:"pre",blockquote:"blockquote",ul:"ul",li:"li"},(0,t.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"system-variables",children:"System variables"}),"\n",(0,s.jsx)(n.h2,{id:"variable-settings-and-viewing",children:"Variable Settings and Viewing"}),"\n",(0,s.jsxs)(n.p,{children:["This section describes the variables supported by the StarRocks system. They can be viewed with the ",(0,s.jsx)(n.code,{children:"SHOW VARIABLES"})," command. These variables can take effect globally on the system or only on the current session."]}),"\n",(0,s.jsxs)(n.p,{children:["The variables in StarRocks refer to the variable sets in MySQL, but ",(0,s.jsx)(n.strong,{children:"some variables are only compatible with the MySQL client protocol and do not function on the MySQL database"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"view",children:"View"}),"\n",(0,s.jsxs)(n.p,{children:["You can view all or some variables by ",(0,s.jsx)(n.code,{children:"SHOW VARIABLES [LIKE 'xxx']"}),";. For example:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-SQL",children:"SHOW VARIABLES;\n\nSHOW VARIABLES LIKE '%time_zone%';\n"})}),"\n",(0,s.jsx)(n.h3,{id:"settings",children:"Settings"}),"\n",(0,s.jsxs)(n.p,{children:["Variables can generally be set to take effect ",(0,s.jsx)(n.strong,{children:"globally"})," or ",(0,s.jsx)(n.strong,{children:"only on the current session"}),". When set to global, a new value will be used in subsequent new sessions without affecting the current session. When set to \u201ccurrent session only\u201d, the variable will only take effect on the current session."]}),"\n",(0,s.jsxs)(n.p,{children:["A variable set by ",(0,s.jsx)(n.code,{children:"SET var_name=xxx;"})," only takes effect for the current session. For example:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-SQL",children:'SET exec_mem_limit = 137438953472;\n\nSET forward_to_master = true;\n\nSET time_zone = "Asia/Shanghai";\n'})}),"\n",(0,s.jsxs)(n.p,{children:["A variable set by the ",(0,s.jsx)(n.code,{children:"SET GLOBAL var_name=xxx;"})," statement takes effect globally. For example:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-SQL",children:"SET GLOBAL exec_mem_limit = 137438953472;\n"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"Note: Only ADMIN users can set variables to be globally effective. Globally effective variables do not affect the current session, only subsequent new sessions."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Variables that can be set both globally or partially effective include:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"batch_size"}),"\n",(0,s.jsx)(n.li,{children:"disable_streaming_preaggregations"}),"\n",(0,s.jsx)(n.li,{children:"exec_mem_limit"}),"\n",(0,s.jsx)(n.li,{children:"force_streaming_aggregate"}),"\n",(0,s.jsx)(n.li,{children:"is_report_success"}),"\n",(0,s.jsx)(n.li,{children:"hash_join_push_down_right_table"}),"\n",(0,s.jsx)(n.li,{children:"parallel_fragment_exec_instance_num"}),"\n",(0,s.jsx)(n.li,{children:"parallel_exchange_instance_num"}),"\n",(0,s.jsx)(n.li,{children:"query_timeout"}),"\n",(0,s.jsx)(n.li,{children:"sql_mode"}),"\n",(0,s.jsx)(n.li,{children:"time_zone"}),"\n",(0,s.jsx)(n.li,{children:"vectorized_engine_enable"}),"\n",(0,s.jsx)(n.li,{children:"wait_timeout"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Variables that can only be set globally effective include:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"default_rowset_type"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"In addition, variable settings also support constant expressions, such as:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-SQL",children:"SET exec_mem_limit = 10 * 1024 * 1024 * 1024;\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-SQL",children:"SET forward_to_master = concat('tr', 'u', 'e');\n"})}),"\n",(0,s.jsx)(n.h3,{id:"setting-variables-in-query-statements",children:"Setting variables in query statements"}),"\n",(0,s.jsxs)(n.p,{children:["In some scenarios, we may need to set variables specifically for certain queries. By using ",(0,s.jsx)(n.code,{children:"SET_VAR"}),", it is possible to set session variables that will only take effect within a single statement. For example:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"SELECT /*+ SET_VAR(exec_mem_limit = 8589934592) */ name FROM people ORDER BY name;\n\nSELECT /*+ SET_VAR(query_timeout = 1) */ sleep(3);\n"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["Note: It must start with ",(0,s.jsx)(n.code,{children:"/*+"})," and can only be followed by the ",(0,s.jsx)(n.code,{children:"SELECT"})," keyword."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"supported-variables",children:"Supported Variables"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"SQL_AUTO_IS_NULL"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Used for compatibility with the JDBC connection pool C3P0. No practical usage."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"auto_increment_increment"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Used for MySQL client compatibility. No practical usage."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"autocommit"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Used for MySQL client compatibility. No practical usage."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"batch_size"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Used to specify the number of rows of a single packet transmitted by each node during query execution. The default is 1024, i.e., every 1024 rows of data generated by the source node is packaged and sent to the destination node. A larger number of rows will improve the query throughput in large data volume scenarios, but may increase the query latency in small data volume scenarios. Also, it may increase the memory overhead of the query. We recommend to set ",(0,s.jsx)(n.code,{children:"batch_size"})," between 1024 to 4096."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"default_rowset_type"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Used to set the default storage format used by the storage engine of the computing node. The currently supported storage formats are ",(0,s.jsx)(n.code,{children:"alpha"})," and ",(0,s.jsx)(n.code,{children:"beta"}),"."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"disable_colocate_join"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Used to control whether the Colocation Join is enabled. The default value is ",(0,s.jsx)(n.code,{children:"false"}),", meaning the feature is enabled. When this feature is disabled, query planning will not attempt to execute Colocation Join."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"disable_streaming_preaggregations"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Used to enable the streaming pre-aggregations. The default value is ",(0,s.jsx)(n.code,{children:"false"}),", meaning  it is enabled."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"div_precision_increment"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Used for MySQL client compatibility. No practical usage."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"enable_insert_strict"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:'Used to enable the strict mode when importing data using the INSERT statement. The default value is false, meaning strict mode is not enabled. For more information, see "Data Import" (... /loading/Loading_intro.md)".'}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"enable_spilling"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Used to enable large data volume drop sorting. The default value is false, meaning it is not enabled. It is enabled when the user does not specify a ",(0,s.jsx)(n.code,{children:"LIMIT"})," condition in the ",(0,s.jsx)(n.code,{children:"ORDER BY"})," clause and sets ",(0,s.jsx)(n.code,{children:"enable_spilling"})," to true. When enabled, the BE data directory ",(0,s.jsx)(n.code,{children:"starrocks-scratch/"})," is used to store temporary spilling data that will be cleared after the query is completed."]}),"\n",(0,s.jsx)(n.p,{children:"This function is mainly used for sorting operations with large data volume using limited memory."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"event_scheduler"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Used for MySQL client compatibility. No practical usage."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"exec_mem_limit"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Used to set the memory limit that can be used by a single query plan instance. The default value is 2GB, and the default unit is B. ",(0,s.jsx)(n.code,{children:"B/K/KB/M/MB/G/GB/T/TB/P/PB"})," are supported."]}),"\n",(0,s.jsx)(n.p,{children:"There may be multiple instances of a query plan, and a BE node may execute one or more instances. Therefore, this parameter does not accurately limit the memory usage of a query across the cluster, nor does it accurately limit the memory usage of a query on a single BE node. It needs to be evaluated based on the generated query plan."}),"\n",(0,s.jsx)(n.p,{children:"Usually, more memory is consumed on blocking nodes (e.g. Sort Node, Aggregate Node, Join Node). Unblocking nodes (e.g. Scan Node) transmit data in stream, which does not take up too much memory."}),"\n",(0,s.jsxs)(n.p,{children:["When there is a ",(0,s.jsx)(n.code,{children:"Memory Exceed Limit"})," error, try to increase this parameter."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"force_streaming_aggregate"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Used to control whether the aggregation node enables streaming aggregation for computing. The default value is false, meaning the feature is not enabled."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"forward_to_master"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Used to set whether some commands will be forwarded to the leader FE node for execution. The default value is false, meaning no forwarding. There are multiple FE nodes in StarRocks, one of which is the leader node. Normally, users can connect to any FE node for full-featured operation. However, some information is only available from the leader FE node."}),"\n",(0,s.jsxs)(n.p,{children:["For example, if the ",(0,s.jsx)(n.code,{children:"SHOW BACKENDS;"})," commend is not forwarded to the leader FE node, only basic information (e.g., whether the node is alive or not) can be seen. Forwarding to the leader FE can get more detailed information including the node start time, last heartbeat time, etc."]}),"\n",(0,s.jsx)(n.p,{children:"The commands affected by this parameter are as follows:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"SHOW FRONTENDS;"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Forwarding to leader allows users to view the last heartbeat message."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"SHOW BACKENDS;"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Forwarding to leader allows users to view the boot time, last heartbeat information, and disk capacity information."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"SHOW BROKER;"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Forwarding to leader allows users to view the boot time and last heartbeat information."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"SHOW TABLET;"}),"\n",(0,s.jsx)(n.li,{children:"ADMIN SHOW REPLICA DISTRIBUTION;"}),"\n",(0,s.jsx)(n.li,{children:"ADMIN SHOW REPLICA STATUS;"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Forwarding to leader allows users to view the tablet information stored in the leader FE metadata. Normally, the tablet information in the different FE metadata should be the same. In case of a problem, you can use this method to compare the differences in metadata of the current FE and the leader FE."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Show PROC;"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Forwarding to leader allows users to view the PROC information stored in the metadata. This is mainly used for metadata comparison."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"hash_join_push_down_right_table"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Used to control whether the data of the left table can be filtered by using the filter condition against the right table in the Join query. If so, it can reduce the amount of data that needs to be processed during the query."}),"\n",(0,s.jsx)(n.p,{children:"If \u201ctrue\u201d, indicating the operation is allowed and the system will decide whether the left table can be filtered. If \u201cfalse\u201d, indicating the operation is disabled. The default value is true."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"init_connect"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Used for MySQL client compatibility. No practical usage."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"interactive_timeout"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Used for MySQL client compatibility. No practical usage."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"is_report_success"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Used to set whether the profile of the query needs to be viewed. The default is false, meaning no profile is required."}),"\n",(0,s.jsx)(n.p,{children:"By default, a profile will only be sent to the FE when a query error occurs in the BEt. Profile sending causes network overhead and therefore affects high concurrency."}),"\n",(0,s.jsxs)(n.p,{children:["When there is a need to analyze the profile of a query, users can set this variable to true and send a query to deep dive. After the query is completed, the profile can be viewed on the web page of the currently connected FE (address: ",(0,s.jsx)(n.code,{children:"fe_host:fe_http_port/query"}),"). This page displays the profiles of the last 100 queries with ",(0,s.jsx)(n.code,{children:"is_report_success"})," turned on."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"language"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Used for MySQL client compatibility. No practical usage."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"license"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Displays the license of StarRocks."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"load_mem_limit"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Specifies the memory limit for the import operation. The default value is 0, meaning that this variable is not used and ",(0,s.jsx)(n.code,{children:"exec_mem_limit"})," is used instead."]}),"\n",(0,s.jsxs)(n.p,{children:["This variable is only used for the ",(0,s.jsx)(n.code,{children:"INSERT"})," operation which involves both query and import. If the user does not set this variable, the memory limit for both query and import will be set as ",(0,s.jsx)(n.code,{children:"exec_mem_limit"}),". Otherwise, the memory limit for query will be set as ",(0,s.jsx)(n.code,{children:"exec_mem_limit"})," and the memory limit for import will be as ",(0,s.jsx)(n.code,{children:"load_mem_limit"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Other import methods such as ",(0,s.jsx)(n.code,{children:"BROKER LOAD"}),", ",(0,s.jsx)(n.code,{children:"STREAM LOAD"})," still use ",(0,s.jsx)(n.code,{children:"exec_mem_limit"})," for memory limit."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"lower_case_table_names"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Used for MySQL client compatibility. No practical usage. Table names in StarRocks are case-sensitive."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"max_allowed_packet"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Used for compatibility with the JDBC connection pool C3P0. No practical usage."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"max_pushdown_conditions_per_column"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["This variable is set to ",(0,s.jsx)(n.code,{children:"-1"})," by default, indicating that the value configured in ",(0,s.jsx)(n.code,{children:"be.conf"})," is used. If this variable is set to be greater than 0, queries in the current session will use this value and ignore the configured value in ",(0,s.jsx)(n.code,{children:"be.conf"}),"."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"net_buffer_length"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Used for MySQL client compatibility. No practical usage."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"net_read_timeout"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Used for MySQL client compatibility. No practical usage."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"net_write_timeout"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Used for MySQL client compatibility. No practical usage."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"parallel_exchange_instance_num"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Used to set the number of exchange nodes that an upper-level node uses to receive data from a lower-level node in the execution plan. The default value is -1, meaning the number of exchange nodes is equal to the number of execution instances of the lower-level node. When  this variable is set to be greater than 0 but smaller than the number of execution instances of the lower-level node, the number of exchange nodes equals the set value."}),"\n",(0,s.jsx)(n.p,{children:"In a distributed query execution plan, the upper-level node usually has one or more exchange nodes to receive data from the execution instances of the lower-level node on different BEs. Usually the number of exchange nodes is equal to the number of execution instances of the lower-level node."}),"\n",(0,s.jsx)(n.p,{children:"In some aggregation query scenarios where the amount of data decreases drastically after aggregation, you can try to modify this variable to a smaller value to reduce the resource overhead. An example would be running aggregation queries using theDUPLICATE model."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"parallel_fragment_exec_instance_num"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Used to set the number of instances used to scan nodes on each BE. The default value is 1."}),"\n",(0,s.jsx)(n.p,{children:"A query plan typically produces a set of scan ranges. This data is distributed across multiple BE nodes. A BE node will have one or more scan ranges, and by default, each BE node's set of scan ranges is processed by only one execution instance. When machine resources suffice, you can increase this variable to allow more execution instances to process a scan range simultaneously for efficiency purposes."}),"\n",(0,s.jsx)(n.p,{children:"The number of scan instances determines the number of other execution nodes in the upper level, such as aggregation nodes and join nodes. Therefore, it increases the concurrency of the entire query plan execution. Modifying this parameter will help  improve efficiency, but larger values will consume more machine resources, such as CPU, memory, and disk IO."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"performance_schema"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Used for compatibility with MySQL JDBC versions 8.0.16 and above. No practical usage."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"query_cache_size"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Used for MySQL client compatibility. No practical use."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"query_cache_type"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Used for compatibility with JDBC connection pool C3P0. No practical use."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"query_timeout"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:'Used to set the query timeout in "seconds". This variable will act on all query statements in the current connection, as well as INSERT statements. The default value is 300 seconds.'}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"rewrite_count_distinct_to_bitmap_hll"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Used to decide whether to rewrite count distinct queries to bitmap_union_count and hll_union_agg."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"sql_mode"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Used to specify the SQL mode to accommodate certain SQL dialects."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"sql_safe_updates"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Used for MySQL client compatibility. No practical usage."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"sql_select_limit"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Used for MySQL client compatibility. No practical usage."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"storage_engine"}),"\n",(0,s.jsx)(n.p,{children:"The types of engines supported by StarRocks:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"olap: StarRocks system-owned engine."}),"\n",(0,s.jsx)(n.li,{children:"mysql: Use MySQL external tables."}),"\n",(0,s.jsx)(n.li,{children:"broker: Access external tables through a broker program."}),"\n",(0,s.jsx)(n.li,{children:"elasticsearch or es: Use Elasticsearch external tables."}),"\n",(0,s.jsx)(n.li,{children:"hive: Use Hive external tables."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"system_time_zone"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Used to display the time zone of the current system. Cannot be changed."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"time_zone"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Used to set the time zone of the current session. The time zone can affect the results of certain time functions."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"tx_isolation"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Used for MySQL client compatibility. No practical usage."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"use_v2_rollup"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Used to control the query to fetch data using the rollup index of the segment v2 storage format. This variable is used for validation when going online with segment v2. It is not recommended for other cases."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"vectorized_engine_enable"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Used to control whether the vectorized engine is used to execute queries. A value of ",(0,s.jsx)(n.code,{children:"true"})," indicates that the vectorized engine is used, otherwise the non-vectorized engine is used. The default is ",(0,s.jsx)(n.code,{children:"true"}),"."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"version"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Used for MySQL client compatibility. No practical usage."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"version_comment"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Used to display the version of StarRocks. Cannot be changed."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"wait_timeout"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Used to set the connection timeout for idle connections. When an idle connection does not interact with StarRocks for that length of time, StarRocks will actively disconnect the link. The default value is 8 hours, in seconds."})]})}const h=function(e={}){const{wrapper:n}=Object.assign({},(0,t.ah)(),e.components);return n?(0,s.jsx)(n,Object.assign({},e,{children:(0,s.jsx)(d,e)})):d(e)}},11151:(e,n,i)=>{i.d(n,{Zo:()=>a,ah:()=>l});var s=i(67294);const t=s.createContext({});function l(e){const n=s.useContext(t);return s.useMemo((()=>"function"==typeof e?e(n):{...n,...e}),[n,e])}const r={};function a({components:e,children:n,disableParentContext:i}){let a;return a=i?"function"==typeof e?e({}):e||r:l(e),s.createElement(t.Provider,{value:a},n)}}}]);