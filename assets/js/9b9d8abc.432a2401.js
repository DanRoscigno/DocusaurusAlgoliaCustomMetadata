"use strict";(self.webpackChunkstarrocks=self.webpackChunkstarrocks||[]).push([[91696],{26540:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>t,metadata:()=>i,toc:()=>o});var a=r(85893),s=r(11151);const t={displayed_sidebar:"documentation"},l="array_length",i={id:"sql-reference/sql-functions/array-functions/array_length",title:"array_length",description:"Description",source:"@site/versioned_docs/version-3.1/sql-reference/sql-functions/array-functions/array_length.md",sourceDirName:"sql-reference/sql-functions/array-functions",slug:"/sql-reference/sql-functions/array-functions/array_length",permalink:"/doc/docs/sql-reference/sql-functions/array-functions/array_length",draft:!1,unlisted:!1,editUrl:"https://github.com/StarRocks/starrocks/edit/main/docs/sql-reference/sql-functions/array-functions/array_length.md",tags:[],version:"3.1",frontMatter:{displayed_sidebar:"documentation"},sidebar:"documentation",previous:{title:"array_join",permalink:"/doc/docs/sql-reference/sql-functions/array-functions/array_join"},next:{title:"array_map",permalink:"/doc/docs/sql-reference/sql-functions/array-functions/array_map"}},c={},o=[{value:"Description",id:"description",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Return value",id:"return-value",level:2},{value:"Examples",id:"examples",level:2},{value:"keywords",id:"keywords",level:2}];function d(e){const n=Object.assign({h1:"h1",h2:"h2",p:"p",a:"a",pre:"pre",code:"code"},(0,s.ah)(),e.components);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"array_length",children:"array_length"}),"\n",(0,a.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,a.jsx)(n.p,{children:"Returns the number of elements in an array. The result type is INT. If the input parameter is NULL, the result is also NULL. Null elements are counted in the length."}),"\n",(0,a.jsxs)(n.p,{children:["It has an alias ",(0,a.jsx)(n.a,{href:"/doc/docs/sql-reference/sql-functions/array-functions/cardinality",children:"cardinality()"}),"."]}),"\n",(0,a.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-Haskell",children:"INT array_length(any_array)\n"})}),"\n",(0,a.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"any_array"}),": the ARRAY value from which you want to retrieve the number of elements."]}),"\n",(0,a.jsx)(n.h2,{id:"return-value",children:"Return value"}),"\n",(0,a.jsx)(n.p,{children:"Returns an INT value."}),"\n",(0,a.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-plain",metastring:"text",children:"mysql> select array_length([1,2,3]);\n+-----------------------+\n| array_length([1,2,3]) |\n+-----------------------+\n|                     3 |\n+-----------------------+\n1 row in set (0.00 sec)\n\nmysql> select array_length([1,2,3,null]);\n+-------------------------------+\n| array_length([1, 2, 3, NULL]) |\n+-------------------------------+\n|                             4 |\n+-------------------------------+\n\nmysql> select array_length([[1,2], [3,4]]);\n+-----------------------------+\n| array_length([[1,2],[3,4]]) |\n+-----------------------------+\n|                           2 |\n+-----------------------------+\n1 row in set (0.01 sec)\n"})}),"\n",(0,a.jsx)(n.h2,{id:"keywords",children:"keywords"}),"\n",(0,a.jsx)(n.p,{children:"ARRAY_LENGTH, ARRAY, CARDINALITY"})]})}const u=function(e={}){const{wrapper:n}=Object.assign({},(0,s.ah)(),e.components);return n?(0,a.jsx)(n,Object.assign({},e,{children:(0,a.jsx)(d,e)})):d(e)}},11151:(e,n,r)=>{r.d(n,{Zo:()=>i,ah:()=>t});var a=r(67294);const s=a.createContext({});function t(e){const n=a.useContext(s);return a.useMemo((()=>"function"==typeof e?e(n):{...n,...e}),[n,e])}const l={};function i({components:e,children:n,disableParentContext:r}){let i;return i=r?"function"==typeof e?e({}):e||l:t(e),a.createElement(s.Provider,{value:i},n)}}}]);