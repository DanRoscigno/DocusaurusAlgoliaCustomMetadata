"use strict";(self.webpackChunkstarrocks=self.webpackChunkstarrocks||[]).push([[84013],{80396:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>o});var n=s(85893),i=s(11151);const a={},r="bitmap_subset_limit",l={id:"sql-reference/sql-functions/bitmap-functions/bitmap_subset_limit",title:"bitmap_subset_limit",description:"Description",source:"@site/versioned_docs/version-3.1/sql-reference/sql-functions/bitmap-functions/bitmap_subset_limit.md",sourceDirName:"sql-reference/sql-functions/bitmap-functions",slug:"/sql-reference/sql-functions/bitmap-functions/bitmap_subset_limit",permalink:"/docusaurusv3/docs/latest/sql-reference/sql-functions/bitmap-functions/bitmap_subset_limit",draft:!1,unlisted:!1,editUrl:"https://github.com/StarRocks/starrocks/tree/main/versioned_docs/version-3.1/sql-reference/sql-functions/bitmap-functions/bitmap_subset_limit.md",tags:[],version:"3.1",frontMatter:{},sidebar:"documentation",previous:{title:"bitmap_subset_in_range",permalink:"/docusaurusv3/docs/latest/sql-reference/sql-functions/bitmap-functions/bitmap_subset_in_range"},next:{title:"bitmap_to_array",permalink:"/docusaurusv3/docs/latest/sql-reference/sql-functions/bitmap-functions/bitmap_to_array"}},c={},o=[{value:"Description",id:"description",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Return value",id:"return-value",level:2},{value:"Usage notes",id:"usage-notes",level:2},{value:"Examples",id:"examples",level:2}];function m(e){const t=Object.assign({h1:"h1",h2:"h2",p:"p",code:"code",a:"a",pre:"pre",ul:"ul",li:"li"},(0,i.ah)(),e.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"bitmap_subset_limit",children:"bitmap_subset_limit"}),"\n",(0,n.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,n.jsxs)(t.p,{children:["Intercepts a specified number of elements from a BITMAP value with element value starting from ",(0,n.jsx)(t.code,{children:"start range"}),". The output elements are a subset of ",(0,n.jsx)(t.code,{children:"src"}),"."]}),"\n",(0,n.jsx)(t.p,{children:"This function is mainly used for scenarios such as paginated queries. It is supported from v3.1."}),"\n",(0,n.jsxs)(t.p,{children:["This function is similar to ",(0,n.jsx)(t.a,{href:"/docusaurusv3/docs/latest/sql-reference/sql-functions/bitmap-functions/sub_bitmap",children:"sub_bitmap"}),". The difference is that this function intercepts elements starting from an element value (",(0,n.jsx)(t.code,{children:"start_range"}),") whereas sub_bitmap intercepts elements starting from an offset."]}),"\n",(0,n.jsx)(t.h2,{id:"syntax",children:"Syntax"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-Haskell",children:"BITMAP bitmap_subset_limit(BITMAP src, BIGINT start_range, BIGINT limit)\n"})}),"\n",(0,n.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"src"}),": the BITMAP value from which to obtain elements."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"start_range"}),": the start range to intercept elements. It must be a BIGINT value. If the specified start range exceeds the maximum element of the BITMAP value and ",(0,n.jsx)(t.code,{children:"limit"})," is positive, NULL is returned. See Example 4."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"limit"}),": the number of elements to obtain starting from ",(0,n.jsx)(t.code,{children:"start_range"}),". Negative limits are counted from right to left. If the number of matching elements is less than the value of ",(0,n.jsx)(t.code,{children:"limit"}),", all the matching elements are returned."]}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"return-value",children:"Return value"}),"\n",(0,n.jsx)(t.p,{children:"Returns a value of the BITMAP type. NULL is returned if any of the input parameters is invalid."}),"\n",(0,n.jsx)(t.h2,{id:"usage-notes",children:"Usage notes"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["The subset elements include ",(0,n.jsx)(t.code,{children:"start range"}),"."]}),"\n",(0,n.jsx)(t.li,{children:"Negative limits are counted from right to left. See example 3."}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"examples",children:"Examples"}),"\n",(0,n.jsxs)(t.p,{children:["In the following examples, the input of bitmap_subset_limit() is the output of ",(0,n.jsx)(t.a,{href:"/docusaurusv3/docs/latest/sql-reference/sql-functions/bitmap-functions/bitmap_from_string",children:"bitmap_from_string"}),". For example, ",(0,n.jsx)(t.code,{children:"bitmap_from_string('1,1,3,1,5,3,5,7,7,9')"})," returns ",(0,n.jsx)(t.code,{children:"1, 3, 5, 7, 9"}),". bitmap_subset_limit() takes this BITMAP value as the input."]}),"\n",(0,n.jsx)(t.p,{children:"Example 1: Obtain 4 elements from the BITMAP value with elements values starting from 1."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-Plaintext",children:"select bitmap_to_string(bitmap_subset_limit(bitmap_from_string('1,1,3,1,5,3,5,7,7,9'), 1, 4)) value;\n+---------+\n|  value  |\n+---------+\n| 1,3,5,7 |\n+---------+\n"})}),"\n",(0,n.jsx)(t.p,{children:"Example 2: Obtain 100 elements from the BITMAP value with elements value starting from 1,. The limit exceeds the length of the BITMAP value and all the matching elements are returned."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-Plaintext",children:"select bitmap_to_string(bitmap_subset_limit(bitmap_from_string('1,1,3,1,5,3,5,7,7,9'), 1, 100)) value;\n+-----------+\n| value     |\n+-----------+\n| 1,3,5,7,9 |\n+-----------+\n"})}),"\n",(0,n.jsx)(t.p,{children:"Example 3: Obtain -2 elements from the BITMAP value with elements value starting from 5 (counting from right to left)."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-Plaintext",children:"select bitmap_to_string(bitmap_subset_limit(bitmap_from_string('1,1,3,1,5,3,5,7,7,9'), 5, -2)) value;\n+-----------+\n| value     |\n+-----------+\n| 3,5       |\n+-----------+\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Example 4: The start range 10 exceeds the maximum element of the BITMAP value ",(0,n.jsx)(t.code,{children:"1,3,5,7,9"})," and limit is positive. NULL is returned."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-Plain",children:"select bitmap_to_string(bitmap_subset_in_range(bitmap_from_string('1,1,3,1,5,3,5,7,7,9'), 10, 15)) value;\n+-------+\n| value |\n+-------+\n| NULL  |\n+-------+\n"})})]})}const u=function(e={}){const{wrapper:t}=Object.assign({},(0,i.ah)(),e.components);return t?(0,n.jsx)(t,Object.assign({},e,{children:(0,n.jsx)(m,e)})):m(e)}},11151:(e,t,s)=>{s.d(t,{Zo:()=>l,ah:()=>a});var n=s(67294);const i=n.createContext({});function a(e){const t=n.useContext(i);return n.useMemo((()=>"function"==typeof e?e(t):{...t,...e}),[t,e])}const r={};function l({components:e,children:t,disableParentContext:s}){let l;return l=s?"function"==typeof e?e({}):e||r:a(e),n.createElement(i.Provider,{value:l},t)}}}]);