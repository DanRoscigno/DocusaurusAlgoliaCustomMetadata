"use strict";(self.webpackChunkstarrocks=self.webpackChunkstarrocks||[]).push([[19251],{20140:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>d,metadata:()=>o,toc:()=>c});var n=s(85893),t=s(11151);const d={displayed_sidebar:"English"},i="Deploy Broker",o={id:"administration/deploy_broker",title:"Deploy Broker",description:"This topic describes how to deploy Broker. With Broker, StarRocks can read data from source such as HDFS and S3, and pre-process, load, and backup the data with its own computing resources.",source:"@site/versioned_docs/version-2.5/administration/deploy_broker.md",sourceDirName:"administration",slug:"/administration/deploy_broker",permalink:"/doc/docs/2.5/administration/deploy_broker",draft:!1,unlisted:!1,editUrl:"https://github.com/StarRocks/starrocks/edit/main/docs/administration/deploy_broker.md",tags:[],version:"2.5",frontMatter:{displayed_sidebar:"English"},sidebar:"English",previous:{title:"Manage audit logs within StarRocks via Audit Loader",permalink:"/doc/docs/2.5/administration/audit_loader"},next:{title:"Enable FQDN access",permalink:"/doc/docs/2.5/administration/enable_fqdn"}},l={},c=[{value:"Download and decompress the installer",id:"download-and-decompress-the-installer",level:2},{value:"Configure a Broker",id:"configure-a-broker",level:2},{value:"Start a Broker",id:"start-a-broker",level:2},{value:"Add a Broker to cluster",id:"add-a-broker-to-cluster",level:2},{value:"verify if Broker starts",id:"verify-if-broker-starts",level:2},{value:"Stop a Broker",id:"stop-a-broker",level:2},{value:"Configure a broker",id:"configure-a-broker-1",level:2}];function a(e){const r=Object.assign({h1:"h1",p:"p",h2:"h2",a:"a",pre:"pre",code:"code",blockquote:"blockquote",strong:"strong",ul:"ul",li:"li",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td"},(0,t.ah)(),e.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.h1,{id:"deploy-broker",children:"Deploy Broker"}),"\n",(0,n.jsx)(r.p,{children:"This topic describes how to deploy Broker. With Broker, StarRocks can read data from source such as HDFS and S3, and pre-process, load, and backup the data with its own computing resources."}),"\n",(0,n.jsx)(r.h2,{id:"download-and-decompress-the-installer",children:"Download and decompress the installer"}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.a,{href:"https://www.starrocks.io/download/community",children:"Download"})," and decompress StarRocks installer."]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-bash",children:"tar -xzvf StarRocks-x.x.x.tar.gz\n"})}),"\n",(0,n.jsxs)(r.blockquote,{children:["\n",(0,n.jsx)(r.p,{children:(0,n.jsx)(r.strong,{children:"CAUTION"})}),"\n",(0,n.jsx)(r.p,{children:"Replace the file name in the command as the real file name you downloaded."}),"\n"]}),"\n",(0,n.jsx)(r.h2,{id:"configure-a-broker",children:"Configure a Broker"}),"\n",(0,n.jsxs)(r.p,{children:["Navigate to ",(0,n.jsx)(r.strong,{children:"StarRocks-x.x.x/apache_hdfs_broker"}),"."]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-bash",children:"cd StarRocks-x.x.x/apache_hdfs_broker\n"})}),"\n",(0,n.jsxs)(r.blockquote,{children:["\n",(0,n.jsx)(r.p,{children:(0,n.jsx)(r.strong,{children:"CAUTION"})}),"\n",(0,n.jsxs)(r.p,{children:["Replace the file name in the command as the real file name you downloaded.\nSpecify the Broker configuration file ",(0,n.jsx)(r.strong,{children:"conf/apache_hdfs_broker.conf"}),". Because the default configuration can be used directly, no configuration item is changed in the following example. You can copy your own HDFS cluster configuration file and paste it under ",(0,n.jsx)(r.strong,{children:"conf"})," directory."]}),"\n"]}),"\n",(0,n.jsx)(r.h2,{id:"start-a-broker",children:"Start a Broker"}),"\n",(0,n.jsx)(r.p,{children:"Run the following command to start Broker."}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-bash",children:"./apache_hdfs_broker/bin/start_broker.sh --daemon\n"})}),"\n",(0,n.jsx)(r.h2,{id:"add-a-broker-to-cluster",children:"Add a Broker to cluster"}),"\n",(0,n.jsx)(r.p,{children:"Run the following command to add the Broker to cluster."}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-sql",children:'ALTER SYSTEM ADD BROKER broker_name "broker_ip:broker_port";\n'})}),"\n",(0,n.jsxs)(r.blockquote,{children:["\n",(0,n.jsx)(r.p,{children:(0,n.jsx)(r.strong,{children:"NOTE"})}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:["By default, the port for Broker is ",(0,n.jsx)(r.code,{children:"8000"}),"."]}),"\n",(0,n.jsxs)(r.li,{children:["When multiple Brokers are added to a cluster at the same time, they share the same ",(0,n.jsx)(r.code,{children:"broker_name"}),"."]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(r.h2,{id:"verify-if-broker-starts",children:"verify if Broker starts"}),"\n",(0,n.jsx)(r.p,{children:"You can verify if the BE node is started properly via MySQL client."}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-sql",children:'SHOW PROC "/brokers"\\G\n'})}),"\n",(0,n.jsx)(r.p,{children:"Example:"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-plain",metastring:"text",children:'MySQL [(none)]> SHOW PROC "/brokers"\\G\n*************************** 1. row ***************************\n          Name: broker1\n            IP: x.x.x.x\n          Port: 8000\n         Alive: true\n LastStartTime: 2022-05-19 11:21:36\nLastUpdateTime: 2022-05-19 11:28:31\n        ErrMsg:\n1 row in set (0.00 sec)\n'})}),"\n",(0,n.jsxs)(r.p,{children:["When the field ",(0,n.jsx)(r.code,{children:"Alive"})," is ",(0,n.jsx)(r.code,{children:"true"}),", the Broker is properly started and added to the cluster."]}),"\n",(0,n.jsx)(r.h2,{id:"stop-a-broker",children:"Stop a Broker"}),"\n",(0,n.jsx)(r.p,{children:"Run the following command to stop a Broker."}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-bash",children:"./bin/stop_broker.sh --daemon\n"})}),"\n",(0,n.jsx)(r.h2,{id:"configure-a-broker-1",children:"Configure a broker"}),"\n",(0,n.jsxs)(r.p,{children:["You can only set the configuration items of a broker by changing them in the corresponding configuration file ",(0,n.jsx)(r.strong,{children:"broker.conf"}),", and restart the broker to allow the change to take effect."]}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Configuration item"}),(0,n.jsx)(r.th,{children:"Default"}),(0,n.jsx)(r.th,{children:"Unit"}),(0,n.jsx)(r.th,{children:"Description"})]})}),(0,n.jsxs)(r.tbody,{children:[(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"hdfs_read_buffer_size_kb"}),(0,n.jsx)(r.td,{children:"8192"}),(0,n.jsx)(r.td,{children:"KB"}),(0,n.jsx)(r.td,{children:"Size of the buffer that is used to read data from HDFS."})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"hdfs_write_buffer_size_kb"}),(0,n.jsx)(r.td,{children:"1024"}),(0,n.jsx)(r.td,{children:"KB"}),(0,n.jsx)(r.td,{children:"Size of the buffer that is used to write data into HDFS."})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"client_expire_seconds"}),(0,n.jsx)(r.td,{children:"300"}),(0,n.jsx)(r.td,{children:"Second"}),(0,n.jsx)(r.td,{children:"Client sessions will be deleted if they do not receive any ping after the specified time."})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"broker_ipc_port"}),(0,n.jsx)(r.td,{children:"8000"}),(0,n.jsx)(r.td,{children:"N/A"}),(0,n.jsx)(r.td,{children:"The HDFS thrift RPC port."})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"disable_broker_client_expiration_checking"}),(0,n.jsx)(r.td,{children:"false"}),(0,n.jsx)(r.td,{children:"N/A"}),(0,n.jsxs)(r.td,{children:["Whether to disable the checking and clearing of the expired OSS file descriptors, which, in some cases, causes the broker to stuck when OSS is close. To avoid this situation, you can set this parameter to ",(0,n.jsx)(r.code,{children:"true"})," to disable the checking."]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"sys_log_dir"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"${BROKER_HOME}/log"})}),(0,n.jsx)(r.td,{children:"N/A"}),(0,n.jsx)(r.td,{children:"The directory used to store system logs (including INFO, WARNING, ERROR, and FATAL)."})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"sys_log_level"}),(0,n.jsx)(r.td,{children:"INFO"}),(0,n.jsx)(r.td,{children:"N/A"}),(0,n.jsx)(r.td,{children:"The log level. Valid values include INFO, WARNING, ERROR, and FATAL."})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"sys_log_roll_mode"}),(0,n.jsx)(r.td,{children:"SIZE-MB-1024"}),(0,n.jsx)(r.td,{children:"N/A"}),(0,n.jsx)(r.td,{children:"The mode how system logs are segmented into log rolls. Valid values include TIME-DAY, TIME-HOUR, and SIZE-MB-nnn. The default value indicates that logs are segmented into rolls which are 1 GB each."})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"sys_log_roll_num"}),(0,n.jsx)(r.td,{children:"30"}),(0,n.jsx)(r.td,{children:"N/A"}),(0,n.jsx)(r.td,{children:"The number of log rolls to reserve."})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"audit_log_dir"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"${BROKER_HOME}/log"})}),(0,n.jsx)(r.td,{children:"N/A"}),(0,n.jsx)(r.td,{children:"The directory that stores audit log files."})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"audit_log_modules"}),(0,n.jsx)(r.td,{children:"Empty string"}),(0,n.jsx)(r.td,{children:"N/A"}),(0,n.jsx)(r.td,{children:"The modules for which StarRocks generates audit log entries. By default, StarRocks generates audit logs for the slow_query module and the query module. You can specify multiple modules, whose names must be separated by a comma (,) and a space."})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"audit_log_roll_mode"}),(0,n.jsx)(r.td,{children:"TIME-DAY"}),(0,n.jsx)(r.td,{children:"N/A"}),(0,n.jsxs)(r.td,{children:["Valid values include ",(0,n.jsx)(r.code,{children:"TIME-DAY"}),", ",(0,n.jsx)(r.code,{children:"TIME-HOUR"}),", and ",(0,n.jsx)(r.code,{children:"SIZE-MB-<size>"}),"."]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"audit_log_roll_num"}),(0,n.jsx)(r.td,{children:"10"}),(0,n.jsx)(r.td,{children:"N/A"}),(0,n.jsxs)(r.td,{children:["This configuration does not work if the audit_log_roll_mode is set to ",(0,n.jsx)(r.code,{children:"SIZE-MB-<size>"}),"."]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"sys_log_verbose_modules"}),(0,n.jsx)(r.td,{children:"com.starrocks"}),(0,n.jsx)(r.td,{children:"N/A"}),(0,n.jsxs)(r.td,{children:["The modules for which StarRocks generates system logs. Valid values are namespaces in BE, including ",(0,n.jsx)(r.code,{children:"starrocks"}),", ",(0,n.jsx)(r.code,{children:"starrocks::vectorized"}),", and ",(0,n.jsx)(r.code,{children:"pipeline"}),"."]})]})]})]})]})}const h=function(e={}){const{wrapper:r}=Object.assign({},(0,t.ah)(),e.components);return r?(0,n.jsx)(r,Object.assign({},e,{children:(0,n.jsx)(a,e)})):a(e)}},11151:(e,r,s)=>{s.d(r,{Zo:()=>o,ah:()=>d});var n=s(67294);const t=n.createContext({});function d(e){const r=n.useContext(t);return n.useMemo((()=>"function"==typeof e?e(r):{...r,...e}),[r,e])}const i={};function o({components:e,children:r,disableParentContext:s}){let o;return o=s?"function"==typeof e?e({}):e||i:d(e),n.createElement(t.Provider,{value:o},r)}}}]);