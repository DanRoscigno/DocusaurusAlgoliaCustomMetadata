"use strict";(self.webpackChunkstarrocks=self.webpackChunkstarrocks||[]).push([[39050],{52727:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>E,frontMatter:()=>r,metadata:()=>a,toc:()=>d});var t=s(85893),i=s(11151);const r={displayed_sidebar:"English"},l="CREATE VIEW",a={id:"sql-reference/sql-statements/data-definition/CREATE_VIEW",title:"CREATE VIEW",description:"description",source:"@site/versioned_docs/version-2.2/sql-reference/sql-statements/data-definition/CREATE_VIEW.md",sourceDirName:"sql-reference/sql-statements/data-definition",slug:"/sql-reference/sql-statements/data-definition/CREATE_VIEW",permalink:"/docs/2.2/sql-reference/sql-statements/data-definition/CREATE_VIEW",draft:!1,unlisted:!1,editUrl:"https://github.com/StarRocks/starrocks/edit/main/docs/sql-reference/sql-statements/data-definition/CREATE_VIEW.md",tags:[],version:"2.2",frontMatter:{displayed_sidebar:"English"},sidebar:"English",previous:{title:"CREATE TABLE LIKE",permalink:"/docs/2.2/sql-reference/sql-statements/data-definition/CREATE_TABLE_LIKE"},next:{title:"DROP DATABASE",permalink:"/docs/2.2/sql-reference/sql-statements/data-definition/DROP_DATABASE"}},c={},d=[{value:"description",id:"description",level:2},{value:"Example",id:"example",level:2},{value:"keyword",id:"keyword",level:2}];function o(e){const n=Object.assign({h1:"h1",h2:"h2",p:"p",pre:"pre",code:"code",ol:"ol",li:"li"},(0,i.ah)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"create-view",children:"CREATE VIEW"}),"\n",(0,t.jsx)(n.h2,{id:"description",children:"description"}),"\n",(0,t.jsx)(n.p,{children:"This statement is used to create a logical view."}),"\n",(0,t.jsx)(n.p,{children:"Syntax:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:'CREATE VIEW [IF NOT EXISTS]\n[db_name.]view_name\n(column1[ COMMENT "col comment"][, column2, ...])\nAS query_stmt\n'})}),"\n",(0,t.jsx)(n.p,{children:"Note:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"The view is a logical view with no physical storage. All queries on the view are equivalent to subqueries corresponding to the view."}),"\n",(0,t.jsx)(n.li,{children:"query_stmt is arbitrarily supported SQL."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Create view example_view on example_db."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"CREATE VIEW example_db.example_view (k1, k2, k3, v1)\nAS\nSELECT c1 as k1, k2, k3, SUM(v1) FROM example_table\nWHERE k1 = 20160112 GROUP BY k1,k2,k3;\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Create a view containing comment."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:'CREATE VIEW example_db.example_view\n(\nk1 COMMENT "first key",\nk2 COMMENT "second key",\nk3 COMMENT "third key",\nv1 COMMENT "first value"\n)\nCOMMENT "my first view"\nAS\nSELECT c1 as k1, k2, k3, SUM(v1) FROM example_table\nWHERE k1 = 20160112 GROUP BY k1,k2,k3;\n'})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"keyword",children:"keyword"}),"\n",(0,t.jsx)(n.p,{children:"CREATE,VIEW"})]})}const E=function(e={}){const{wrapper:n}=Object.assign({},(0,i.ah)(),e.components);return n?(0,t.jsx)(n,Object.assign({},e,{children:(0,t.jsx)(o,e)})):o(e)}},11151:(e,n,s)=>{s.d(n,{Zo:()=>a,ah:()=>r});var t=s(67294);const i=t.createContext({});function r(e){const n=t.useContext(i);return t.useMemo((()=>"function"==typeof e?e(n):{...n,...e}),[n,e])}const l={};function a({components:e,children:n,disableParentContext:s}){let a;return a=s?"function"==typeof e?e({}):e||l:r(e),t.createElement(i.Provider,{value:a},n)}}}]);