"use strict";(self.webpackChunkstarrocks=self.webpackChunkstarrocks||[]).push([[57256],{81412:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>r,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var t=s(85893),a=s(11151);const i={displayed_sidebar:"English"},o="SHOW BACKUP",l={id:"sql-reference/sql-statements/data-manipulation/SHOW_BACKUP",title:"SHOW BACKUP",description:"Description",source:"@site/versioned_docs/version-2.3/sql-reference/sql-statements/data-manipulation/SHOW_BACKUP.md",sourceDirName:"sql-reference/sql-statements/data-manipulation",slug:"/sql-reference/sql-statements/data-manipulation/SHOW_BACKUP",permalink:"/docs/2.3/sql-reference/sql-statements/data-manipulation/SHOW_BACKUP",draft:!1,unlisted:!1,editUrl:"https://github.com/StarRocks/starrocks/edit/main/docs/sql-reference/sql-statements/data-manipulation/SHOW_BACKUP.md",tags:[],version:"2.3",frontMatter:{displayed_sidebar:"English"},sidebar:"English",previous:{title:"SHOW ALTER TABLE",permalink:"/docs/2.3/sql-reference/sql-statements/data-manipulation/SHOW_ALTER"},next:{title:"SHOW CREATE TABLE",permalink:"/docs/2.3/sql-reference/sql-statements/data-manipulation/SHOW_CREATE_TABLE"}},r={},c=[{value:"Description",id:"description",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Examples",id:"examples",level:2}];function d(e){const n=Object.assign({h1:"h1",h2:"h2",p:"p",pre:"pre",code:"code"},(0,a.ah)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"show-backup",children:"SHOW BACKUP"}),"\n",(0,t.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,t.jsx)(n.p,{children:"This statement is used to view BACKUP tasks"}),"\n",(0,t.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"SHOW BACKUP [FROM <db_name>]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Note:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-plain",metastring:"text",children:"1. Only the last BACKUP task is saved in StarRocks.\n2. Each column has the following meaning:\nJobId:                  Unique job ID\nSnapshotName:           Name of the backup\nDbName:                 Owning database\nState:                  Current Stage\nPENDING:                Initial state after submitting a job\nSNAPSHOTING:            in execution snapshot\nUPLOAD_SNAPSHOT:        Snapshot complete, ready for upload\nUPLOADING:              Snapshot uploading\nSAVE_META:              Save job meta-information as a local file\nUPLOAD_INFO:            Upload job meta information\nFINISHED:               Job success\nCANCELLED:              Job failure\nBackupObjs:             Backed up tables and partitions\nCreateTime:             Task Submission Time\nSnapshotFinishedTime:   Snapshot Completion Time\nUploadFinishedTime:     Snapshot upload completion time\nFinishedTime:           Job end time\nUnfinishedTasks:        In the SNAPSHOTING and UPLOADING phases, the unfinished subtask IDs are displayed\nStatus:                 Display failure information if job fails\nTimeout:                Job timeout in seconds\n"})}),"\n",(0,t.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,t.jsx)(n.p,{children:"View example_ db Last BACKUP task."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"SHOW BACKUP FROM example_db;\n"})})]})}const p=function(e={}){const{wrapper:n}=Object.assign({},(0,a.ah)(),e.components);return n?(0,t.jsx)(n,Object.assign({},e,{children:(0,t.jsx)(d,e)})):d(e)}},11151:(e,n,s)=>{s.d(n,{Zo:()=>l,ah:()=>i});var t=s(67294);const a=t.createContext({});function i(e){const n=t.useContext(a);return t.useMemo((()=>"function"==typeof e?e(n):{...n,...e}),[n,e])}const o={};function l({components:e,children:n,disableParentContext:s}){let l;return l=s?"function"==typeof e?e({}):e||o:i(e),t.createElement(a.Provider,{value:l},n)}}}]);