"use strict";(self.webpackChunkstarrocks=self.webpackChunkstarrocks||[]).push([[35667],{48422:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>i,default:()=>a,frontMatter:()=>n,metadata:()=>l,toc:()=>h});var s=t(85893),d=t(11151);const n={displayed_sidebar:"English"},i="Parameter Configuration",l={id:"administration/Configuration",title:"Parameter Configuration",description:"After the service is started, you may adjust the configuration parameters to meet the business requirements. You need to reboot the BE and Fe to apply the changes.",source:"@site/versioned_docs/version-2.2/administration/Configuration.md",sourceDirName:"administration",slug:"/administration/Configuration",permalink:"/docs/2.2/administration/Configuration",draft:!1,unlisted:!1,editUrl:"https://github.com/StarRocks/starrocks/edit/main/docs/administration/Configuration.md",tags:[],version:"2.2",frontMatter:{displayed_sidebar:"English"},sidebar:"English",previous:{title:"Manage a cluster",permalink:"/docs/2.2/administration/Cluster_administration"},next:{title:"Data Recovery",permalink:"/docs/2.2/administration/Data_recovery"}},c={},h=[{value:"FE configuration items",id:"fe-configuration-items",level:2},{value:"BE Configuration Items",id:"be-configuration-items",level:2},{value:"Broker configuration parameters",id:"broker-configuration-parameters",level:2},{value:"System parameters",id:"system-parameters",level:2}];function o(e){const r=Object.assign({h1:"h1",p:"p",h2:"h2",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",code:"code",pre:"pre",ul:"ul",li:"li",strong:"strong"},(0,d.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.h1,{id:"parameter-configuration",children:"Parameter Configuration"}),"\n",(0,s.jsx)(r.p,{children:"After the service is started, you may adjust the configuration parameters to meet the business requirements. You need to reboot the BE and Fe to apply the changes."}),"\n",(0,s.jsx)(r.h2,{id:"fe-configuration-items",children:"FE configuration items"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Configuration Item"}),(0,s.jsx)(r.th,{children:"Default"}),(0,s.jsx)(r.th,{children:"Role"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"log_roll_size_mb"}),(0,s.jsx)(r.td,{children:"1024"}),(0,s.jsx)(r.td,{children:"Size of log split, per 1G"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"sys_log_dir"}),(0,s.jsx)(r.td,{children:"StarRocksFe.STARROCKS_HOME_DIR/log"}),(0,s.jsx)(r.td,{children:"Directory where logs are kept"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"sys_log_level"}),(0,s.jsx)(r.td,{children:"INFO"}),(0,s.jsx)(r.td,{children:"log level\uff0cINFO < WARNING < ERROR < FATAL"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"sys_log_verbose_modules"}),(0,s.jsx)(r.td,{children:"empty string"}),(0,s.jsxs)(r.td,{children:["Modules for log printing, write ",(0,s.jsx)(r.code,{children:"org.starrocks.catalog"})," to print only the logs that are under the catalog module"]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"sys_log_roll_interval"}),(0,s.jsx)(r.td,{children:"DAY"}),(0,s.jsx)(r.td,{children:"The interval for log splitting"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"sys_log_delete_age"}),(0,s.jsx)(r.td,{children:"7d"}),(0,s.jsx)(r.td,{children:"The interval for log deletion"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"sys_log_roll_mode"}),(0,s.jsx)(r.td,{children:"1024"}),(0,s.jsx)(r.td,{children:"The size of the log split, per 1G"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"audit_log_dir"}),(0,s.jsx)(r.td,{children:"starrocksFe.STARROCKS_HOME_DIR/log"}),(0,s.jsx)(r.td,{children:"Directory where audit logs are kept"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"audit_log_roll_num"}),(0,s.jsx)(r.td,{children:"90"}),(0,s.jsx)(r.td,{children:"The number of audit logs to keep"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"audit_log_modules"}),(0,s.jsx)(r.td,{children:'"slow_query", "query"'}),(0,s.jsxs)(r.td,{children:["Modules for audit log printing, default retains ",(0,s.jsx)(r.code,{children:"slow_query"})," and ",(0,s.jsx)(r.code,{children:"query"})]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"qe_slow_log_ms"}),(0,s.jsx)(r.td,{children:"5000"}),(0,s.jsx)(r.td,{})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"audit_log_roll_interval"}),(0,s.jsx)(r.td,{children:"DAY"}),(0,s.jsx)(r.td,{children:"The interval for audit log splitting"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"audit_log_delete_age"}),(0,s.jsx)(r.td,{children:"30d"}),(0,s.jsx)(r.td,{children:"The interval for audit log deletion"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"audit_log_roll_mode"}),(0,s.jsx)(r.td,{children:"TIME-DAY"}),(0,s.jsx)(r.td,{children:"The interval for audit log splitting"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"label_keep_max_second"}),(0,s.jsx)(r.td,{children:"259200"}),(0,s.jsx)(r.td,{children:"The time to keep the label, with a default value of 3 days. The longer the keep time, the more memory to consume"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"history_job_keep_max_second"}),(0,s.jsx)(r.td,{children:"604800"}),(0,s.jsx)(r.td,{children:"Maximum retention time for historical jobs, such as schema change jobs, 7 days by default"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"label_clean_interval_second"}),(0,s.jsx)(r.td,{children:"14400"}),(0,s.jsx)(r.td,{children:"The interval for label cleaning"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"transaction_clean_interval_second"}),(0,s.jsx)(r.td,{children:"30"}),(0,s.jsx)(r.td,{children:"The interval for transaction cleaning"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"meta_dir"}),(0,s.jsx)(r.td,{children:"StarRocksFe.STARROCKS_HOME_DIR/meta"}),(0,s.jsx)(r.td,{children:"Directory for metadata"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"tmp_dir"}),(0,s.jsx)(r.td,{children:"starrocksFe.STARROCKS_HOME_DIR/temp_ddir"}),(0,s.jsx)(r.td,{children:"Directory where temporary files are kept, such as backup/restore, etc."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"edit_log_port"}),(0,s.jsx)(r.td,{children:"9010"}),(0,s.jsx)(r.td,{children:"The port used for communication between FE Groups (Master, Follower, Observer)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"edit_log_roll_num"}),(0,s.jsx)(r.td,{children:"50000"}),(0,s.jsx)(r.td,{children:"Split size of image log"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"meta_delay_toleration_second"}),(0,s.jsx)(r.td,{children:"300"}),(0,s.jsx)(r.td,{children:"Maximum metadata lag time tolerated by non-leader nodes"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"master_sync_policy"}),(0,s.jsx)(r.td,{children:"SYNC"}),(0,s.jsx)(r.td,{children:"Swipe method for leader\u2019s log, SYNC by default"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"replica_sync_policy"}),(0,s.jsx)(r.td,{children:"SYNC"}),(0,s.jsx)(r.td,{children:"Swipe method for follower\u2019s log,  SYNC by default"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"replica_ack_policy"}),(0,s.jsx)(r.td,{children:"SIMPLE_MAJORITY"}),(0,s.jsx)(r.td,{children:"The form in which logs are considered valid. The default is for the majority to return a confirmation message, which is considered to be in effect"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"bdbje_heartbeat_timeout_second"}),(0,s.jsx)(r.td,{children:"30"}),(0,s.jsx)(r.td,{children:"The interval for BDBJE heartbeat timeout"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"bdbje_lock_timeout_second"}),(0,s.jsx)(r.td,{children:"1"}),(0,s.jsx)(r.td,{children:"The interval for BDBJE lock timeout"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"txn_rollback_limit"}),(0,s.jsx)(r.td,{children:"100"}),(0,s.jsx)(r.td,{children:"the upper limit of transaction rollback"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"frontend_address"}),(0,s.jsx)(r.td,{children:"0.0.0.0"}),(0,s.jsx)(r.td,{children:"FE IP address"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"priority_networks"}),(0,s.jsx)(r.td,{children:"empty string"}),(0,s.jsx)(r.td,{children:"Specify BE IP address in the form of CIDR 10.10.10.0/24 for machines with multiple IPs"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"metadata_failure_recovery"}),(0,s.jsx)(r.td,{children:"false"}),(0,s.jsx)(r.td,{children:"Forced reset of FE metadata. Use with caution"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"ignore_meta_check"}),(0,s.jsx)(r.td,{children:"false"}),(0,s.jsx)(r.td,{children:"Ignore the metadata lag"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"max_bdbje_clock_delta_ms"}),(0,s.jsx)(r.td,{children:"5000"}),(0,s.jsx)(r.td,{children:"Maximum tolerated time offset between leader and non-leader"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"http_port"}),(0,s.jsx)(r.td,{children:"8030"}),(0,s.jsx)(r.td,{children:"Port of Http Server"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"http_backlog_num"}),(0,s.jsx)(r.td,{children:"1024"}),(0,s.jsx)(r.td,{children:"HttpServer port backlog"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"thrift_backlog_num"}),(0,s.jsx)(r.td,{children:"1024"}),(0,s.jsx)(r.td,{children:"ThriftServer port backlog"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"rpc_port"}),(0,s.jsx)(r.td,{children:"9020"}),(0,s.jsx)(r.td,{children:"Thrift server port of FE"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"query_port"}),(0,s.jsx)(r.td,{children:"9030"}),(0,s.jsx)(r.td,{children:"MySQL server port of FE"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"mysql_service_nio_enabled"}),(0,s.jsx)(r.td,{children:"false"}),(0,s.jsx)(r.td,{children:"Whether the nio is enabled for the service connected to FE"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"mysql_service_io_threads_num"}),(0,s.jsx)(r.td,{children:"false"}),(0,s.jsx)(r.td,{children:"The number of threads of the service connected to FE"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"auth_token"}),(0,s.jsx)(r.td,{children:"empty string"}),(0,s.jsx)(r.td,{children:"Whether the token is enabled automatically"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"tablet_create_timeout_second"}),(0,s.jsx)(r.td,{children:"1"}),(0,s.jsx)(r.td,{children:"Timeout for table creation"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"max_create_table_timeout_second"}),(0,s.jsx)(r.td,{children:"60"}),(0,s.jsx)(r.td,{children:"Maximum timeout for table creation"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"publish_version_timeout_second"}),(0,s.jsx)(r.td,{children:"30"}),(0,s.jsx)(r.td,{children:"Timeout for version to be published"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"publish_version_interval_ms"}),(0,s.jsx)(r.td,{children:"10"}),(0,s.jsx)(r.td,{children:"Interval for version to be published"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"load_straggler_wait_second"}),(0,s.jsx)(r.td,{children:"300"}),(0,s.jsx)(r.td,{children:"Maximum tolerated import lag time for BE replications, beyond which cloning will be performed"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"max_layout_length_per_row"}),(0,s.jsx)(r.td,{children:"100000"}),(0,s.jsx)(r.td,{children:"maximum length of a single row, 100KB"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"load_checker_interval_second"}),(0,s.jsx)(r.td,{children:"5"}),(0,s.jsx)(r.td,{children:"Interval for import polling"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"broker_load_default_timeout_second"}),(0,s.jsx)(r.td,{children:"14400"}),(0,s.jsx)(r.td,{children:"Timeout for Broker Load, 4 hours by default"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"mini_load_default_timeout_second"}),(0,s.jsx)(r.td,{children:"3600"}),(0,s.jsx)(r.td,{children:"Timeout for small batch import, 1 hour by default"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"insert_load_default_timeout_second"}),(0,s.jsx)(r.td,{children:"3600"}),(0,s.jsx)(r.td,{children:"Timeout for Insert Into statement, 1 hour by default"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"stream_load_default_timeout_second"}),(0,s.jsx)(r.td,{children:"600"}),(0,s.jsx)(r.td,{children:"Timeout for StreamLoad, 10 minutes by default"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"max_load_timeout_second"}),(0,s.jsx)(r.td,{children:"259200"}),(0,s.jsx)(r.td,{children:"Applicable to all imports, maximum timeout, 3 days by default"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"min_load_timeout_second"}),(0,s.jsx)(r.td,{children:"1"}),(0,s.jsx)(r.td,{children:"Applicable to all imports, minimum timeout, 1 second by default"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"desired_max_waiting_jobs"}),(0,s.jsx)(r.td,{children:"100"}),(0,s.jsx)(r.td,{children:"Max_waiting_jobs for all tasks, including table creation, import, schema change"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"max_running_txn_num_per_db"}),(0,s.jsx)(r.td,{children:"100"}),(0,s.jsx)(r.td,{children:"The number of concurrent import jobs"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"async_load_task_pool_size"}),(0,s.jsx)(r.td,{children:"10"}),(0,s.jsx)(r.td,{children:"The size of the thread pool for import job execution"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"tablet_delete_timeout_second"}),(0,s.jsx)(r.td,{children:"2"}),(0,s.jsx)(r.td,{children:"Timeout for table deletion"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"capacity_used_percent_high_water"}),(0,s.jsx)(r.td,{children:"0.75"}),(0,s.jsx)(r.td,{children:"Measurements of disk capacity used on Backend. Try not to send creation or clone tasks to this tablet when this parameter exceeds 0.75, until it is back to normal"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"alter_table_timeout_second"}),(0,s.jsx)(r.td,{children:"86400"}),(0,s.jsx)(r.td,{children:"Timeout for schema change"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"max_backend_down_time_second"}),(0,s.jsx)(r.td,{children:"3600"}),(0,s.jsx)(r.td,{children:"Maximum time for BE to rejoin after it disconnects to FE"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"storage_cooldown_second"}),(0,s.jsx)(r.td,{children:"2592000"}),(0,s.jsx)(r.td,{children:"Duration of media migration, 30 days by default"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"catalog_trash_expire_second"}),(0,s.jsx)(r.td,{children:"86400"}),(0,s.jsx)(r.td,{children:"Length of time that metadata remains in the recycle bin after deleting a table/database, beyond which data cannot be recovered"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"min_bytes_per_broker_scanner"}),(0,s.jsx)(r.td,{children:"67108864"}),(0,s.jsx)(r.td,{children:"Minimum amount of data to be processed by a single instance, 64MB by default"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"max_broker_concurrency"}),(0,s.jsx)(r.td,{children:"100"}),(0,s.jsx)(r.td,{children:"Maximum number of concurrent instances for a single task, 10 by default"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"load_parallel_instance_num"}),(0,s.jsx)(r.td,{children:"1"}),(0,s.jsx)(r.td,{children:"Number of concurrent instances on a single BE, 1 by default"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"export_checker_interval_second"}),(0,s.jsx)(r.td,{children:"5"}),(0,s.jsx)(r.td,{children:"Interval for exporting thread polling"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"export_running_job_num_limit"}),(0,s.jsx)(r.td,{children:"5"}),(0,s.jsx)(r.td,{children:"Maximum number of exporting jobs"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"export_task_default_timeout_second"}),(0,s.jsx)(r.td,{children:"7200"}),(0,s.jsx)(r.td,{children:"Timeout for export job, 2 hours by default"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"export_max_bytes_per_be_per_task"}),(0,s.jsx)(r.td,{children:"268435456"}),(0,s.jsx)(r.td,{children:"Maximum amount of data exported by a single export job on a single be, 256M by default"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"export_task_pool_size"}),(0,s.jsx)(r.td,{children:"5"}),(0,s.jsx)(r.td,{children:"Size of export task thread pool, 5 by default"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"consistency_check_start_time"}),(0,s.jsx)(r.td,{children:"23"}),(0,s.jsx)(r.td,{children:"The start time for FE to initiate replica consistency check"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"consistency_check_end_time"}),(0,s.jsx)(r.td,{children:"4"}),(0,s.jsx)(r.td,{children:"The end time for FE to initiate replica consistency check"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"check_consistency_default_timeout_second"}),(0,s.jsx)(r.td,{children:"600"}),(0,s.jsx)(r.td,{children:"Timeout for replica consistency check"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"qe_max_connection"}),(0,s.jsx)(r.td,{children:"1024"}),(0,s.jsx)(r.td,{children:"Maximum number of connections received on the FE, for all users"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"max_conn_per_user"}),(0,s.jsx)(r.td,{children:"100"}),(0,s.jsx)(r.td,{children:"Maximum number of connections that a single user can handle"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"query_colocate_join_memory_limit_penalty_factor"}),(0,s.jsx)(r.td,{children:"8"}),(0,s.jsx)(r.td,{children:"Memory limit for Colocate Join"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"disable_colocate_join"}),(0,s.jsx)(r.td,{children:"false"}),(0,s.jsx)(r.td,{children:"Colocate Join is not enabled"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"expr_children_limit"}),(0,s.jsx)(r.td,{children:"10000"}),(0,s.jsx)(r.td,{children:"The number of in's that can be involved in a query"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"expr_depth_limit"}),(0,s.jsx)(r.td,{children:"3000"}),(0,s.jsx)(r.td,{})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"locale"}),(0,s.jsx)(r.td,{children:"zh_CN.UTF-8"}),(0,s.jsx)(r.td,{children:"Character set"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"remote_fragment_exec_timeout_ms"}),(0,s.jsx)(r.td,{children:"5000"}),(0,s.jsx)(r.td,{children:"RPC timeout for FE sending query planning, not involving task execution"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"max_query_retry_time"}),(0,s.jsx)(r.td,{children:"2"}),(0,s.jsx)(r.td,{children:"The number of query retries on FE"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"catalog_try_lock_timeout_ms"}),(0,s.jsx)(r.td,{children:"5000"}),(0,s.jsx)(r.td,{children:"Timeout for Catalog Lock fetch"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"disable_load_job"}),(0,s.jsx)(r.td,{children:"false"}),(0,s.jsx)(r.td,{children:"No import job is received, which is a stopgap measure when the cluster fails"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"es_state_sync_interval_second"}),(0,s.jsx)(r.td,{children:"10"}),(0,s.jsx)(r.td,{children:"Interval for FE to fetch Elastic Search Index"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"tablet_repair_delay_factor_second"}),(0,s.jsx)(r.td,{children:"60"}),(0,s.jsx)(r.td,{children:"Interval for replica repair controlled by FE"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"max_routine_load_job_num"}),(0,s.jsx)(r.td,{children:"100"}),(0,s.jsx)(r.td,{children:"maximum number of routine load jobs"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"max_routine_load_task_concurrent_num"}),(0,s.jsx)(r.td,{children:"5"}),(0,s.jsx)(r.td,{children:"Maximum number of concurrent execution tasks per routine load job"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"max_routine_load_task_num_per_be"}),(0,s.jsx)(r.td,{children:"5"}),(0,s.jsx)(r.td,{children:"Maximum number of concurrent  routine load tasks per BE, which needs to be less than or equal to the number specified in the configuration"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"max_routine_load_batch_size"}),(0,s.jsx)(r.td,{children:"524288000"}),(0,s.jsx)(r.td,{children:"The maximum amount of data to import per routine load task, default by 500M"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"routine_load_task_consume_second"}),(0,s.jsx)(r.td,{children:"3"}),(0,s.jsx)(r.td,{children:"Maximum time to consume data per routine load task, default by 3s"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"routine_load_task_timeout_second"}),(0,s.jsx)(r.td,{children:"15"}),(0,s.jsx)(r.td,{children:"Timeout for  routine load task, default by 15s"})]})]})]}),"\n",(0,s.jsx)(r.h2,{id:"be-configuration-items",children:"BE Configuration Items"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Configuration item"}),(0,s.jsx)(r.th,{children:"Default"}),(0,s.jsx)(r.th,{children:"Role"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"be_port"}),(0,s.jsx)(r.td,{children:"9060"}),(0,s.jsx)(r.td,{children:"Port of thrift server on BE, used to receive requests from FE"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"brpc_port"}),(0,s.jsx)(r.td,{children:"8060"}),(0,s.jsx)(r.td,{children:"Port of BRPC to view some network statistics of BRPC"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"brpc_num_threads"}),(0,s.jsx)(r.td,{children:"-1"}),(0,s.jsx)(r.td,{children:"The number of bthreads of BRPC, -1 means the same as the number of CPU cores"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"priority_networks"}),(0,s.jsx)(r.td,{children:"empty string"}),(0,s.jsx)(r.td,{children:"Specify BE IP address in the form of CIDR 10.10.10.0/24 for machines with multiple IPs"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"heartbeat_service_port"}),(0,s.jsx)(r.td,{children:"9050"}),(0,s.jsx)(r.td,{children:"The heartbeat service port (thrift) where users receive heartbeats from FE"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"heartbeat_service_thread_count"}),(0,s.jsx)(r.td,{children:"1"}),(0,s.jsx)(r.td,{children:"The number of heartbeat threads"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"create_tablet_worker_count"}),(0,s.jsx)(r.td,{children:"3"}),(0,s.jsx)(r.td,{children:"The number of threads creating a tablet"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"drop_tablet_worker_count"}),(0,s.jsx)(r.td,{children:"3"}),(0,s.jsx)(r.td,{children:"The number of threads deleting a tablet"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"push_worker_count_normal_priority"}),(0,s.jsx)(r.td,{children:"3"}),(0,s.jsx)(r.td,{children:"The number of threads importing and processing NORMAL priority tasks"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"push_worker_count_high_priority"}),(0,s.jsx)(r.td,{children:"3"}),(0,s.jsx)(r.td,{children:"The number of threads importing and processing HIGH priority tasks"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"publish_version_worker_count"}),(0,s.jsx)(r.td,{children:"2"}),(0,s.jsx)(r.td,{children:"The number of threads taking effect"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"clear_transaction_task_worker_count"}),(0,s.jsx)(r.td,{children:"1"}),(0,s.jsx)(r.td,{children:"The number of threads cleaning up transactions"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"alter_tablet_worker_count"}),(0,s.jsx)(r.td,{children:"3"}),(0,s.jsx)(r.td,{children:"The number of threads processing schema change"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"clone_worker_count"}),(0,s.jsx)(r.td,{children:"3"}),(0,s.jsx)(r.td,{children:"The number of threads cloning"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"storage_medium_migrate_count"}),(0,s.jsx)(r.td,{children:"1"}),(0,s.jsx)(r.td,{children:"Then number of threads migrating SATA to SSD"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"check_consistency_worker_count"}),(0,s.jsx)(r.td,{children:"1"}),(0,s.jsx)(r.td,{children:"Calculate checksum for tablet (checksum)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"report_task_interval_seconds"}),(0,s.jsx)(r.td,{children:"10"}),(0,s.jsx)(r.td,{children:"The interval of reporting individual tasks, including table creation, table deletion, import, and schema change"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"report_disk_state_interval_seconds"}),(0,s.jsx)(r.td,{children:"60"}),(0,s.jsx)(r.td,{children:"The interval of reporting the state of each disk, the amount of data on it, etc."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"report_tablet_interval_seconds"}),(0,s.jsx)(r.td,{children:"60"}),(0,s.jsx)(r.td,{children:"The interval of reporting the state of each tablet. Report the latest version of each tablet"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"alter_tablet_timeout_seconds"}),(0,s.jsx)(r.td,{children:"86400"}),(0,s.jsx)(r.td,{children:"Timeout of schema change"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"sys_log_dir"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"${STARROCKS_HOME}/log"})}),(0,s.jsx)(r.td,{children:"The directory where logs, including INFO, WARNING, ERROR, FATAL, etc. are stored"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"user_function_dir"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"${STARROCKS_HOME}/lib/udf"})}),(0,s.jsx)(r.td,{children:"The directory where UDF programs are stored"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"sys_log_level"}),(0,s.jsx)(r.td,{children:"INFO"}),(0,s.jsx)(r.td,{children:"log level\uff0cINFO < WARNING < ERROR < FATAL"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"sys_log_roll_mode"}),(0,s.jsx)(r.td,{children:"SIZE-MB-1024"}),(0,s.jsx)(r.td,{children:"The size of the log split, per GB"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"sys_log_roll_num"}),(0,s.jsx)(r.td,{children:"10"}),(0,s.jsx)(r.td,{children:"The number of logs to keep"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"sys_log_verbose_modules"}),(0,s.jsx)(r.td,{children:"*"}),(0,s.jsx)(r.td,{children:"Modules for log printing, write olap to print only the logs that are under olap modules"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"sys_log_verbose_level"}),(0,s.jsx)(r.td,{children:"10"}),(0,s.jsx)(r.td,{children:"The level of the log display, used to control log output starting with VLOG in the code"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"log_buffer_level"}),(0,s.jsx)(r.td,{children:"empty string"}),(0,s.jsx)(r.td,{children:"Policy for log flushing. The default is to keep it in memory"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"num_threads_per_core"}),(0,s.jsx)(r.td,{children:"3"}),(0,s.jsx)(r.td,{children:"Number of threads started per CPU core"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"compress_rowbatches"}),(0,s.jsx)(r.td,{children:"true"}),(0,s.jsx)(r.td,{children:"Whether to compress RowBatch (which supports data transfer between query layers) for RPC communication between BEs"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"serialize_batch"}),(0,s.jsx)(r.td,{children:"false"}),(0,s.jsx)(r.td,{children:"Whether to serialize batches for RPC communication between BEss"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"status_report_interval"}),(0,s.jsx)(r.td,{children:"5"}),(0,s.jsx)(r.td,{children:"Interval for reporting query profile, used by FE to collect query statistics"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"starrocks_scanner_thread_pool_thread_num"}),(0,s.jsx)(r.td,{children:"48"}),(0,s.jsx)(r.td,{children:"The number of threads in the storage engine that concurrently scan the disk. Threads are uniformly managed in the thread pool"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"starrocks _scanner_thread_pool_queue_size"}),(0,s.jsx)(r.td,{children:"102400"}),(0,s.jsx)(r.td,{children:"The maximum number of tasks received by the storage engine"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"starrocks _scan_range_row_count"}),(0,s.jsx)(r.td,{children:"524288"}),(0,s.jsx)(r.td,{children:"The granularity of the storage engine to split query tasks, default by 512K"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"starrocks _scanner_queue_size"}),(0,s.jsx)(r.td,{children:"1024"}),(0,s.jsx)(r.td,{children:"The number of scan tasks supported by the storage engine"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"starrocks _scanner_row_num"}),(0,s.jsx)(r.td,{children:"16384"}),(0,s.jsx)(r.td,{children:"The maximum number of data rows to be returned in a single execution per scan thread"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"starrocks _max_scan_key_num"}),(0,s.jsx)(r.td,{children:"1024"}),(0,s.jsx)(r.td,{children:"The maximum number of scan keys that can be split by a query"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"column_dictionary_key_ratio_threshold"}),(0,s.jsx)(r.td,{children:"0"}),(0,s.jsx)(r.td,{children:"The ratio of string type, less than which the dictionary compression algorithm will be applied"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"column_dictionary_key_size_threshold"}),(0,s.jsx)(r.td,{children:"0"}),(0,s.jsx)(r.td,{children:"The size of the column, less than which the dictionary compression algorithm will be applied"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"memory_limitation_per_thread_for_schema_change"}),(0,s.jsx)(r.td,{children:"2"}),(0,s.jsx)(r.td,{children:"The maximum amount of memory allowed for a single schema change task"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"max_unpacked_row_block_size"}),(0,s.jsx)(r.td,{children:"104857600"}),(0,s.jsx)(r.td,{children:"The maximum number of bytes for a single block, default by 100MB"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"file_descriptor_cache_clean_interval"}),(0,s.jsx)(r.td,{children:"3600"}),(0,s.jsx)(r.td,{children:"Interval for the file descriptor to clean up cache"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"disk_stat_monitor_interval"}),(0,s.jsx)(r.td,{children:"5"}),(0,s.jsx)(r.td,{children:"Interval for disk status detection"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"unused_rowset_monitor_interval"}),(0,s.jsx)(r.td,{children:"30"}),(0,s.jsx)(r.td,{children:"Interval for expired Rowset cleanup"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"storage_root_path"}),(0,s.jsx)(r.td,{children:"empty string"}),(0,s.jsx)(r.td,{children:"Directory where data is stored"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"max_percentage_of_error_disk"}),(0,s.jsx)(r.td,{children:"0"}),(0,s.jsx)(r.td,{children:"Disk errors reach a certain percentage then BE exits"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"default_num_rows_per_data_block"}),(0,s.jsx)(r.td,{children:"1024"}),(0,s.jsx)(r.td,{children:"Number of data rows per block"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"max_tablet_num_per_shard"}),(0,s.jsx)(r.td,{children:"1024"}),(0,s.jsx)(r.td,{children:"Number of tablets per shard, used to divide tablets and prevent too many tablet subdirectories in a single directory"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"pending_data_expire_time_sec"}),(0,s.jsx)(r.td,{children:"1800"}),(0,s.jsx)(r.td,{children:"The maximum amount of time that pending data can be kept in the storage engine"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"inc_rowset_expired_sec"}),(0,s.jsx)(r.td,{children:"1800"}),(0,s.jsx)(r.td,{children:"The maximum amount of time that valid data can be kept in the storage engine for incremental cloning"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"max_garbage_sweep_interval"}),(0,s.jsx)(r.td,{children:"3600"}),(0,s.jsx)(r.td,{children:"Maximum interval for disk to perform garbage cleanup"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"min_garbage_sweep_interval"}),(0,s.jsx)(r.td,{children:"180"}),(0,s.jsx)(r.td,{children:"Minimum interval for disk to perform garbage cleanup"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"snapshot_expire_time_sec"}),(0,s.jsx)(r.td,{children:"172800"}),(0,s.jsx)(r.td,{children:"Interval for snapshot file cleanup, default by 48 hours"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"trash_file_expire_time_sec"}),(0,s.jsx)(r.td,{children:"259200"}),(0,s.jsx)(r.td,{children:"Interval for recycle bin cleanup, default by 72 hours"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"row_nums_check"}),(0,s.jsx)(r.td,{children:"true"}),(0,s.jsx)(r.td,{children:"Comparison of Rowset rows that are before and after compaction"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"file_descriptor_cache_capacity"}),(0,s.jsx)(r.td,{children:"32768"}),(0,s.jsx)(r.td,{children:"Cache capacity of the file descriptor"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"min_file_descriptor_number"}),(0,s.jsx)(r.td,{children:"60000"}),(0,s.jsx)(r.td,{children:"The lower limit requirement of the file descriptor for the BE process"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"index_stream_cache_capacity"}),(0,s.jsx)(r.td,{children:"10737418240"}),(0,s.jsx)(r.td,{children:"Cache capacity of BloomFilter/Min/Max statistics"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"storage_page_cache_limit"}),(0,s.jsx)(r.td,{children:"20G"}),(0,s.jsx)(r.td,{children:"Capacity of PageCache"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"disable_storage_page_cache"}),(0,s.jsx)(r.td,{children:"false"}),(0,s.jsx)(r.td,{children:"Whether PageCache is enabled"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"base_compaction_start_hour"}),(0,s.jsx)(r.td,{children:"20"}),(0,s.jsx)(r.td,{children:"Start time of BaseCompaction"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"base_compaction_end_hour"}),(0,s.jsx)(r.td,{children:"7"}),(0,s.jsx)(r.td,{children:"End time of BaseCompaction"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"base_compaction_check_interval_seconds"}),(0,s.jsx)(r.td,{children:"60"}),(0,s.jsx)(r.td,{children:"Interval of BaseCompaction thread polling"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"base_compaction_num_cumulative_deltas"}),(0,s.jsx)(r.td,{children:"5"}),(0,s.jsx)(r.td,{children:"BaseCompaction trigger: the number of Cumulative files needed to be reached"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"base_compaction_num_threads_per_disk"}),(0,s.jsx)(r.td,{children:"1"}),(0,s.jsx)(r.td,{children:"Number of BaseCompaction threads per disk"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"base_cumulative_delta_ratio"}),(0,s.jsx)(r.td,{children:"0.3"}),(0,s.jsx)(r.td,{children:"BaseCompaction trigger: The target ratio between cumulative and base files"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"base_compaction_interval_seconds_since_last_operation"}),(0,s.jsx)(r.td,{children:"86400"}),(0,s.jsx)(r.td,{children:"BaseCompaction trigger: The interval for triggering the next BaseCompaction"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"base_compaction_write_mbytes_per_sec"}),(0,s.jsx)(r.td,{children:"5"}),(0,s.jsx)(r.td,{children:"Speed limit of BaseCompaction to write disk"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"cumulative_compaction_check_interval_seconds"}),(0,s.jsx)(r.td,{children:"10"}),(0,s.jsx)(r.td,{children:"Interval of CumulativeCompaction thread polling"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"min_cumulative_compaction_num_singleton_deltas"}),(0,s.jsx)(r.td,{children:"5"}),(0,s.jsx)(r.td,{children:"CumulativeCompaction trigger: the lower limit on the number of Singleton files to be reached"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"max_cumulative_compaction_num_singleton_deltas"}),(0,s.jsx)(r.td,{children:"1000"}),(0,s.jsx)(r.td,{children:"CumulativeCompaction trigger: the upper limit on the number of Singleton files to be reached"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"cumulative_compaction_num_threads_per_disk"}),(0,s.jsx)(r.td,{children:"1"}),(0,s.jsx)(r.td,{children:"Number of CumulativeCompaction threads per disk"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"cumulative_compaction_budgeted_bytes"}),(0,s.jsx)(r.td,{children:"104857600"}),(0,s.jsx)(r.td,{children:"BaseCompaction trigger: The sum limit of Singleton file size, default by 100MB"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"cumulative_compaction_write_mbytes_per_sec"}),(0,s.jsx)(r.td,{children:"100"}),(0,s.jsx)(r.td,{children:"Speed limit of CumulativeCompaction to write disk"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"min_compaction_failure_interval_sec"}),(0,s.jsx)(r.td,{children:"600"}),(0,s.jsx)(r.td,{children:"Interval for Tablet Compaction to be scheduled again after a failure."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"max_compaction_concurrency"}),(0,s.jsx)(r.td,{children:"-1"}),(0,s.jsx)(r.td,{children:"Maximum concurrency for BaseCompaction and CumulativeCompaction.-1 indicates no limit"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"webserver_port"}),(0,s.jsx)(r.td,{children:"8040"}),(0,s.jsx)(r.td,{children:"Http Server port"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"webserver_num_workers"}),(0,s.jsx)(r.td,{children:"5"}),(0,s.jsx)(r.td,{children:"Number of Http Server threads"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"periodic_counter_update_period_ms"}),(0,s.jsx)(r.td,{children:"500"}),(0,s.jsx)(r.td,{children:"Interval for getting counter statistics"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"load_data_reserve_hours"}),(0,s.jsx)(r.td,{children:"4"}),(0,s.jsx)(r.td,{children:"Length of time to retain files generated by small batch import"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"load_error_log_reserve_hours"}),(0,s.jsx)(r.td,{children:"48"}),(0,s.jsx)(r.td,{children:"Length of time to retain imported data information"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"number_tablet_writer_threads"}),(0,s.jsx)(r.td,{children:"16"}),(0,s.jsx)(r.td,{children:"Number of threads for streaming imports"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"streaming_load_max_mb"}),(0,s.jsx)(r.td,{children:"10240"}),(0,s.jsx)(r.td,{children:"The maximum size of a single file for stream load"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"streaming_load_rpc_max_alive_time_sec"}),(0,s.jsx)(r.td,{children:"1200"}),(0,s.jsx)(r.td,{children:"Timeout for RPC of stream load"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"tablet_writer_rpc_timeout_sec"}),(0,s.jsx)(r.td,{children:"600"}),(0,s.jsx)(r.td,{children:"Timeout for RPC of TabletWriter"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"fragment_pool_thread_num"}),(0,s.jsx)(r.td,{children:"64"}),(0,s.jsx)(r.td,{children:"Number of query threads. Default by 64 threads, subsequent queries will dynamically create threads"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"fragment_pool_queue_size"}),(0,s.jsx)(r.td,{children:"1024"}),(0,s.jsx)(r.td,{children:"The maximum number of queries that can be processed on a single node"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"enable_partitioned_hash_join"}),(0,s.jsx)(r.td,{children:"false"}),(0,s.jsx)(r.td,{children:"Use PartitionHashJoin"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"enable_partitioned_aggregation"}),(0,s.jsx)(r.td,{children:"true"}),(0,s.jsx)(r.td,{children:"Use PartitionAggregation"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"enable_token_check"}),(0,s.jsx)(r.td,{children:"true"}),(0,s.jsx)(r.td,{children:"Token check is enabled"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"enable_prefetch"}),(0,s.jsx)(r.td,{children:"true"}),(0,s.jsx)(r.td,{children:"Query prefetching"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"load_process_max_memory_limit_bytes"}),(0,s.jsx)(r.td,{children:"107374182400"}),(0,s.jsx)(r.td,{children:"The maximum amount of memory occupied by all import threads on a single node, 100GB by default"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"load_process_max_memory_limit_percent"}),(0,s.jsx)(r.td,{children:"30"}),(0,s.jsx)(r.td,{children:"The maximum percentage  of the memory occupied by all import threads on a single node"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"sync_tablet_meta"}),(0,s.jsx)(r.td,{children:"false"}),(0,s.jsx)(r.td,{children:"Whether the storage engine is on sync retention to disk."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"thrift_rpc_timeout_ms"}),(0,s.jsx)(r.td,{children:"5000"}),(0,s.jsx)(r.td,{children:"Timeout of Thrift"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"txn_commit_rpc_timeout_ms"}),(0,s.jsx)(r.td,{children:"10000"}),(0,s.jsx)(r.td,{children:"Number of thread pools routinely imported"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"routine_load_thread_pool_size"}),(0,s.jsx)(r.td,{children:"10"}),(0,s.jsx)(r.td,{children:"Number of thread pools of routine load"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"tablet_meta_checkpoint_min_new_rowsets_num"}),(0,s.jsx)(r.td,{children:"10"}),(0,s.jsx)(r.td,{children:"Minimum number of Rowsets for TabletMeta Checkpoint"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"tablet_meta_checkpoint_min_interval_secs"}),(0,s.jsx)(r.td,{children:"600"}),(0,s.jsx)(r.td,{children:"Interval of TabletMeta Checkpoint thread polling"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"default_rowset_type"}),(0,s.jsx)(r.td,{children:"ALPHA"}),(0,s.jsx)(r.td,{children:"The format of the storage engine, ALPHA by default, will be replaced with BETA"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"brpc_max_body_size"}),(0,s.jsx)(r.td,{children:"209715200"}),(0,s.jsx)(r.td,{children:"The maximum packet size of BRPC, 200MB by default"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"max_runnings_transactions"}),(0,s.jsx)(r.td,{children:"2000"}),(0,s.jsx)(r.td,{children:"The maximum number of transactions supported by the storage engine"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"tablet_map_shard_size"}),(0,s.jsx)(r.td,{children:"1"}),(0,s.jsx)(r.td,{children:"Size of tablet map shard"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"enable_bitmap_union_disk_format_with_set"}),(0,s.jsx)(r.td,{children:"False"}),(0,s.jsxs)(r.td,{children:["New storage format for Bitmap, which can optimize the performance of ",(0,s.jsx)(r.code,{children:"bitmap_union"})]})]})]})]}),"\n",(0,s.jsx)(r.h2,{id:"broker-configuration-parameters",children:"Broker configuration parameters"}),"\n",(0,s.jsx)(r.p,{children:"Reference [Broker load import](... /loading/BrokerLoad.md)"}),"\n",(0,s.jsx)(r.h2,{id:"system-parameters",children:"System parameters"}),"\n",(0,s.jsx)(r.p,{children:"Linux Kernel"}),"\n",(0,s.jsx)(r.p,{children:"Recommended kernel is 3.10 or higher."}),"\n",(0,s.jsx)(r.p,{children:"CPU"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.code,{children:"Scaling governor"})," is used to control the CPU consumption. The default mode is ",(0,s.jsx)(r.code,{children:"on-demand"}),". The ",(0,s.jsx)(r.code,{children:"performance"})," mode has the highest consumption rate and the best performance, which is recommended for StarRocks deployment."]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-shell",children:"echo 'performance' | sudo tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor\n"})}),"\n",(0,s.jsx)(r.p,{children:"memory"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.strong,{children:"Overcommit"})}),"\n"]}),"\n",(0,s.jsxs)(r.p,{children:["It is recommended to use ",(0,s.jsx)(r.code,{children:"Overcommit"}),".\nIt is recommended to set ",(0,s.jsx)(r.code,{children:"cat /proc/sys/vm/overcommit_memory"})," to 1."]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-shell",children:"echo 1 | sudo tee /proc/sys/vm/overcommit_memory\n"})}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.strong,{children:"Huge Pages"})}),"\n"]}),"\n",(0,s.jsx)(r.p,{children:"Do not transparent huge pages, which will interfere with the memory allocator and cause performance degradation."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-shell",children:"echo 'madvise' | sudo tee /sys/kernel/mm/transparent_hugepage/enabled\n"})}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.strong,{children:"Swappiness"})}),"\n"]}),"\n",(0,s.jsx)(r.p,{children:"Turn off the swap area to eliminate performance disturbances when swapping memory to virtual memory."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-shell",children:"echo 0 | sudo tee /proc/sys/vm/swappiness\n"})}),"\n",(0,s.jsx)(r.p,{children:"Disk"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.strong,{children:"SATA"})}),"\n"]}),"\n",(0,s.jsx)(r.p,{children:"The mq-deadline scheduling algorithm will sort and merge I/O requests, which is suitable for SATA disks."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-shell",children:"echo mq-deadline | sudo tee /sys/block/vdb/queue/scheduler\n"})}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.strong,{children:"SSD/NVME"})}),"\n"]}),"\n",(0,s.jsx)(r.p,{children:"The kyber scheduling algorithm is suitable for devices with low latency, such as NVME/SSD."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-shell",children:"echo kyber | sudo tee /sys/block/vdb/queue/scheduler\n"})}),"\n",(0,s.jsx)(r.p,{children:"If the system does not support kyber, it is recommended to use the none scheduling algorithm"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-shell",children:"echo none | sudo tee /sys/block/vdb/queue/scheduler\n"})}),"\n",(0,s.jsx)(r.p,{children:"Network"}),"\n",(0,s.jsx)(r.p,{children:"Please use at least a 10 GB network. A 1 GB network will work but won\u2019t achieve expected performance. You can use iperf to test the system bandwidth."}),"\n",(0,s.jsx)(r.p,{children:"File System"}),"\n",(0,s.jsx)(r.p,{children:"It is recommended to use the Ext4 file system. You can check the mount type with relevant commands."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-shell",children:"df -Th\nFilesystem Type Size Used Avail Use% Mounted on\n/dev/vdb1 ext4 1008G 903G 55G 95% /home/disk1\n"})}),"\n",(0,s.jsx)(r.p,{children:"Other System Configuration"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.strong,{children:"tcp abort on overflow"})}),"\n"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-shell",children:"echo 1 | sudo tee /proc/sys/net/ipv4/tcp_abort_on_overflow\n"})}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.strong,{children:"somaxconn"})}),"\n"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-shell",children:"echo 1024 | sudo tee /proc/sys/net/core/somaxconn\n"})}),"\n",(0,s.jsx)(r.p,{children:"System resources"}),"\n",(0,s.jsxs)(r.p,{children:["System resources are the maximum resources the system can use. It\u2019s configured in ",(0,s.jsx)(r.code,{children:"/etc/security/limits.conf"}),". The resources include file descriptors, maximum number of processes, maximum memory usage, etc."]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.strong,{children:"File descriptors"})}),"\n"]}),"\n",(0,s.jsxs)(r.p,{children:["Run ",(0,s.jsx)(r.code,{children:"ulimit -n 65535"})," on the deployed machine to set the file descriptor to 65535. If the ulimit value fails after login, change ",(0,s.jsx)(r.code,{children:"UsePAM yes"})," in ",(0,s.jsx)(r.code,{children:"/etc/ssh/sshd_config"})," and restart the sshd service."]}),"\n",(0,s.jsx)(r.p,{children:"High concurrency configuration"}),"\n",(0,s.jsx)(r.p,{children:"If the cluster load is highly concurrent, it is recommended to add the following configuration"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-shell",children:"echo 120000 > /proc/sys/kernel/threads-max\necho 60000 > /proc/sys/vm/max_map_count\necho 200000 > /proc/sys/kernel/pid_max\n"})}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.strong,{children:"max user processes"})}),"\n"]}),"\n",(0,s.jsx)(r.p,{children:"ulimit -u 40960"})]})}const a=function(e={}){const{wrapper:r}=Object.assign({},(0,d.ah)(),e.components);return r?(0,s.jsx)(r,Object.assign({},e,{children:(0,s.jsx)(o,e)})):o(e)}},11151:(e,r,t)=>{t.d(r,{Zo:()=>l,ah:()=>n});var s=t(67294);const d=s.createContext({});function n(e){const r=s.useContext(d);return s.useMemo((()=>"function"==typeof e?e(r):{...r,...e}),[r,e])}const i={};function l({components:e,children:r,disableParentContext:t}){let l;return l=t?"function"==typeof e?e({}):e||i:n(e),s.createElement(d.Provider,{value:l},r)}}}]);