"use strict";(self.webpackChunkstarrocks=self.webpackChunkstarrocks||[]).push([[33046],{75229:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>h,frontMatter:()=>n,metadata:()=>i,toc:()=>l});var o=a(85893),r=a(11151);const n={displayed_sidebar:"English"},s="Broker Load FAQs",i={id:"faq/loading/Broker_load_faq",title:"Broker Load FAQs",description:"In Broker Load, can a task that has already been executed successfully (State: FINISHED) be executed again?",source:"@site/versioned_docs/version-2.0/faq/loading/Broker_load_faq.md",sourceDirName:"faq/loading",slug:"/faq/loading/Broker_load_faq",permalink:"/docs/2.0/faq/loading/Broker_load_faq",draft:!1,unlisted:!1,editUrl:"https://github.com/StarRocks/starrocks/edit/main/docs/faq/loading/Broker_load_faq.md",tags:[],version:"2.0",frontMatter:{displayed_sidebar:"English"},sidebar:"English",previous:{title:"SQL",permalink:"/docs/2.0/faq/Sql_faq"},next:{title:"DataX  FAQs",permalink:"/docs/2.0/faq/loading/DataX_faq"}},d={},l=[{value:"In Broker Load, can a task that has already been executed successfully (State: FINISHED) be executed again?",id:"in-broker-load-can-a-task-that-has-already-been-executed-successfully-state-finished-be-executed-again",level:2},{value:"Garbles in Broker Load",id:"garbles-in-broker-load",level:2},{value:"In Broker Load, hdfs data import exceptional date fields (+8h)",id:"in-broker-load-hdfs-data-import-exceptional-date-fields-8h",level:2},{value:"In Broker Load, orc data import failed. <code>ErrorMsg: type:ETL_RUN_FAIL; msg:Cannot cast &#39;&lt;slot 6&gt;&#39; from VARCHAR to ARRAY&lt;VARCHAR(30)&gt;</code>",id:"in-broker-load-orc-data-import-failed-errormsg-typeetl_run_fail-msgcannot-cast-slot-6-from-varchar-to-arrayvarchar30",level:2},{value:"No error is reported in Broker Load, but the data still cannot be queried",id:"no-error-is-reported-in-broker-load-but-the-data-still-cannot-be-queried",level:2}];function c(e){const t=Object.assign({h1:"h1",h2:"h2",p:"p",pre:"pre",code:"code",strong:"strong"},(0,r.ah)(),e.components);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"broker-load-faqs",children:"Broker Load FAQs"}),"\n",(0,o.jsx)(t.h2,{id:"in-broker-load-can-a-task-that-has-already-been-executed-successfully-state-finished-be-executed-again",children:"In Broker Load, can a task that has already been executed successfully (State: FINISHED) be executed again?"}),"\n",(0,o.jsx)(t.p,{children:"A successfully executed cannot be executed again. To execute the task again, you need to reinitiate it. This is because the imported labels are not reusable, avoiding loss or duplication of imported tasks. You can use show load to see the import history, then copy it, modify the label and re-import it."}),"\n",(0,o.jsx)(t.h2,{id:"garbles-in-broker-load",children:"Garbles in Broker Load"}),"\n",(0,o.jsx)(t.p,{children:"Issue description:"}),"\n",(0,o.jsx)(t.p,{children:"The import reports errors. Corresponding url errors show content garbles."}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-SQL",children:"Reason: column count mismatch, expect=6 real=1. src line: [$\u4ea4\u901a];\nzcI~\u8ddf\u56e2+v];   count mismatch, expect=6 real=2. src line: [\u79dfe\ufffdrD\ufffd\ufffd\u98df\u4f11\u95f2\u5a31\u4e50\n"})}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.strong,{children:"Solution:"})}),"\n",(0,o.jsx)(t.p,{children:"Wrong specification for format as. Change file type and reload the task."}),"\n",(0,o.jsx)(t.h2,{id:"in-broker-load-hdfs-data-import-exceptional-date-fields-8h",children:"In Broker Load, hdfs data import exceptional date fields (+8h)"}),"\n",(0,o.jsx)(t.p,{children:"Issue description:"}),"\n",(0,o.jsx)(t.p,{children:"Timezone was set to China time when the table was created and when brokerload is performed. The server is in UTC timezone. So the imported date fields gained 8 hours."}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.strong,{children:"Solution:"})}),"\n",(0,o.jsx)(t.p,{children:"Remove the timezone when creating the table."}),"\n",(0,o.jsxs)(t.h2,{id:"in-broker-load-orc-data-import-failed-errormsg-typeetl_run_fail-msgcannot-cast-slot-6-from-varchar-to-arrayvarchar30",children:["In Broker Load, orc data import failed. ",(0,o.jsx)(t.code,{children:"ErrorMsg: type:ETL_RUN_FAIL; msg:Cannot cast '<slot 6>' from VARCHAR to ARRAY<VARCHAR(30)>"})]}),"\n",(0,o.jsx)(t.p,{children:"Column names on both sides are not consistent in the source file and the StarRocks. Type inference within the system was performed on Set and failed on Cast. To resolve this, you can change the field names on both sides to be identical. After that, Set or Cast is not needed, thus making import successful."}),"\n",(0,o.jsx)(t.p,{children:"A successfully executed cannot be executed again. To execute the task again, you need to reinitiate it. This is because the imported labels are not reusable, avoiding loss or duplication of imported tasks. You can use show load to see the import history, then copy it, modify the label and re-import it."}),"\n",(0,o.jsx)(t.h2,{id:"no-error-is-reported-in-broker-load-but-the-data-still-cannot-be-queried",children:"No error is reported in Broker Load, but the data still cannot be queried"}),"\n",(0,o.jsx)(t.p,{children:"Broker Load is asynchronous. Successfully creating load statement does not guarantee successful import. You can use show load to view the current status and errmsg. Modify related contents and retry the task."}),"\n",(0,o.jsx)(t.p,{children:"Column names on both sides are not consistent in the source file and the StarRocks. Type inference within the system was performed on Set and failed on Cast. To resolve this, you can change the field names on both sides to be identical. After that, Set or Cast is not needed, thus making import successful."})]})}const h=function(e={}){const{wrapper:t}=Object.assign({},(0,r.ah)(),e.components);return t?(0,o.jsx)(t,Object.assign({},e,{children:(0,o.jsx)(c,e)})):c(e)}},11151:(e,t,a)=>{a.d(t,{Zo:()=>i,ah:()=>n});var o=a(67294);const r=o.createContext({});function n(e){const t=o.useContext(r);return o.useMemo((()=>"function"==typeof e?e(t):{...t,...e}),[t,e])}const s={};function i({components:e,children:t,disableParentContext:a}){let i;return i=a?"function"==typeof e?e({}):e||s:n(e),o.createElement(r.Provider,{value:i},t)}}}]);