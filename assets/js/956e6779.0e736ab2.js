"use strict";(self.webpackChunkstarrocks=self.webpackChunkstarrocks||[]).push([[28126],{39830:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>p,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var s=t(85893),i=t(11151);const a={displayed_sidebar:"English"},r="CAST",c={id:"sql-reference/sql-functions/cast",title:"CAST",description:"description",source:"@site/versioned_docs/version-2.2/sql-reference/sql-functions/cast.md",sourceDirName:"sql-reference/sql-functions",slug:"/sql-reference/sql-functions/cast",permalink:"/docs/2.2/sql-reference/sql-functions/cast",draft:!1,unlisted:!1,editUrl:"https://github.com/StarRocks/starrocks/edit/main/docs/sql-reference/sql-functions/cast.md",tags:[],version:"2.2",frontMatter:{displayed_sidebar:"English"},sidebar:"English",previous:{title:"to_bitmap",permalink:"/docs/2.2/sql-reference/sql-functions/bitmap-functions/to_bitmap"},next:{title:"md5",permalink:"/docs/2.2/sql-reference/sql-functions/crytographic-functions/md5"}},o={},l=[{value:"description",id:"description",level:2},{value:"Syntax",id:"syntax",level:3},{value:"example",id:"example",level:2},{value:"keyword",id:"keyword",level:2}];function d(e){const n=Object.assign({h1:"h1",h2:"h2",h3:"h3",pre:"pre",code:"code",p:"p",ol:"ol",li:"li",blockquote:"blockquote"},(0,i.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"cast",children:"CAST"}),"\n",(0,s.jsx)(n.h2,{id:"description",children:"description"}),"\n",(0,s.jsx)(n.h3,{id:"syntax",children:"Syntax"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-Haskell",children:"cast (input as type)\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Convert input to the specified (type) value. For example, ",(0,s.jsx)(n.code,{children:"cast (input as BIGINT)"}),"converts the current column input to a BIGINT type value."]}),"\n",(0,s.jsx)(n.h2,{id:"example",children:"example"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Convert a constant, or a column in a table."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-Plain",metastring:"Text",children:"MySQL > select cast (1 as BIGINT);\n+-------------------+\n| CAST(1 AS BIGINT) |\n+-------------------+\n|                 1 |\n+-------------------+\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Convert imported raw data"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'curl --location-trusted -u root: -T ~/user_data/bigint \\\n    -H "columns: tmp_k1, k1=cast(tmp_k1 as BIGINT)" \\\n    http://host:port/api/test/bigint/_stream_load\n'})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"Note: during import, since the original type is String, the data will be converted to NULL when cast the original data with floating point value, such as 12.0. StarRocks will not truncate the original data at present."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"If you want to force this type of raw data to be cast to int. Look at the following:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'curl --location-trusted -u root: -T ~/user_data/bigint \\\n    -H "columns: tmp_k1, k1=cast(cast(tmp_k1 as DOUBLE) as BIGINT)" \\\n    http://host:port/api/test/bigint/_stream_load\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-plain",metastring:"text",children:"MySQL > select cast(cast (\"11.2\" as double) as bigint);\n+----------------------------------------+\n| CAST(CAST('11.2' AS DOUBLE) AS BIGINT) |\n+----------------------------------------+\n|                                     11 |\n+----------------------------------------+\n1 row in set (0.00 sec)\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"keyword",children:"keyword"}),"\n",(0,s.jsx)(n.p,{children:"CAST"})]})}const p=function(e={}){const{wrapper:n}=Object.assign({},(0,i.ah)(),e.components);return n?(0,s.jsx)(n,Object.assign({},e,{children:(0,s.jsx)(d,e)})):d(e)}},11151:(e,n,t)=>{t.d(n,{Zo:()=>c,ah:()=>a});var s=t(67294);const i=s.createContext({});function a(e){const n=s.useContext(i);return s.useMemo((()=>"function"==typeof e?e(n):{...n,...e}),[n,e])}const r={};function c({components:e,children:n,disableParentContext:t}){let c;return c=t?"function"==typeof e?e({}):e||r:a(e),s.createElement(i.Provider,{value:c},n)}}}]);