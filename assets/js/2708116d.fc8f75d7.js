"use strict";(self.webpackChunkstarrocks=self.webpackChunkstarrocks||[]).push([[76858],{21311:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>i});var a=n(85893),o=n(11151);const s={},d="STREAM LOAD",r={id:"sql-reference/sql-statements/data-manipulation/STREAM LOAD",title:"STREAM LOAD",description:"Description",source:"@site/versioned_docs/version-2.5/sql-reference/sql-statements/data-manipulation/STREAM LOAD.md",sourceDirName:"sql-reference/sql-statements/data-manipulation",slug:"/sql-reference/sql-statements/data-manipulation/STREAM LOAD",permalink:"/doc/docs/2.5/sql-reference/sql-statements/data-manipulation/STREAM LOAD",draft:!1,unlisted:!1,editUrl:"https://github.com/StarRocks/starrocks/tree/main/versioned_docs/version-2.5/sql-reference/sql-statements/data-manipulation/STREAM LOAD.md",tags:[],version:"2.5",frontMatter:{},sidebar:"documentation",previous:{title:"STOP ROUTINE LOAD",permalink:"/doc/docs/2.5/sql-reference/sql-statements/data-manipulation/STOP ROUTINE LOAD"},next:{title:"SUBMIT TASK",permalink:"/doc/docs/2.5/sql-reference/sql-statements/data-manipulation/SUBMIT TASK"}},c={},i=[{value:"Description",id:"description",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"username and password",id:"username-and-password",level:3},{value:"XPUT",id:"xput",level:3},{value:"url",id:"url",level:3},{value:"data_desc",id:"data_desc",level:3},{value:"Common parameters",id:"common-parameters",level:4},{value:"CSV parameters",id:"csv-parameters",level:4},{value:"JSON parameters",id:"json-parameters",level:4},{value:"opt_properties",id:"opt_properties",level:3},{value:"Column mapping",id:"column-mapping",level:2},{value:"Configure column mapping for CSV data loading",id:"configure-column-mapping-for-csv-data-loading",level:3},{value:"Configure column mapping for JSON data loading",id:"configure-column-mapping-for-json-data-loading",level:3},{value:"Return value",id:"return-value",level:2},{value:"Examples",id:"examples",level:2},{value:"Load CSV data",id:"load-csv-data",level:3},{value:"Set timeout period",id:"set-timeout-period",level:4},{value:"Set error tolerance",id:"set-error-tolerance",level:4},{value:"Configure column mapping",id:"configure-column-mapping",level:4},{value:"Set filter conditions",id:"set-filter-conditions",level:4},{value:"Set destination partitions",id:"set-destination-partitions",level:4},{value:"Set strict mode and time zone",id:"set-strict-mode-and-time-zone",level:4},{value:"Load data into tables containing HLL-type columns",id:"load-data-into-tables-containing-hll-type-columns",level:4},{value:"Load data into tables containing BITMAP-type columns",id:"load-data-into-tables-containing-bitmap-type-columns",level:4},{value:"Load JSON data",id:"load-json-data",level:3},{value:"Load JSON data using simple mode",id:"load-json-data-using-simple-mode",level:4},{value:"Load JSON data using matched mode",id:"load-json-data-using-matched-mode",level:4},{value:"Load JSON data using matched without root element specified",id:"load-json-data-using-matched-without-root-element-specified",level:5},{value:"Load JSON data using matched mode with root element specified",id:"load-json-data-using-matched-mode-with-root-element-specified",level:5}];function l(e){const t=Object.assign({h1:"h1",h2:"h2",p:"p",a:"a",pre:"pre",code:"code",ul:"ul",li:"li",blockquote:"blockquote",strong:"strong",h3:"h3",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",h4:"h4",ol:"ol",h5:"h5"},(0,o.ah)(),e.components);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h1,{id:"stream-load",children:"STREAM LOAD"}),"\n",(0,a.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,a.jsxs)(t.p,{children:["StarRocks provides the loading method HTTP-based Stream Load to help you load data from a local file system or a streaming data source. After you submit a load job, StarRocks synchronously runs the job, and returns the result of the job after the job finishes. You can determine whether the job is successful based on the job result. For information about the application scenarios, limits, principles, and supported data file formats of Stream Load, see ",(0,a.jsx)(t.a,{href:"/doc/docs/2.5/loading/StreamLoad",children:"Load data from a local file system or a streaming data source using HTTP PUT"}),"."]}),"\n",(0,a.jsx)(t.p,{children:"Note that Stream Load operations not only load data into StarRocks tables but also update the data in the materialized views that are created on the tables."}),"\n",(0,a.jsx)(t.h2,{id:"syntax",children:"Syntax"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-Bash",children:"curl --location-trusted -u <username>:<password> -XPUT <url>\n(\n    data_desc\n)\n[opt_properties]        \n"})}),"\n",(0,a.jsx)(t.p,{children:"This topic uses curl as an example to describe how to load data by using Stream Load. In addition to curl, you can also use other HTTP-compatible tools or languages to perform Stream Load. Load-related parameters are included in HTTP request header fields. When you input these parameters, take note of the following points:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:["\n",(0,a.jsxs)(t.p,{children:["You can use chunked transfer encoding, as demonstrated in this topic. If you do not choose chunked transfer encoding, you must input a ",(0,a.jsx)(t.code,{children:"Content-Length"})," header field to indicate the length of content to be transferred, thereby ensuring data integrity."]}),"\n",(0,a.jsxs)(t.blockquote,{children:["\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.strong,{children:"NOTE"})}),"\n",(0,a.jsxs)(t.p,{children:["If you use curl to perform Stream Load, StarRocks automatically adds a ",(0,a.jsx)(t.code,{children:"Content-Length"})," header field and you do not need manually input it."]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(t.li,{children:["\n",(0,a.jsxs)(t.p,{children:["You must add an ",(0,a.jsx)(t.code,{children:"Expect"})," header field and specify its value as ",(0,a.jsx)(t.code,{children:"100-continue"}),", as in ",(0,a.jsx)(t.code,{children:'"Expect:100-continue"'}),". This helps prevent unnecessary data transfers and reduce resource overheads in case your job request is denied."]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(t.p,{children:["Note that in StarRocks some literals are used as reserved keywords by the SQL language. Do not directly use these keywords in SQL statements. If you want to use such a keyword in an SQL statement, enclose it in a pair of backticks (`). See ",(0,a.jsx)(t.a,{href:"/doc/docs/2.5/sql-reference/sql-statements/keywords",children:"Keywords"}),"."]}),"\n",(0,a.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,a.jsx)(t.h3,{id:"username-and-password",children:"username and password"}),"\n",(0,a.jsxs)(t.p,{children:["Specify the username and password of the account that you use to connect to your StarRocks cluster. This is a required parameter. If you use an account for which no password is set, you need to input only ",(0,a.jsx)(t.code,{children:"<username>:"}),"."]}),"\n",(0,a.jsx)(t.h3,{id:"xput",children:"XPUT"}),"\n",(0,a.jsx)(t.p,{children:"Specifies the HTTP request method. This is a required parameter. Stream Load supports only the PUT method."}),"\n",(0,a.jsx)(t.h3,{id:"url",children:"url"}),"\n",(0,a.jsx)(t.p,{children:"Specifies the URL of the StarRocks table. Syntax:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-Plain",children:"http://<fe_host>:<fe_http_port>/api/<database_name>/<table_name>/_stream_load\n"})}),"\n",(0,a.jsx)(t.p,{children:"The following table describes the parameters in the URL."}),"\n",(0,a.jsxs)(t.table,{children:[(0,a.jsx)(t.thead,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.th,{children:"Parameter"}),(0,a.jsx)(t.th,{children:"Required"}),(0,a.jsx)(t.th,{children:"Description"})]})}),(0,a.jsxs)(t.tbody,{children:[(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"fe_host"}),(0,a.jsx)(t.td,{children:"Yes"}),(0,a.jsxs)(t.td,{children:["The IP address of the FE node in your StarRocks cluster.",(0,a.jsx)("br",{}),(0,a.jsx)(t.strong,{children:"NOTE"}),(0,a.jsx)("br",{}),"If you submit the load job to a specific BE node, you must input the IP address of the BE node."]})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"fe_http_port"}),(0,a.jsx)(t.td,{children:"Yes"}),(0,a.jsxs)(t.td,{children:["The HTTP port number of the FE node in your StarRocks cluster. The default port number is ",(0,a.jsx)(t.code,{children:"8030"}),".",(0,a.jsx)("br",{}),(0,a.jsx)(t.strong,{children:"NOTE"}),(0,a.jsx)("br",{}),"If you submit the load job to a specific BE node, you must input the HTTP port number of the BE node. The default port number is ",(0,a.jsx)(t.code,{children:"8030"}),"."]})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"database_name"}),(0,a.jsx)(t.td,{children:"Yes"}),(0,a.jsx)(t.td,{children:"The name of the database to which the StarRocks table belongs."})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"table_name"}),(0,a.jsx)(t.td,{children:"Yes"}),(0,a.jsx)(t.td,{children:"The name of the StarRocks table."})]})]})]}),"\n",(0,a.jsx)(t.h3,{id:"data_desc",children:"data_desc"}),"\n",(0,a.jsxs)(t.p,{children:["Describes the data file that you want to load. The ",(0,a.jsx)(t.code,{children:"data_desc"})," descriptor can include the data file's name, format, column separator, row separator, destination partitions, and column mapping against the StarRocks table. Syntax:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-Bash",children:'-T <file_path>\n-H "format: CSV | JSON"\n-H "column_separator: <column_separator>"\n-H "row_delimiter: <row_delimiter>"\n-H "columns: <column1_name>[, <column2_name>, ... ]"\n-H "partitions: <partition1_name>[, <partition2_name>, ...]"\n-H "temporary_partitions: <temporary_partition1_name>[, <temporary_partition2_name>, ...]"\n-H "jsonpaths: [ \\"<json_path1>\\"[, \\"<json_path2>\\", ...] ]"\n-H "strip_outer_array:  true | false"\n-H "json_root: <json_path>"\n'})}),"\n",(0,a.jsxs)(t.p,{children:["The parameters in the ",(0,a.jsx)(t.code,{children:"data_desc"})," descriptor can be divided into three types: common parameters, CSV parameters, and JSON parameters."]}),"\n",(0,a.jsx)(t.h4,{id:"common-parameters",children:"Common parameters"}),"\n",(0,a.jsxs)(t.table,{children:[(0,a.jsx)(t.thead,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.th,{children:"Parameter"}),(0,a.jsx)(t.th,{children:"Required"}),(0,a.jsx)(t.th,{children:"Description"})]})}),(0,a.jsxs)(t.tbody,{children:[(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"file_path"}),(0,a.jsx)(t.td,{children:"Yes"}),(0,a.jsx)(t.td,{children:"The save path of the data file. You can optionally include the extension of the file name."})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"format"}),(0,a.jsx)(t.td,{children:"No"}),(0,a.jsxs)(t.td,{children:["The format of the data file. Valid values: ",(0,a.jsx)(t.code,{children:"CSV"})," and ",(0,a.jsx)(t.code,{children:"JSON"}),". Default value: ",(0,a.jsx)(t.code,{children:"CSV"}),"."]})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"partitions"}),(0,a.jsx)(t.td,{children:"No"}),(0,a.jsx)(t.td,{children:"The partitions into which you want to load the data file. By default, if you do not specify this parameter, StarRocks loads the data file into all partitions of the StarRocks table."})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"temporary_partitions"}),(0,a.jsx)(t.td,{children:"No"}),(0,a.jsxs)(t.td,{children:["The name of the ",(0,a.jsx)(t.a,{href:"/doc/docs/2.5/table_design/Temporary_partition",children:"temporary partition"})," into which you want to load data file. You can specify multiple temporary partitions, which must be separated by commas (,)."]})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"columns"}),(0,a.jsx)(t.td,{children:"No"}),(0,a.jsxs)(t.td,{children:["The column mapping between the data file and the StarRocks table.",(0,a.jsx)("br",{}),"If the fields in the data file can be mapped in sequence onto the columns in the StarRocks table, you do not need to specify this parameter. Instead, you can use this parameter to implement data conversions. For example, if you load a CSV data file and the file consists of two columns that can be mapped in sequence onto the two columns, ",(0,a.jsx)(t.code,{children:"id"})," and ",(0,a.jsx)(t.code,{children:"city"}),", of the StarRocks table, you can specify ",(0,a.jsx)(t.code,{children:'"columns: city,tmp_id, id = tmp_id * 100"'}),'. For more information, see the "',(0,a.jsx)(t.a,{href:"#column-mapping",children:"Column mapping"}),'" section in this topic.']})]})]})]}),"\n",(0,a.jsx)(t.h4,{id:"csv-parameters",children:"CSV parameters"}),"\n",(0,a.jsxs)(t.table,{children:[(0,a.jsx)(t.thead,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.th,{children:"Parameter"}),(0,a.jsx)(t.th,{children:"Required"}),(0,a.jsx)(t.th,{children:"Description"})]})}),(0,a.jsxs)(t.tbody,{children:[(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"column_separator"}),(0,a.jsx)(t.td,{children:"No"}),(0,a.jsxs)(t.td,{children:["The characters that are used in the data file to separate fields. If you do not specify this parameter, this parameter defaults to ",(0,a.jsx)(t.code,{children:"\\t"}),", which indicates tab.",(0,a.jsx)("br",{}),"Make sure that the column separator you specify by using this parameter is the same as the column separator used in the data file.",(0,a.jsx)("br",{}),(0,a.jsx)(t.strong,{children:"NOTE"}),(0,a.jsx)("br",{}),"For CSV data, you can use a UTF-8 string, such as a comma (,), tab, or pipe (|), whose length does not exceed 50 bytes as a text delimiter."]})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"row_delimiter"}),(0,a.jsx)(t.td,{children:"No"}),(0,a.jsxs)(t.td,{children:["The characters that are used in the data file to separate rows. If you do not specify this parameter, this parameter defaults to ",(0,a.jsx)(t.code,{children:"\\n"}),"."]})]})]})]}),"\n",(0,a.jsxs)(t.blockquote,{children:["\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.strong,{children:"NOTE"})}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"For CSV data, you can use a UTF-8 string, such as a comma (,), tab, or pipe (|), whose length does not exceed 50 bytes as a text delimiter."}),"\n",(0,a.jsxs)(t.li,{children:["Null values are denoted by using ",(0,a.jsx)(t.code,{children:"\\N"}),". For example, a data file consists of three columns, and a record from that data file holds data in the first and third columns but no data in the second column. In this situation, you need to use ",(0,a.jsx)(t.code,{children:"\\N"})," in the second column to denote a null value. This means the record must be compiled as ",(0,a.jsx)(t.code,{children:"a,\\N,b"})," instead of ",(0,a.jsx)(t.code,{children:"a,,b"}),". ",(0,a.jsx)(t.code,{children:"a,,b"})," denotes that the second column of the record holds an empty string."]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(t.h4,{id:"json-parameters",children:"JSON parameters"}),"\n",(0,a.jsxs)(t.table,{children:[(0,a.jsx)(t.thead,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.th,{children:"Parameter"}),(0,a.jsx)(t.th,{children:"Required"}),(0,a.jsx)(t.th,{children:"Description"})]})}),(0,a.jsxs)(t.tbody,{children:[(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"jsonpaths"}),(0,a.jsx)(t.td,{children:"No"}),(0,a.jsxs)(t.td,{children:["The names of the keys that you want to load from the JSON data file. You need to specify this parameter only when you load JSON data by using the matched mode. The value of this parameter is in JSON format. See ",(0,a.jsx)(t.a,{href:"#configure-column-mapping-for-json-data-loading",children:"Configure column mapping for JSON data loading"}),"."]})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"strip_outer_array"}),(0,a.jsx)(t.td,{children:"No"}),(0,a.jsxs)(t.td,{children:["Specifies whether to strip the outermost array structure. Valid values: ",(0,a.jsx)(t.code,{children:"true"})," and ",(0,a.jsx)(t.code,{children:"false"}),". Default value: ",(0,a.jsx)(t.code,{children:"false"}),".",(0,a.jsx)("br",{}),"In real-world business scenarios, the JSON data may have an outermost array structure as indicated by a pair of square brackets ",(0,a.jsx)(t.code,{children:"[]"}),". In this situation, we recommend that you set this parameter to ",(0,a.jsx)(t.code,{children:"true"}),", so StarRocks removes the outermost square brackets ",(0,a.jsx)(t.code,{children:"[]"})," and loads each inner array as a separate data record. If you set this parameter to ",(0,a.jsx)(t.code,{children:"false"}),", StarRocks parses the entire JSON data file into one array and loads the array as a single data record.",(0,a.jsx)("br",{}),"For example, the JSON data is ",(0,a.jsx)(t.code,{children:'[ {"category" : 1, "author" : 2}, {"category" : 3, "author" : 4} ]'}),". If you set this parameter to ",(0,a.jsx)(t.code,{children:"true"}),",  ",(0,a.jsx)(t.code,{children:'{"category" : 1, "author" : 2}'})," and ",(0,a.jsx)(t.code,{children:'{"category" : 3, "author" : 4}'})," are parsed into separate data records that are loaded into separate StarRocks table rows."]})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"json_root"}),(0,a.jsx)(t.td,{children:"No"}),(0,a.jsxs)(t.td,{children:['The root element of the JSON data that you want to load from the JSON data file. You need to specify this parameter only when you load JSON data by using the matched mode. The value of this parameter is a valid JsonPath string. By default, the value of this parameter is empty, indicating that all data of the JSON data file will be loaded. For more information, see the "',(0,a.jsx)(t.a,{href:"#load-json-data-using-matched-mode-with-root-element-specified",children:"Load JSON data using matched mode with root element specified"}),'" section of this topic.']})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"ignore_json_size"}),(0,a.jsx)(t.td,{children:"No"}),(0,a.jsxs)(t.td,{children:["Specifies whether to check the size of the JSON body in the HTTP request.",(0,a.jsx)("br",{}),(0,a.jsx)(t.strong,{children:"NOTE"}),(0,a.jsx)("br",{}),'By default, the size of the JSON body in an HTTP request cannot exceed 100 MB. If the JSON body exceeds 100 MB in size, an error "The size of this batch exceed the max size [104857600] of json type data data [8617627793]. Set ignore_json_size to skip check, although it may lead huge memory consuming." is reported. To prevent this error, you can add ',(0,a.jsx)(t.code,{children:'"ignore_json_size:true"'})," in the HTTP request header to instruct StarRocks not to check the JSON body size."]})]})]})]}),"\n",(0,a.jsx)(t.p,{children:'When you load JSON data, also note that the size per JSON object cannot exceed 4 GB. If an individual JSON object in the JSON data file exceeds 4 GB in size, an error "This parser can\'t support a document that big." is reported.'}),"\n",(0,a.jsx)(t.h3,{id:"opt_properties",children:"opt_properties"}),"\n",(0,a.jsx)(t.p,{children:"Specifies some optional parameters, which are applied to the entire load job. Syntax:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-Bash",children:'-H "label: <label_name>"\n-H "where: <condition1>[, <condition2>, ...]"\n-H "max_filter_ratio: <num>"\n-H "timeout: <num>"\n-H "strict_mode: true | false"\n-H "timezone: <string>"\n-H "load_mem_limit: <num>"\n-H "merge_condition: <column_name>"\n'})}),"\n",(0,a.jsx)(t.p,{children:"The following table describes the optional parameters."}),"\n",(0,a.jsxs)(t.table,{children:[(0,a.jsx)(t.thead,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.th,{children:"Parameter"}),(0,a.jsx)(t.th,{children:"Required"}),(0,a.jsx)(t.th,{children:"Description"})]})}),(0,a.jsxs)(t.tbody,{children:[(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"label"}),(0,a.jsx)(t.td,{children:"No"}),(0,a.jsxs)(t.td,{children:["The label of the load job. If you do not specify this parameter, StarRocks automatically generates a label for the load job.",(0,a.jsx)("br",{}),"StarRocks does not allow you to use one label to load a data batch multiple times. As such, StarRocks prevents the same data from being repeatedly loaded. For label naming conventions, see ",(0,a.jsx)(t.a,{href:"/doc/docs/2.5/reference/System_limit",children:"System limits"}),".",(0,a.jsx)("br",{}),"By default, StarRocks retains the labels of load jobs that were successfully completed over the most recent three days. You can use the ",(0,a.jsx)(t.a,{href:"/doc/docs/2.5/administration/Configuration",children:"FE parameter"})," ",(0,a.jsx)(t.code,{children:"label_keep_max_second"})," to change the label retention period."]})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"where"}),(0,a.jsx)(t.td,{children:"No"}),(0,a.jsx)(t.td,{children:"The conditions based on which StarRocks filters the pre-processed data. StarRocks loads only the pre-processed data that meets the filter conditions specified in the WHERE clause."})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"max_filter_ratio"}),(0,a.jsx)(t.td,{children:"No"}),(0,a.jsxs)(t.td,{children:["The maximum error tolerance of the load job. The error tolerance is the maximum percentage of data records that can be filtered out due to inadequate data quality in all data records requested by the load job. Valid values: ",(0,a.jsx)(t.code,{children:"0"})," to ",(0,a.jsx)(t.code,{children:"1"}),". Default value: ",(0,a.jsx)(t.code,{children:"0"}),".",(0,a.jsx)("br",{}),"We recommend that you retain the default value ",(0,a.jsx)(t.code,{children:"0"}),". This way, if unqualified data records are detected, the load job fails, thereby ensuring data correctness.",(0,a.jsx)("br",{}),"If you want to ignore unqualified data records, you can set this parameter to a value greater than ",(0,a.jsx)(t.code,{children:"0"}),". This way, the load job can succeed even if the data file contains unqualified data records.",(0,a.jsx)("br",{}),(0,a.jsx)(t.strong,{children:"NOTE"}),(0,a.jsx)("br",{}),"Unqualified data records do not include data records that are filtered out by the WHERE clause."]})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"timeout"}),(0,a.jsx)(t.td,{children:"No"}),(0,a.jsxs)(t.td,{children:["The timeout period of the load job. Valid values: ",(0,a.jsx)(t.code,{children:"1"})," to ",(0,a.jsx)(t.code,{children:"259200"}),". Unit: second. Default value: ",(0,a.jsx)(t.code,{children:"600"}),".",(0,a.jsx)("br",{}),(0,a.jsx)(t.strong,{children:"NOTE"}),"In addition to the ",(0,a.jsx)(t.code,{children:"timeout"})," parameter, you can also use the ",(0,a.jsx)(t.a,{href:"/doc/docs/2.5/administration/Configuration",children:"FE parameter"})," ",(0,a.jsx)(t.code,{children:"stream_load_default_timeout_second"})," to centrally control the timeout period for all Stream Load jobs in your StarRocks cluster. If you specify the ",(0,a.jsx)(t.code,{children:"timeout"})," parameter, the timeout period specified by the ",(0,a.jsx)(t.code,{children:"timeout"})," parameter prevails. If you do not specify the ",(0,a.jsx)(t.code,{children:"timeout"})," parameter, the timeout period specified by the ",(0,a.jsx)(t.code,{children:"stream_load_default_timeout_second"})," parameter prevails."]})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"strict_mode"}),(0,a.jsx)(t.td,{children:"No"}),(0,a.jsxs)(t.td,{children:["Specifies whether to enable the ",(0,a.jsx)(t.a,{href:"/doc/docs/2.5/loading/load_concept/strict_mode",children:"strict mode"}),". Valid values: ",(0,a.jsx)(t.code,{children:"true"})," and ",(0,a.jsx)(t.code,{children:"false"}),". Default value: ",(0,a.jsx)(t.code,{children:"false"}),".  The value ",(0,a.jsx)(t.code,{children:"true"})," specifies to enable the strict mode, and the value ",(0,a.jsx)(t.code,{children:"false"})," specifies to disable the strict mode."]})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"timezone"}),(0,a.jsx)(t.td,{children:"No"}),(0,a.jsxs)(t.td,{children:["The time zone used by the load job. Default value: ",(0,a.jsx)(t.code,{children:"Asia/Shanghai"}),". The value of this parameter affects the results returned by functions such as strftime, alignment_timestamp, and from_unixtime. The time zone specified by this parameter is a session-level time zone. For more information, see ",(0,a.jsx)(t.a,{href:"/doc/docs/2.5/administration/timezone",children:"Configure a time zone"}),"."]})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"load_mem_limit"}),(0,a.jsx)(t.td,{children:"No"}),(0,a.jsx)(t.td,{children:"The maximum amount of memory that can be provisioned to the load job. Unit: bytes. By default, the maximum memory size for a load job is 2 GB. The value of this parameter cannot exceed the maximum amount of memory that can be provisioned to each BE."})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"merge_condition"}),(0,a.jsx)(t.td,{children:"No"}),(0,a.jsxs)(t.td,{children:["Specifies the name of the column you want to use as the condition to determine whether updates can take effect. The update from a source record to a destination record takes effect only when the source data record has a greater or equal value than the destination data record in the specified column. StarRocks supports conditional updates since v2.5. For more information, see ",(0,a.jsx)(t.a,{href:"/doc/docs/2.5/loading/Load_to_Primary_Key_tables",children:"Change data through loading"}),". ",(0,a.jsx)("br",{}),(0,a.jsx)(t.strong,{children:"NOTE"}),(0,a.jsx)("br",{}),"The column that you specify cannot be a primary key column. Additionally, only tables that use the Primary Key tables support conditional updates."]})]})]})]}),"\n",(0,a.jsx)(t.h2,{id:"column-mapping",children:"Column mapping"}),"\n",(0,a.jsx)(t.h3,{id:"configure-column-mapping-for-csv-data-loading",children:"Configure column mapping for CSV data loading"}),"\n",(0,a.jsx)(t.p,{children:"If the columns of the data file can be mapped one on one in sequence to the columns of the StarRocks table, you do not need to configure the column mapping between the data file and the StarRocks table."}),"\n",(0,a.jsxs)(t.p,{children:["If the columns of the data file cannot be mapped one on one in sequence to the columns of the StarRocks table, you need to use the ",(0,a.jsx)(t.code,{children:"columns"})," parameter to configure the column mapping between the data file and the StarRocks table. This includes the following two use cases:"]}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:["\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"Same number of columns but different column sequence."})," ",(0,a.jsx)(t.strong,{children:"Also, the data from the data file does not need to be computed by functions before it is loaded into the matching StarRocks table columns."})]}),"\n",(0,a.jsxs)(t.p,{children:["In the ",(0,a.jsx)(t.code,{children:"columns"})," parameter, you need to specify the names of the StarRocks table columns in the same sequence as how the data file columns are arranged."]}),"\n",(0,a.jsxs)(t.p,{children:["For example, the StarRocks table consists of three columns, which are ",(0,a.jsx)(t.code,{children:"col1"}),", ",(0,a.jsx)(t.code,{children:"col2"}),", and ",(0,a.jsx)(t.code,{children:"col3"})," in sequence, and the data file also consists of three columns, which can be mapped to the StarRocks table columns ",(0,a.jsx)(t.code,{children:"col3"}),", ",(0,a.jsx)(t.code,{children:"col2"}),", and ",(0,a.jsx)(t.code,{children:"col1"})," in sequence. In this case, you need to specify ",(0,a.jsx)(t.code,{children:'"columns: col3, col2, col1"'}),"."]}),"\n"]}),"\n",(0,a.jsxs)(t.li,{children:["\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.strong,{children:"Different number of columns and different column sequence. Also, the data from the data file needs to be computed by functions before it is loaded into the matching StarRocks table columns."})}),"\n",(0,a.jsxs)(t.p,{children:["In the ",(0,a.jsx)(t.code,{children:"columns"})," parameter, you need to specify the names of the StarRocks table columns in the same sequence as how the data file columns are arranged and specify the functions you want to use to compute the data. Two examples are as follows:"]}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:["The StarRocks table consists of three columns, which are ",(0,a.jsx)(t.code,{children:"col1"}),", ",(0,a.jsx)(t.code,{children:"col2"}),", and ",(0,a.jsx)(t.code,{children:"col3"})," in sequence. The data file consists of four columns, among which the first three columns can be mapped in sequence to the StarRocks table columns ",(0,a.jsx)(t.code,{children:"col1"}),", ",(0,a.jsx)(t.code,{children:"col2"}),", and ",(0,a.jsx)(t.code,{children:"col3"})," and the fourth column cannot be mapped to any of the StarRocks table columns. In this case, you need to temporarily specify a name for the fourth column of the data file, and the temporary name must be different from any of the StarRocks table column names. For example, you can specify ",(0,a.jsx)(t.code,{children:'"columns: col1, col2, col3, temp"'}),", in which the fourth column of the data file is temporarily named ",(0,a.jsx)(t.code,{children:"temp"}),"."]}),"\n",(0,a.jsxs)(t.li,{children:["The StarRocks table consists of three columns, which are ",(0,a.jsx)(t.code,{children:"year"}),", ",(0,a.jsx)(t.code,{children:"month"}),", and ",(0,a.jsx)(t.code,{children:"day"})," in sequence. The data file consists of only one column that accommodates date and time values in ",(0,a.jsx)(t.code,{children:"yyyy-mm-dd hh:mm:ss"})," format. In this case, you can specify ",(0,a.jsx)(t.code,{children:'"columns: col, year = year(col), month=month(col), day=day(col)"'}),", in which ",(0,a.jsx)(t.code,{children:"col"})," is the temporary name of the data file column and the functions ",(0,a.jsx)(t.code,{children:"year = year(col)"}),", ",(0,a.jsx)(t.code,{children:"month=month(col)"}),", and ",(0,a.jsx)(t.code,{children:"day=day(col)"})," are used to extract data from the data file column ",(0,a.jsx)(t.code,{children:"col"})," and loads the data into the mapping StarRocks table columns. For example, ",(0,a.jsx)(t.code,{children:"year = year(col)"})," is used to extract the ",(0,a.jsx)(t.code,{children:"yyyy"})," data from the data file column ",(0,a.jsx)(t.code,{children:"col"})," and loads the data into the StarRocks table column ",(0,a.jsx)(t.code,{children:"year"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(t.p,{children:["For detailed examples, see ",(0,a.jsx)(t.a,{href:"#configure-column-mapping",children:"Configure column mapping"}),"."]}),"\n",(0,a.jsx)(t.h3,{id:"configure-column-mapping-for-json-data-loading",children:"Configure column mapping for JSON data loading"}),"\n",(0,a.jsxs)(t.p,{children:["If the keys of the JSON document have the same names as the columns of the StarRocks table, you can load the JSON-formatted data by using the simple mode. In simple mode, you do not need to specify the ",(0,a.jsx)(t.code,{children:"jsonpaths"})," parameter. This mode requires that the JSON-formatted data must be an object as indicated by curly brackets ",(0,a.jsx)(t.code,{children:"{}"}),", such as ",(0,a.jsx)(t.code,{children:'{"category": 1, "author": 2, "price": "3"}'}),". In this example, ",(0,a.jsx)(t.code,{children:"category"}),", ",(0,a.jsx)(t.code,{children:"author"}),", and ",(0,a.jsx)(t.code,{children:"price"})," are key names, and these keys can be mapped one on one by name to the columns ",(0,a.jsx)(t.code,{children:"category"}),", ",(0,a.jsx)(t.code,{children:"author"}),", and ",(0,a.jsx)(t.code,{children:"price"})," of the StarRocks table."]}),"\n",(0,a.jsxs)(t.p,{children:["If the keys of the JSON document have different names than the columns of the StarRocks table, you can load the JSON-formatted data by using the matched mode. In matched mode, you need to use the ",(0,a.jsx)(t.code,{children:"jsonpaths"})," and ",(0,a.jsx)(t.code,{children:"COLUMNS"})," parameters to specify the column mapping between the JSON document and the StarRocks table:"]}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:["In the ",(0,a.jsx)(t.code,{children:"jsonpaths"})," parameter, specify the JSON keys in the sequence as how they are arranged in the JSON document."]}),"\n",(0,a.jsxs)(t.li,{children:["In the ",(0,a.jsx)(t.code,{children:"COLUMNS"})," parameter, specify the mapping between the JSON keys and the StarRocks table columns:","\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:["The column names specified in the ",(0,a.jsx)(t.code,{children:"COLUMNS"})," parameter are mapped one on one in sequence to the JSON keys."]}),"\n",(0,a.jsxs)(t.li,{children:["The column names specified in the ",(0,a.jsx)(t.code,{children:"COLUMNS"})," parameter are mapped one on one by name to the StarRocks table columns."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(t.p,{children:["For examples about loading JSON-formatted data by using the matched mode, see ",(0,a.jsx)(t.a,{href:"#load-json-data-using-matched-mode",children:"Load JSON data using matched mode"}),"."]}),"\n",(0,a.jsx)(t.h2,{id:"return-value",children:"Return value"}),"\n",(0,a.jsx)(t.p,{children:"After the load job finishes, StarRocks returns the job result in JSON format. Example:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-JSON",children:'{\n    "TxnId": 1003,\n    "Label": "label123",\n    "Status": "Success",\n    "Message": "OK",\n    "NumberTotalRows": 1000000,\n    "NumberLoadedRows": 999999,\n    "NumberFilteredRows": 1,\n    "NumberUnselectedRows": 0,\n    "LoadBytes": 40888898,\n    "LoadTimeMs": 2144,\n    "BeginTxnTimeMs": 0,\n    "StreamLoadPutTimeMS": 1,\n    "ReadDataTimeMs": 0,\n    "WriteDataTimeMs": 11,\n    "CommitAndPublishTimeMs": 16,\n}\n'})}),"\n",(0,a.jsx)(t.p,{children:"The following table describes the parameters in the returned job result."}),"\n",(0,a.jsxs)(t.table,{children:[(0,a.jsx)(t.thead,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.th,{children:"Parameter"}),(0,a.jsx)(t.th,{children:"Description"})]})}),(0,a.jsxs)(t.tbody,{children:[(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"TxnId"}),(0,a.jsx)(t.td,{children:"The transaction ID of the load job."})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"Label"}),(0,a.jsx)(t.td,{children:"The label of the load job."})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"Status"}),(0,a.jsxs)(t.td,{children:["The final status of the data loaded.",(0,a.jsxs)("ul",{children:[(0,a.jsxs)("li",{children:[(0,a.jsx)(t.code,{children:"Success"}),": The data is successfully loaded and can be queried."]}),(0,a.jsxs)("li",{children:[(0,a.jsx)(t.code,{children:"Publish Timeout"}),": The load job is successfully submitted, but the data still cannot be queried. You do not need to retry to load the data."]}),(0,a.jsxs)("li",{children:[(0,a.jsx)(t.code,{children:"Label Already Exists"}),": The label of the load job has been used for another load job. The data may have been successfully loaded or is being loaded."]}),(0,a.jsxs)("li",{children:[(0,a.jsx)(t.code,{children:"Fail"}),": The data failed to be loaded. You can retry the load job."]})]})]})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"Message"}),(0,a.jsx)(t.td,{children:"The status of the load job. If the load job fails, the detailed failure cause is returned."})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"NumberTotalRows"}),(0,a.jsx)(t.td,{children:"The total number of data records that are read."})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"NumberLoadedRows"}),(0,a.jsxs)(t.td,{children:["The total number of data records that are successfully loaded. This parameter is valid only when the value returned for ",(0,a.jsx)(t.code,{children:"Status"})," is ",(0,a.jsx)(t.code,{children:"Success"}),"."]})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"NumberFilteredRows"}),(0,a.jsx)(t.td,{children:"The number of data records that are filtered out due to inadequate data quality."})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"NumberUnselectedRows"}),(0,a.jsx)(t.td,{children:"The number of data records that are filtered out by the WHERE clause."})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"LoadBytes"}),(0,a.jsx)(t.td,{children:"The amount of data that is loaded. Unit: bytes."})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"LoadTimeMs"}),(0,a.jsx)(t.td,{children:"The amount of time that is taken by the load job. Unit: ms."})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"BeginTxnTimeMs"}),(0,a.jsx)(t.td,{children:"The amount of time that is taken to run a transaction for the load job."})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"StreamLoadPutTimeMS"}),(0,a.jsx)(t.td,{children:"The amount of time that is taken to generate a execution plan for the load job."})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"ReadDataTimeMs"}),(0,a.jsx)(t.td,{children:"The amount of time that is taken to read data for the load job."})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"WriteDataTimeMs"}),(0,a.jsx)(t.td,{children:"The amount of time that is taken to write data for the load job."})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"CommitAndPublishTimeMs"}),(0,a.jsx)(t.td,{children:"The amount of time that is taken to commit and publish data for the load job."})]})]})]}),"\n",(0,a.jsxs)(t.p,{children:["If the load job fails, StarRocks also returns ",(0,a.jsx)(t.code,{children:"ErrorURL"}),". Example:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-JSON",children:'{"ErrorURL": "http://172.26.195.68:8045/api/_load_error_log?file=error_log_3a4eb8421f0878a6_9a54df29fd9206be"}\n'})}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.code,{children:"ErrorURL"})," provides a URL from which you can obtain details about unqualified data records that have been filtered out. StarRocks retains 1,000 unqualified data records."]}),"\n",(0,a.jsxs)(t.p,{children:["You can run ",(0,a.jsx)(t.code,{children:'curl "url"'})," to directly view details about the filtered-out, unqualified data records. You can also run ",(0,a.jsx)(t.code,{children:'wget "url"'})," to export the details about these data records:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-Bash",children:"wget http://172.26.195.68:8045/api/_load_error_log?file=error_log_3a4eb8421f0878a6_9a54df29fd9206be\n"})}),"\n",(0,a.jsxs)(t.p,{children:["The exported data record details are saved to a local file with a name similar to ",(0,a.jsx)(t.code,{children:"_load_error_log?file=error_log_3a4eb8421f0878a6_9a54df29fd9206be"}),". You can use the ",(0,a.jsx)(t.code,{children:"cat"})," command to view the file."]}),"\n",(0,a.jsx)(t.p,{children:"Then, you can adjust the configuration of the load job, and submit the load job again."}),"\n",(0,a.jsx)(t.h2,{id:"examples",children:"Examples"}),"\n",(0,a.jsx)(t.h3,{id:"load-csv-data",children:"Load CSV data"}),"\n",(0,a.jsx)(t.p,{children:"This section CSV data as an example to describe how you can employ various parameter settings and combinations to meet your diverse loading requirements."}),"\n",(0,a.jsx)(t.h4,{id:"set-timeout-period",children:"Set timeout period"}),"\n",(0,a.jsxs)(t.p,{children:["Your StarRocks database ",(0,a.jsx)(t.code,{children:"test_db"})," contains a table named ",(0,a.jsx)(t.code,{children:"table1"}),". The table consists of three columns, which are ",(0,a.jsx)(t.code,{children:"col1"}),", ",(0,a.jsx)(t.code,{children:"col2"}),", and ",(0,a.jsx)(t.code,{children:"col3"})," in sequence."]}),"\n",(0,a.jsxs)(t.p,{children:["Your data file ",(0,a.jsx)(t.code,{children:"example1.csv"})," also consists of three columns, which can be mapped in sequence onto ",(0,a.jsx)(t.code,{children:"col1"}),", ",(0,a.jsx)(t.code,{children:"col2"}),", and ",(0,a.jsx)(t.code,{children:"col3"})," of ",(0,a.jsx)(t.code,{children:"table1"}),"."]}),"\n",(0,a.jsxs)(t.p,{children:["If you want to load all data from ",(0,a.jsx)(t.code,{children:"example1.csv"})," into ",(0,a.jsx)(t.code,{children:"table1"})," within up to 100 seconds, run the following command:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-Bash",children:'curl --location-trusted -u <username>:<password> -H "label:label1" \\\n    -H "Expect:100-continue" \\\n    -H "timeout:100" \\\n    -H "max_filter_ratio:0.2" \\\n    -T example1.csv -XPUT \\\n    http://<fe_host>:<fe_http_port>/api/test_db/table1/_stream_load\n'})}),"\n",(0,a.jsx)(t.h4,{id:"set-error-tolerance",children:"Set error tolerance"}),"\n",(0,a.jsxs)(t.p,{children:["Your StarRocks database ",(0,a.jsx)(t.code,{children:"test_db"})," contains a table named ",(0,a.jsx)(t.code,{children:"table2"}),". The table consists of three columns, which are ",(0,a.jsx)(t.code,{children:"col1"}),", ",(0,a.jsx)(t.code,{children:"col2"}),", and ",(0,a.jsx)(t.code,{children:"col3"})," in sequence."]}),"\n",(0,a.jsxs)(t.p,{children:["Your data file ",(0,a.jsx)(t.code,{children:"example2.csv"})," also consists of three columns, which can be mapped in sequence onto ",(0,a.jsx)(t.code,{children:"col1"}),", ",(0,a.jsx)(t.code,{children:"col2"}),", and ",(0,a.jsx)(t.code,{children:"col3"})," of ",(0,a.jsx)(t.code,{children:"table2"}),"."]}),"\n",(0,a.jsxs)(t.p,{children:["If you want to load all data from ",(0,a.jsx)(t.code,{children:"example2.csv"})," into ",(0,a.jsx)(t.code,{children:"table2"})," with a maximum error tolerance of ",(0,a.jsx)(t.code,{children:"0.2"}),", run the following command:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-Bash",children:'curl --location-trusted -u <username>:<password> -H "label:label2" \\\n    -H "Expect:100-continue" \\\n    -H "max_filter_ratio:0.2" \\\n    -T example2.csv -XPUT \\\n    http://<fe_host>:<fe_http_port>/api/test_db/table2/_stream_load\n'})}),"\n",(0,a.jsx)(t.h4,{id:"configure-column-mapping",children:"Configure column mapping"}),"\n",(0,a.jsxs)(t.p,{children:["Your StarRocks database ",(0,a.jsx)(t.code,{children:"test_db"})," contains a table named ",(0,a.jsx)(t.code,{children:"table3"}),". The table consists of three columns, which are ",(0,a.jsx)(t.code,{children:"col1"}),", ",(0,a.jsx)(t.code,{children:"col2"}),", and ",(0,a.jsx)(t.code,{children:"col3"})," in sequence."]}),"\n",(0,a.jsxs)(t.p,{children:["Your data file ",(0,a.jsx)(t.code,{children:"example3.csv"})," also consists of three columns, which can be mapped in sequence onto ",(0,a.jsx)(t.code,{children:"col2"}),", ",(0,a.jsx)(t.code,{children:"col1"}),", and ",(0,a.jsx)(t.code,{children:"col3"})," of ",(0,a.jsx)(t.code,{children:"table3"}),"."]}),"\n",(0,a.jsxs)(t.p,{children:["If you want to load all data from ",(0,a.jsx)(t.code,{children:"example3.csv"})," into ",(0,a.jsx)(t.code,{children:"table3"}),", run the following command:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-Bash",children:'curl --location-trusted -u <username>:<password>  -H "label:label3" \\\n    -H "Expect:100-continue" \\\n    -H "columns: col2, col1, col3" \\\n    -T example3.csv -XPUT \\\n    http://<fe_host>:<fe_http_port>/api/test_db/table3/_stream_load\n'})}),"\n",(0,a.jsxs)(t.blockquote,{children:["\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.strong,{children:"NOTE"})}),"\n",(0,a.jsxs)(t.p,{children:["In the preceding example, the columns of ",(0,a.jsx)(t.code,{children:"example3.csv"})," cannot be mapped onto the columns of ",(0,a.jsx)(t.code,{children:"table3"})," in the same sequence as how these columns are arranged in ",(0,a.jsx)(t.code,{children:"table3"}),". Therefore, you need to use the ",(0,a.jsx)(t.code,{children:"columns"})," parameter to configure the column mapping between ",(0,a.jsx)(t.code,{children:"example3.csv"})," and ",(0,a.jsx)(t.code,{children:"table3"}),"."]}),"\n"]}),"\n",(0,a.jsx)(t.h4,{id:"set-filter-conditions",children:"Set filter conditions"}),"\n",(0,a.jsxs)(t.p,{children:["Your StarRocks database ",(0,a.jsx)(t.code,{children:"test_db"})," contains a table named ",(0,a.jsx)(t.code,{children:"table4"}),". The table consists of three columns, which are ",(0,a.jsx)(t.code,{children:"col1"}),", ",(0,a.jsx)(t.code,{children:"col2"}),", and ",(0,a.jsx)(t.code,{children:"col3"})," in sequence."]}),"\n",(0,a.jsxs)(t.p,{children:["Your data file ",(0,a.jsx)(t.code,{children:"example4.csv"})," also consists of three columns, which can be mapped in sequence onto ",(0,a.jsx)(t.code,{children:"col1"}),", ",(0,a.jsx)(t.code,{children:"col2"}),", and ",(0,a.jsx)(t.code,{children:"col3"})," of ",(0,a.jsx)(t.code,{children:"table4"}),"."]}),"\n",(0,a.jsxs)(t.p,{children:["If you want to load only the data records whose values in the first column of ",(0,a.jsx)(t.code,{children:"example4.csv"})," are equal to ",(0,a.jsx)(t.code,{children:"20180601"})," into ",(0,a.jsx)(t.code,{children:"table4"}),", run the following command:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-Bash",children:'curl --location-trusted -u <username>:<password> -H "label:label4" \\\n    -H "Expect:100-continue" \\\n    -H "columns: col1, col2, col3]"\\\n    -H "where: col1 = 20180601" \\\n    -T example4.csv -XPUT \\\n    http://<fe_host>:<fe_http_port>/api/test_db/table4/_stream_load\n'})}),"\n",(0,a.jsxs)(t.blockquote,{children:["\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.strong,{children:"NOTE"})}),"\n",(0,a.jsxs)(t.p,{children:["In the preceding example, ",(0,a.jsx)(t.code,{children:"example4.csv"})," and ",(0,a.jsx)(t.code,{children:"table4"})," have the same number of columns that can be mapped in sequence, but you need to use the WHERE clause to specify column-based filter conditions. Therefore, you need to use the ",(0,a.jsx)(t.code,{children:"columns"})," parameter to define temporary names for the columns of ",(0,a.jsx)(t.code,{children:"example4.csv"}),"."]}),"\n"]}),"\n",(0,a.jsx)(t.h4,{id:"set-destination-partitions",children:"Set destination partitions"}),"\n",(0,a.jsxs)(t.p,{children:["Your StarRocks database ",(0,a.jsx)(t.code,{children:"test_db"})," contains a table named ",(0,a.jsx)(t.code,{children:"table5"}),". The table consists of three columns, which are ",(0,a.jsx)(t.code,{children:"col1"}),", ",(0,a.jsx)(t.code,{children:"col2"}),", and ",(0,a.jsx)(t.code,{children:"col3"})," in sequence."]}),"\n",(0,a.jsxs)(t.p,{children:["Your data file ",(0,a.jsx)(t.code,{children:"example5.csv"})," also consists of three columns, which can be mapped in sequence onto ",(0,a.jsx)(t.code,{children:"col1"}),", ",(0,a.jsx)(t.code,{children:"col2"}),", and ",(0,a.jsx)(t.code,{children:"col3"})," of ",(0,a.jsx)(t.code,{children:"table5"}),"."]}),"\n",(0,a.jsxs)(t.p,{children:["If you want to load all data from ",(0,a.jsx)(t.code,{children:"example5.csv"})," into partitions ",(0,a.jsx)(t.code,{children:"p1"})," and ",(0,a.jsx)(t.code,{children:"p2"})," of ",(0,a.jsx)(t.code,{children:"table5"}),", run the following command:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-Bash",children:'curl --location-trusted -u <username>:<password>  -H "label:label5" \\\n    -H "Expect:100-continue" \\\n    -H "partitions: p1, p2" \\\n    -T example5.csv -XPUT \\\n    http://<fe_host>:<fe_http_port>/api/test_db/table5/_stream_load\n'})}),"\n",(0,a.jsx)(t.h4,{id:"set-strict-mode-and-time-zone",children:"Set strict mode and time zone"}),"\n",(0,a.jsxs)(t.p,{children:["Your StarRocks database ",(0,a.jsx)(t.code,{children:"test_db"})," contains a table named ",(0,a.jsx)(t.code,{children:"table6"}),". The table consists of three columns, which are ",(0,a.jsx)(t.code,{children:"col1"}),", ",(0,a.jsx)(t.code,{children:"col2"}),", and ",(0,a.jsx)(t.code,{children:"col3"})," in sequence."]}),"\n",(0,a.jsxs)(t.p,{children:["Your data file ",(0,a.jsx)(t.code,{children:"example6.csv"})," also consists of three columns, which can be mapped in sequence onto ",(0,a.jsx)(t.code,{children:"col1"}),", ",(0,a.jsx)(t.code,{children:"col2"}),", and ",(0,a.jsx)(t.code,{children:"col3"})," of ",(0,a.jsx)(t.code,{children:"table6"}),"."]}),"\n",(0,a.jsxs)(t.p,{children:["If you want to load all data from ",(0,a.jsx)(t.code,{children:"example6.csv"})," into ",(0,a.jsx)(t.code,{children:"table6"})," by using the strict mode and the time zone ",(0,a.jsx)(t.code,{children:"Africa/Abidjan"}),", run the following command:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-Bash",children:'curl --location-trusted -u <username>:<password> \\\n    -H "Expect:100-continue" \\\n    -H "strict_mode: true" \\\n    -H "timezone: Africa/Abidjan" \\\n    -T example6.csv -XPUT \\\n    http://<fe_host>:<fe_http_port>/api/test_db/table6/_stream_load\n'})}),"\n",(0,a.jsx)(t.h4,{id:"load-data-into-tables-containing-hll-type-columns",children:"Load data into tables containing HLL-type columns"}),"\n",(0,a.jsxs)(t.p,{children:["Your StarRocks database ",(0,a.jsx)(t.code,{children:"test_db"})," contains a table named ",(0,a.jsx)(t.code,{children:"table7"}),". The table consists of two HLL-type columns, which are ",(0,a.jsx)(t.code,{children:"col1"})," and ",(0,a.jsx)(t.code,{children:"col2"})," in sequence."]}),"\n",(0,a.jsxs)(t.p,{children:["Your data file ",(0,a.jsx)(t.code,{children:"example7.csv"})," also consists of two columns, among which the first column can be mapped onto ",(0,a.jsx)(t.code,{children:"col1"})," of ",(0,a.jsx)(t.code,{children:"table7"})," and the second column cannot be mapped onto any column of ",(0,a.jsx)(t.code,{children:"table7"}),". The values in the first column of ",(0,a.jsx)(t.code,{children:"example7.csv"})," can be converted into HLL-type data by using functions before they are loaded into ",(0,a.jsx)(t.code,{children:"col1"})," of ",(0,a.jsx)(t.code,{children:"table7"}),"."]}),"\n",(0,a.jsxs)(t.p,{children:["If you want to load data from ",(0,a.jsx)(t.code,{children:"example7.csv"})," into ",(0,a.jsx)(t.code,{children:"table7"}),", run the following command:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-Bash",children:'curl --location-trusted -u <username>:<password> \\\n    -H "Expect:100-continue" \\\n    -H "columns: temp1, temp2, col1=hll_hash(temp1), col2=hll_empty()" \\\n    -T example7.csv -XPUT \\\n    http://<fe_host>:<fe_http_port>/api/test_db/table7/_stream_load\n'})}),"\n",(0,a.jsxs)(t.blockquote,{children:["\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.strong,{children:"NOTE"})}),"\n",(0,a.jsxs)(t.p,{children:["In the preceding example, the two columns of ",(0,a.jsx)(t.code,{children:"example7.csv"})," are named ",(0,a.jsx)(t.code,{children:"temp1"})," and ",(0,a.jsx)(t.code,{children:"temp2"})," in sequence by using the ",(0,a.jsx)(t.code,{children:"columns"})," parameter. Then, functions are used to convert data as follows:"]}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:["\n",(0,a.jsxs)(t.p,{children:["The ",(0,a.jsx)(t.code,{children:"hll_hash"})," function is used to convert the values in ",(0,a.jsx)(t.code,{children:"temp1"})," of ",(0,a.jsx)(t.code,{children:"example7.csv"})," into HLL-type data and map ",(0,a.jsx)(t.code,{children:"temp1"})," of ",(0,a.jsx)(t.code,{children:"example7.csv"})," onto ",(0,a.jsx)(t.code,{children:"col1"})," of ",(0,a.jsx)(t.code,{children:"table7"}),"."]}),"\n"]}),"\n",(0,a.jsxs)(t.li,{children:["\n",(0,a.jsxs)(t.p,{children:["The ",(0,a.jsx)(t.code,{children:"hll_empty"})," function is used to fill the specified default value into ",(0,a.jsx)(t.code,{children:"col2"})," of ",(0,a.jsx)(t.code,{children:"table7"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(t.p,{children:["For usage of the functions ",(0,a.jsx)(t.code,{children:"hll_hash"})," and ",(0,a.jsx)(t.code,{children:"hll_empty"}),", see ",(0,a.jsx)(t.a,{href:"/doc/docs/2.5/sql-reference/sql-functions/aggregate-functions/hll_hash",children:"hll_hash"})," and ",(0,a.jsx)(t.a,{href:"/doc/docs/2.5/sql-reference/sql-functions/aggregate-functions/hll_empty",children:"hll_empty"}),"."]}),"\n",(0,a.jsx)(t.h4,{id:"load-data-into-tables-containing-bitmap-type-columns",children:"Load data into tables containing BITMAP-type columns"}),"\n",(0,a.jsxs)(t.p,{children:["Your StarRocks database ",(0,a.jsx)(t.code,{children:"test_db"})," contains a table named ",(0,a.jsx)(t.code,{children:"table8"}),". The table consists of two BITMAP-type columns, which are ",(0,a.jsx)(t.code,{children:"col1"})," and ",(0,a.jsx)(t.code,{children:"col2"}),", in sequence."]}),"\n",(0,a.jsxs)(t.p,{children:["Your data file ",(0,a.jsx)(t.code,{children:"example8.csv"})," also consists of two columns, among which the first column can be mapped onto ",(0,a.jsx)(t.code,{children:"col1"})," of ",(0,a.jsx)(t.code,{children:"table8"})," and the second column cannot be mapped onto any column of ",(0,a.jsx)(t.code,{children:"table8"}),". The values in the first column of ",(0,a.jsx)(t.code,{children:"example8.csv"})," can be converted by using functions before they are loaded into ",(0,a.jsx)(t.code,{children:"col1"})," of ",(0,a.jsx)(t.code,{children:"table8"}),"."]}),"\n",(0,a.jsxs)(t.p,{children:["If you want to load data from ",(0,a.jsx)(t.code,{children:"example8.csv"})," into ",(0,a.jsx)(t.code,{children:"table8"}),", run the following command:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-Bash",children:'curl --location-trusted -u <username>:<password> \\\n    -H "Expect:100-continue" \\\n    -H "columns: temp1, temp2, col1=to_bitmap(temp1), col2=bitmap_empty()" \\\n    -T example8.csv -XPUT \\\n    http://<fe_host>:<fe_http_port>/api/test_db/table8/_stream_load\n'})}),"\n",(0,a.jsxs)(t.blockquote,{children:["\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.strong,{children:"NOTE"})}),"\n",(0,a.jsxs)(t.p,{children:["In the preceding example, the two columns of ",(0,a.jsx)(t.code,{children:"example8.csv"})," are named ",(0,a.jsx)(t.code,{children:"temp1"})," and ",(0,a.jsx)(t.code,{children:"temp2"})," in sequence by using the ",(0,a.jsx)(t.code,{children:"columns"})," parameter. Then, functions are used to convert data as follows:"]}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:["\n",(0,a.jsxs)(t.p,{children:["The ",(0,a.jsx)(t.code,{children:"to_bitmap"})," function is used to convert the values in ",(0,a.jsx)(t.code,{children:"temp1"})," of ",(0,a.jsx)(t.code,{children:"example8.csv"})," into BITMAP-type data and map ",(0,a.jsx)(t.code,{children:"temp1"})," of ",(0,a.jsx)(t.code,{children:"example8.csv"})," onto ",(0,a.jsx)(t.code,{children:"col1"})," of ",(0,a.jsx)(t.code,{children:"table8"}),"."]}),"\n"]}),"\n",(0,a.jsxs)(t.li,{children:["\n",(0,a.jsxs)(t.p,{children:["The ",(0,a.jsx)(t.code,{children:"bitmap_empty"})," function is used to fill the specified default value into ",(0,a.jsx)(t.code,{children:"col2"})," of ",(0,a.jsx)(t.code,{children:"table8"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(t.p,{children:["For usage of the functions ",(0,a.jsx)(t.code,{children:"to_bitmap"})," and ",(0,a.jsx)(t.code,{children:"bitmap_empty"}),", see ",(0,a.jsx)(t.a,{href:"/doc/docs/2.5/sql-reference/sql-functions/bitmap-functions/to_bitmap",children:"to_bitmap"})," and ",(0,a.jsx)(t.a,{href:"/doc/docs/2.5/sql-reference/sql-functions/bitmap-functions/bitmap_empty",children:"bitmap_empty"}),"."]}),"\n",(0,a.jsx)(t.h3,{id:"load-json-data",children:"Load JSON data"}),"\n",(0,a.jsx)(t.p,{children:"This section describes the parameter settings that you need to take note of when you load JSON data."}),"\n",(0,a.jsxs)(t.p,{children:["Your StarRocks database ",(0,a.jsx)(t.code,{children:"test_db"})," contains a table named ",(0,a.jsx)(t.code,{children:"tbl1"}),", whose schema is as follows:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-SQL",children:'`category` varchar(512) NULL COMMENT "",`author` varchar(512) NULL COMMENT "",`title` varchar(512) NULL COMMENT "",`price` double NULL COMMENT ""\n'})}),"\n",(0,a.jsx)(t.h4,{id:"load-json-data-using-simple-mode",children:"Load JSON data using simple mode"}),"\n",(0,a.jsxs)(t.p,{children:["Suppose that your data file ",(0,a.jsx)(t.code,{children:"example1.json"})," consists of the following data:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-JSON",children:'{"category":"C++","author":"avc","title":"C++ primer","price":895}\n'})}),"\n",(0,a.jsxs)(t.p,{children:["To load all data from ",(0,a.jsx)(t.code,{children:"example1.json"})," into ",(0,a.jsx)(t.code,{children:"tbl1"}),", run the following command:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-Bash",children:'curl --location-trusted -u <username>:<password> -H "label:label6" \\\n    -H "Expect:100-continue" \\\n    -H "format: json" \\\n    -T example1.json -XPUT \\\n    http://<fe_host>:<fe_http_port>/api/test_db/tbl1/_stream_load\n'})}),"\n",(0,a.jsxs)(t.blockquote,{children:["\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.strong,{children:"NOTE"})}),"\n",(0,a.jsxs)(t.p,{children:["In the preceding example, the parameters ",(0,a.jsx)(t.code,{children:"columns"})," and ",(0,a.jsx)(t.code,{children:"jsonpaths"})," are not specified. Therefore, the keys in ",(0,a.jsx)(t.code,{children:"example1.json"})," are mapped by name onto the columns of ",(0,a.jsx)(t.code,{children:"tbl1"}),"."]}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:"To increase throughput, Stream Load supports loading multiple data records all at once. Example:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-JSON",children:'[{"category":"C++","author":"avc","title":"C++ primer","price":89.5},{"category":"Java","author":"avc","title":"Effective Java","price":95},{"category":"Linux","author":"avc","title":"Linux kernel","price":195}]\n'})}),"\n",(0,a.jsx)(t.h4,{id:"load-json-data-using-matched-mode",children:"Load JSON data using matched mode"}),"\n",(0,a.jsx)(t.p,{children:"StarRocks performs the following steps to match and process JSON data:"}),"\n",(0,a.jsxs)(t.ol,{children:["\n",(0,a.jsxs)(t.li,{children:["\n",(0,a.jsxs)(t.p,{children:["(Optional) Strips the outermost array structure as instructed by the ",(0,a.jsx)(t.code,{children:"strip_outer_array"})," parameter setting."]}),"\n",(0,a.jsxs)(t.blockquote,{children:["\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.strong,{children:"NOTE"})}),"\n",(0,a.jsxs)(t.p,{children:["This step is performed only when the outermost layer of the JSON data is an array structure as indicated by a pair of square brackets ",(0,a.jsx)(t.code,{children:"[]"}),". You need to set ",(0,a.jsx)(t.code,{children:"strip_outer_array"})," to ",(0,a.jsx)(t.code,{children:"true"}),"."]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(t.li,{children:["\n",(0,a.jsxs)(t.p,{children:["(Optional) Matches the root element of the JSON data as instructed by the ",(0,a.jsx)(t.code,{children:"json_root"})," parameter setting."]}),"\n",(0,a.jsxs)(t.blockquote,{children:["\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.strong,{children:"NOTE"})}),"\n",(0,a.jsxs)(t.p,{children:["This step is performed only when the JSON data has a root element. You need to specify the root element by using the ",(0,a.jsx)(t.code,{children:"json_root"})," parameter."]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(t.li,{children:["\n",(0,a.jsxs)(t.p,{children:["Extracts the specified JSON data as instructed by the ",(0,a.jsx)(t.code,{children:"jsonpaths"})," parameter setting."]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(t.h5,{id:"load-json-data-using-matched-without-root-element-specified",children:"Load JSON data using matched without root element specified"}),"\n",(0,a.jsxs)(t.p,{children:["Suppose that your data file ",(0,a.jsx)(t.code,{children:"example2.json"})," consists of the following data:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-JSON",children:'[{"category":"xuxb111","author":"1avc","title":"SayingsoftheCentury","price":895},{"category":"xuxb222","author":"2avc","title":"SayingsoftheCentury","price":895},{"category":"xuxb333","author":"3avc","title":"SayingsoftheCentury","price":895}]\n'})}),"\n",(0,a.jsxs)(t.p,{children:["To load only ",(0,a.jsx)(t.code,{children:"category"}),", ",(0,a.jsx)(t.code,{children:"author"}),", and ",(0,a.jsx)(t.code,{children:"price"})," from ",(0,a.jsx)(t.code,{children:"example2.json"}),", run the following command:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-Bash",children:'curl --location-trusted -u <username>:<password> -H "label:label7" \\\n    -H "Expect:100-continue" \\\n    -H "format: json" \\\n    -H "strip_outer_array: true" \\\n    -H "jsonpaths: [\\"$.category\\",\\"$.price\\",\\"$.author\\"]" \\\n    -H "columns: category, price, author" \\\n    -T example2.json -XPUT \\\n    http://<fe_host>:<fe_http_port>/api/test_db/tbl1/_stream_load\n'})}),"\n",(0,a.jsxs)(t.blockquote,{children:["\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.strong,{children:"NOTE"})}),"\n",(0,a.jsxs)(t.p,{children:["In the preceding example, the outermost layer of the JSON data is an array structure as indicated by a pair of square brackets ",(0,a.jsx)(t.code,{children:"[]"}),". The array structure consists of multiple JSON objects that each represent a data record. Therefore, you need to set ",(0,a.jsx)(t.code,{children:"strip_outer_array"})," to ",(0,a.jsx)(t.code,{children:"true"})," to strip the outermost array structure. The key ",(0,a.jsx)(t.strong,{children:"title"})," that you do not want to load is ignored during loading."]}),"\n"]}),"\n",(0,a.jsx)(t.h5,{id:"load-json-data-using-matched-mode-with-root-element-specified",children:"Load JSON data using matched mode with root element specified"}),"\n",(0,a.jsxs)(t.p,{children:["Suppose your data file ",(0,a.jsx)(t.code,{children:"example3.json"})," consists of the following data:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-JSON",children:'{"id": 10001,"RECORDS":[{"category":"11","title":"SayingsoftheCentury","price":895,"timestamp":1589191587},{"category":"22","author":"2avc","price":895,"timestamp":1589191487},{"category":"33","author":"3avc","title":"SayingsoftheCentury","timestamp":1589191387}],"comments": ["3 records", "there will be 3 rows"]}\n'})}),"\n",(0,a.jsxs)(t.p,{children:["To load only ",(0,a.jsx)(t.code,{children:"category"}),", ",(0,a.jsx)(t.code,{children:"author"}),", and ",(0,a.jsx)(t.code,{children:"price"})," from ",(0,a.jsx)(t.code,{children:"example3.json"}),", run the following command:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-Bash",children:'curl --location-trusted -u <username>:<password> \\\n    -H "Expect:100-continue" \\\n    -H "format: json" \\\n    -H "json_root: $.RECORDS" \\\n    -H "strip_outer_array: true" \\\n    -H "jsonpaths: [\\"$.category\\",\\"$.price\\",\\"$.author\\"]" \\\n    -H "columns: category, price, author" -H "label:label8" \\\n    -T example3.json -XPUT \\\n    http://<fe_host>:<fe_http_port>/api/test_db/tbl1/_stream_load\n'})}),"\n",(0,a.jsxs)(t.blockquote,{children:["\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.strong,{children:"NOTE"})}),"\n",(0,a.jsxs)(t.p,{children:["In the preceding example, the outermost layer of the JSON data is an array structure as indicated by a pair of square brackets ",(0,a.jsx)(t.code,{children:"[]"}),". The array structure consists of multiple JSON objects that each represent a data record. Therefore, you need to set ",(0,a.jsx)(t.code,{children:"strip_outer_array"})," to ",(0,a.jsx)(t.code,{children:"true"})," to strip the outermost array structure. The keys ",(0,a.jsx)(t.code,{children:"title"})," and ",(0,a.jsx)(t.code,{children:"timestamp"})," that you do not want to load are ignored during loading. Additionally, the ",(0,a.jsx)(t.code,{children:"json_root"})," parameter is used to specify the root element, which is an array, of the JSON data."]}),"\n"]})]})}const h=function(e={}){const{wrapper:t}=Object.assign({},(0,o.ah)(),e.components);return t?(0,a.jsx)(t,Object.assign({},e,{children:(0,a.jsx)(l,e)})):l(e)}},11151:(e,t,n)=>{n.d(t,{Zo:()=>r,ah:()=>s});var a=n(67294);const o=a.createContext({});function s(e){const t=a.useContext(o);return a.useMemo((()=>"function"==typeof e?e(t):{...t,...e}),[t,e])}const d={};function r({components:e,children:t,disableParentContext:n}){let r;return r=n?"function"==typeof e?e({}):e||d:s(e),a.createElement(o.Provider,{value:r},t)}}}]);