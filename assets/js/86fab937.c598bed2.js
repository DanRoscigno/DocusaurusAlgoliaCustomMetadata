"use strict";(self.webpackChunkstarrocks=self.webpackChunkstarrocks||[]).push([[15253],{9024:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>u,frontMatter:()=>c,metadata:()=>i,toc:()=>l});var s=t(85893),r=t(11151);const c={},a="STD",i={id:"sql-reference/sql-functions/aggregate-functions/std",title:"STD",description:"Description",source:"@site/versioned_docs/version-2.5/sql-reference/sql-functions/aggregate-functions/std.md",sourceDirName:"sql-reference/sql-functions/aggregate-functions",slug:"/sql-reference/sql-functions/aggregate-functions/std",permalink:"/doc/en/2.5/sql-reference/sql-functions/aggregate-functions/std",draft:!1,unlisted:!1,editUrl:"https://github.com/StarRocks/starrocks/edit/main/docs/sql-reference/sql-functions/aggregate-functions/std.md",tags:[],version:"2.5",frontMatter:{},sidebar:"documentation",previous:{title:"retention",permalink:"/doc/en/2.5/sql-reference/sql-functions/aggregate-functions/retention"},next:{title:"STDDEV,STDDEV_POP,std",permalink:"/doc/en/2.5/sql-reference/sql-functions/aggregate-functions/stddev"}},o={},l=[{value:"Description",id:"description",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Return value",id:"return-value",level:2},{value:"Examples",id:"examples",level:2},{value:"keyword",id:"keyword",level:2}];function d(e){const n=Object.assign({h1:"h1",h2:"h2",p:"p",pre:"pre",code:"code"},(0,r.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"std",children:"STD"}),"\n",(0,s.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,s.jsx)(n.p,{children:"Returns the standard deviation of an expression. Since v2.5.10, this function can also be used as a window function."}),"\n",(0,s.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-Haskell",children:"STD(expr)\n"})}),"\n",(0,s.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"expr"}),": the expression. If it is a table column, it must evaluate to TINYINT, SMALLINT, INT, BIGINT, LARGEINT, FLOAT, DOUBLE, or DECIMAL."]}),"\n",(0,s.jsx)(n.h2,{id:"return-value",children:"Return value"}),"\n",(0,s.jsx)(n.p,{children:"Returns a DOUBLE value."}),"\n",(0,s.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(n.p,{children:"Sample dataset"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-plain",children:"=======\n```plaintext\n>>>>>>> 41ea837d3 ([Doc] add corr related functions and update window functions (#28776))\nMySQL > select * from std_test;\n+------+------+\n| col0 | col1 |\n+------+------+\n|    0 |    0 |\n|    1 |    2 |\n|    2 |    4 |\n|    3 |    6 |\n|    4 |    8 |\n+------+------+\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Calculate the standard deviation of ",(0,s.jsx)(n.code,{children:"col0"})," and ",(0,s.jsx)(n.code,{children:"col1"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-plaintext",children:"MySQL > select std(col0) as std_of_col0, std(col1) as std_of_col1 from std_test;\n+--------------------+--------------------+\n| std_of_col0        | std_of_col1        |\n+--------------------+--------------------+\n| 1.4142135623730951 | 2.8284271247461903 |\n+--------------------+--------------------+\n"})}),"\n",(0,s.jsx)(n.h2,{id:"keyword",children:"keyword"}),"\n",(0,s.jsx)(n.p,{children:"STD"})]})}const u=function(e={}){const{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?(0,s.jsx)(n,Object.assign({},e,{children:(0,s.jsx)(d,e)})):d(e)}},11151:(e,n,t)=>{t.d(n,{Zo:()=>i,ah:()=>c});var s=t(67294);const r=s.createContext({});function c(e){const n=s.useContext(r);return s.useMemo((()=>"function"==typeof e?e(n):{...n,...e}),[n,e])}const a={};function i({components:e,children:n,disableParentContext:t}){let i;return i=t?"function"==typeof e?e({}):e||a:c(e),s.createElement(r.Provider,{value:i},n)}}}]);