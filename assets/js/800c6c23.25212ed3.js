"use strict";(self.webpackChunkstarrocks=self.webpackChunkstarrocks||[]).push([[97991],{40149:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>m,frontMatter:()=>r,metadata:()=>a,toc:()=>l});var s=t(85893),i=t(11151);const r={displayed_sidebar:"English"},o="from_unixtime",a={id:"sql-reference/sql-functions/date-time-functions/from_unixtime",title:"from_unixtime",description:"Description",source:"@site/versioned_docs/version-2.2/sql-reference/sql-functions/date-time-functions/from_unixtime.md",sourceDirName:"sql-reference/sql-functions/date-time-functions",slug:"/sql-reference/sql-functions/date-time-functions/from_unixtime",permalink:"/docs/2.2/sql-reference/sql-functions/date-time-functions/from_unixtime",draft:!1,unlisted:!1,editUrl:"https://github.com/StarRocks/starrocks/edit/main/docs/sql-reference/sql-functions/date-time-functions/from_unixtime.md",tags:[],version:"2.2",frontMatter:{displayed_sidebar:"English"},sidebar:"English",previous:{title:"from_days",permalink:"/docs/2.2/sql-reference/sql-functions/date-time-functions/from_days"},next:{title:"hour",permalink:"/docs/2.2/sql-reference/sql-functions/date-time-functions/hour"}},c={},l=[{value:"Description",id:"description",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Examples",id:"examples",level:2},{value:"keyword",id:"keyword",level:2}];function d(e){const n=Object.assign({h1:"h1",h2:"h2",p:"p",code:"code",a:"a",pre:"pre",ul:"ul",li:"li"},(0,i.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"from_unixtime",children:"from_unixtime"}),"\n",(0,s.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,s.jsxs)(n.p,{children:["Converts a UNIX timestamp into the required time format. The default format is ",(0,s.jsx)(n.code,{children:"yyyy-MM-dd HH:mm:ss"}),". It also supports the formats in ",(0,s.jsx)(n.a,{href:"/docs/2.2/sql-reference/sql-functions/date-time-functions/date_format",children:"date_format"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"DATETIME FROM_UNIXTIME(INT unix_timestamp[, VARCHAR string_format])`\n"})}),"\n",(0,s.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"unix_timestamp"}),": the UNIX timestamp you want to convert."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"string_format"}),": the required time format."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Currently, ",(0,s.jsx)(n.code,{children:"string_format"})," supports the following formats:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-plain",metastring:"text",children:"%Y\uff1aYear  e.g.\uff1a2014\uff0c1900\n%m\uff1aMonth   e.g.\uff1a12\uff0c09\n%d\uff1aDay  e.g.\uff1a11\uff0c01\n%H\uff1aHour  e.g.\uff1a23\uff0c01\uff0c12\n%i\uff1aMinute  e.g.\uff1a05\uff0c11\n%s\uff1aSecond  e.g.\uff1a59\uff0c01\n"})}),"\n",(0,s.jsx)(n.p,{children:"Other formats are invalid and NULL will be returned."}),"\n",(0,s.jsxs)(n.p,{children:["If the specified timstamp is less than 0 or greater than 253402271999, NULL will be returned. The range for timestamp is ",(0,s.jsx)(n.code,{children:"1970-01-01 00:00:00"})," to ",(0,s.jsx)(n.code,{children:"9999-12-31 23:59:59"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-plain",metastring:"text",children:"MySQL > select from_unixtime(1196440219);\n+---------------------------+\n| from_unixtime(1196440219) |\n+---------------------------+\n| 2007-12-01 00:30:19       |\n+---------------------------+\n\nMySQL > select from_unixtime(1196440219, 'yyyy-MM-dd HH:mm:ss');\n+--------------------------------------------------+\n| from_unixtime(1196440219, 'yyyy-MM-dd HH:mm:ss') |\n+--------------------------------------------------+\n| 2007-12-01 00:30:19                              |\n+--------------------------------------------------+\n\nMySQL > select from_unixtime(1196440219, '%Y-%m-%d');\n+-----------------------------------------+\n| from_unixtime(1196440219, '%Y-%m-%d')   |\n+-----------------------------------------+\n| 2007-12-01                              |\n+-----------------------------------------+\n\nMySQL > select from_unixtime(1196440219, '%Y-%m-%d %H:%i:%s');\n+--------------------------------------------------+\n| from_unixtime(1196440219, '%Y-%m-%d %H:%i:%s')   |\n+--------------------------------------------------+\n| 2007-12-01 00:30:19                              |\n+--------------------------------------------------+\n"})}),"\n",(0,s.jsx)(n.h2,{id:"keyword",children:"keyword"}),"\n",(0,s.jsx)(n.p,{children:"FROM_UNIXTIME,FROM,UNIXTIME"})]})}const m=function(e={}){const{wrapper:n}=Object.assign({},(0,i.ah)(),e.components);return n?(0,s.jsx)(n,Object.assign({},e,{children:(0,s.jsx)(d,e)})):d(e)}},11151:(e,n,t)=>{t.d(n,{Zo:()=>a,ah:()=>r});var s=t(67294);const i=s.createContext({});function r(e){const n=s.useContext(i);return s.useMemo((()=>"function"==typeof e?e(n):{...n,...e}),[n,e])}const o={};function a({components:e,children:n,disableParentContext:t}){let a;return a=t?"function"==typeof e?e({}):e||o:r(e),s.createElement(i.Provider,{value:a},n)}}}]);