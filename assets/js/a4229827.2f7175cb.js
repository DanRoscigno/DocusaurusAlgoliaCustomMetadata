"use strict";(self.webpackChunkstarrocks=self.webpackChunkstarrocks||[]).push([[52729],{51245:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>c,toc:()=>d});var t=n(85893),i=n(11151);const r={displayed_sidebar:"documentation"},a="DECIMAL",c={id:"sql-reference/sql-statements/data-types/DECIMAL",title:"DECIMAL",description:"Description",source:"@site/versioned_docs/version-3.1/sql-reference/sql-statements/data-types/DECIMAL.md",sourceDirName:"sql-reference/sql-statements/data-types",slug:"/sql-reference/sql-statements/data-types/DECIMAL",permalink:"/doc/docs/sql-reference/sql-statements/data-types/DECIMAL",draft:!1,unlisted:!1,editUrl:"https://github.com/StarRocks/starrocks/tree/main/versioned_docs/version-3.1/sql-reference/sql-statements/data-types/DECIMAL.md",tags:[],version:"3.1",frontMatter:{displayed_sidebar:"documentation"},sidebar:"documentation",previous:{title:"LARGEINT",permalink:"/doc/docs/sql-reference/sql-statements/data-types/LARGEINT"},next:{title:"DOUBLE",permalink:"/doc/docs/sql-reference/sql-statements/data-types/DOUBLE"}},l={},d=[{value:"Description",id:"description",level:2},{value:"Limits",id:"limits",level:2},{value:"Examples",id:"examples",level:2},{value:"keywords",id:"keywords",level:2}];function o(e){const s=Object.assign({h1:"h1",h2:"h2",p:"p",code:"code",ul:"ul",li:"li",a:"a",pre:"pre"},(0,i.ah)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h1,{id:"decimal",children:"DECIMAL"}),"\n",(0,t.jsx)(s.h2,{id:"description",children:"Description"}),"\n",(0,t.jsx)(s.p,{children:"DECIMAL(P[,S])"}),"\n",(0,t.jsxs)(s.p,{children:["High-precision fixed-point value. ",(0,t.jsx)(s.code,{children:"P"})," stands for the total number of significant numbers (precision). ",(0,t.jsx)(s.code,{children:"S"})," stands for the maximum number of decimal points (scale)."]}),"\n",(0,t.jsxs)(s.p,{children:["If ",(0,t.jsx)(s.code,{children:"P"})," is omitted, the default is 10. If ",(0,t.jsx)(s.code,{children:"S"})," is omitted, the default is 0."]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsx)(s.p,{children:"Decimal V2"}),"\n",(0,t.jsxs)(s.p,{children:["The range of ",(0,t.jsx)(s.code,{children:"P"})," is [1,27] and the range of ",(0,t.jsx)(s.code,{children:"S"})," is [0,9]. ",(0,t.jsx)(s.code,{children:"P"})," must be greater than or equal to the value of ",(0,t.jsx)(s.code,{children:"S"}),". The default value of ",(0,t.jsx)(s.code,{children:"S"})," is 0."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsx)(s.p,{children:"Fast Decimal (Decimal V3)"}),"\n",(0,t.jsxs)(s.p,{children:["The range of ",(0,t.jsx)(s.code,{children:"P"})," is [1,38] and the range of ",(0,t.jsx)(s.code,{children:"S"})," is [0, P]. The default value of ",(0,t.jsx)(s.code,{children:"S"})," is 0. Fast Decimal provides a higher precision."]}),"\n",(0,t.jsx)(s.p,{children:"Major optimizations:"}),"\n",(0,t.jsx)(s.p,{children:"\u200b1. Fast Decimal uses variable-width integers to express decimals. For example, it uses 64-bit integers to express decimals whose precision is less than or equal to 18. Whereas, Decimal V2 uses 128-bit integers uniformly for all decimals. Arithmetic operations and conversion operations on 64-bit processors use fewer instructions, which greatly improves performance."}),"\n",(0,t.jsx)(s.p,{children:"\u200b2. Compared with Decimal V2, Fast Decimal made significant optimizations in some algorithms, especially in multiplication, which improves performance by about 4 times."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["Fast Decimal is controlled by the FE dynamic parameter ",(0,t.jsx)(s.code,{children:"enable_decimal_v3"}),", which is ",(0,t.jsx)(s.code,{children:"true"})," by default."]}),"\n",(0,t.jsxs)(s.p,{children:["From v3.1 onwards, StarRocks supports Fast Decimal entries in ",(0,t.jsx)(s.a,{href:"/doc/docs/sql-reference/sql-statements/data-types/Array",children:"ARRAY"}),", ",(0,t.jsx)(s.a,{href:"/doc/docs/sql-reference/sql-statements/data-types/Map",children:"MAP"}),", and ",(0,t.jsx)(s.a,{href:"/doc/docs/sql-reference/sql-statements/data-types/STRUCT",children:"STRUCT"}),"."]}),"\n",(0,t.jsx)(s.h2,{id:"limits",children:"Limits"}),"\n",(0,t.jsx)(s.p,{children:"StarRocks does not support querying DECIMAL data in ORC and Parquet files from Hive."}),"\n",(0,t.jsx)(s.h2,{id:"examples",children:"Examples"}),"\n",(0,t.jsx)(s.p,{children:"Define DECIMAL columns when creating a table."}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-sql",children:'CREATE TABLE decimalDemo (\n    pk BIGINT(20) NOT NULL COMMENT "",\n    account DECIMAL(20,10) COMMENT ""\n) ENGINE=OLAP \nDUPLICATE KEY(pk)\nCOMMENT "OLAP"\nDISTRIBUTED BY HASH(pk);\n\nINSERT INTO decimalDemo VALUES\n(1,3.141592656),\n(2,21.638378),\n(3,4873.6293048479);\n\nSELECT * FROM decimalDemo;\n+------+-----------------+\n| pk   | account         |\n+------+-----------------+\n|    1 |    3.1415926560 |\n|    3 | 4873.6293048479 |\n|    2 |   21.6383780000 |\n+------+-----------------+\n'})}),"\n",(0,t.jsx)(s.h2,{id:"keywords",children:"keywords"}),"\n",(0,t.jsx)(s.p,{children:"decimal, decimalv2, decimalv3, fast decimal"})]})}const h=function(e={}){const{wrapper:s}=Object.assign({},(0,i.ah)(),e.components);return s?(0,t.jsx)(s,Object.assign({},e,{children:(0,t.jsx)(o,e)})):o(e)}},11151:(e,s,n)=>{n.d(s,{Zo:()=>c,ah:()=>r});var t=n(67294);const i=t.createContext({});function r(e){const s=t.useContext(i);return t.useMemo((()=>"function"==typeof e?e(s):{...s,...e}),[s,e])}const a={};function c({components:e,children:s,disableParentContext:n}){let c;return c=n?"function"==typeof e?e({}):e||a:r(e),t.createElement(i.Provider,{value:c},s)}}}]);