"use strict";(self.webpackChunkstarrocks=self.webpackChunkstarrocks||[]).push([[71843],{18360:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>t,metadata:()=>o,toc:()=>l});var r=n(85893),a=n(11151);const t={},i="Lambda expression",o={id:"sql-reference/sql-functions/Lambda_expression",title:"Lambda expression",description:"Lambda expressions are anonymous functions that can be passed as parameters into higher-order SQL functions. Lambda expressions allow you to develop code that is more concise, elegant, and extensible.",source:"@site/versioned_docs/version-3.0/sql-reference/sql-functions/Lambda_expression.md",sourceDirName:"sql-reference/sql-functions",slug:"/sql-reference/sql-functions/Lambda_expression",permalink:"/docusaurusv3/docs/3.0/sql-reference/sql-functions/Lambda_expression",draft:!1,unlisted:!1,editUrl:"https://github.com/StarRocks/starrocks/tree/main/versioned_docs/version-3.0/sql-reference/sql-functions/Lambda_expression.md",tags:[],version:"3.0",frontMatter:{},sidebar:"documentation",previous:{title:"Java UDFs",permalink:"/docusaurusv3/docs/3.0/sql-reference/sql-functions/JAVA_UDF"},next:{title:"Window function",permalink:"/docusaurusv3/docs/3.0/sql-reference/sql-functions/Window_function"}},c={},l=[{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Return value",id:"return-value",level:2},{value:"Usage notes",id:"usage-notes",level:2},{value:"Examples",id:"examples",level:2}];function d(e){const s=Object.assign({h1:"h1",p:"p",code:"code",a:"a",h2:"h2",pre:"pre",ul:"ul",li:"li"},(0,a.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.h1,{id:"lambda-expression",children:"Lambda expression"}),"\n",(0,r.jsx)(s.p,{children:"Lambda expressions are anonymous functions that can be passed as parameters into higher-order SQL functions. Lambda expressions allow you to develop code that is more concise, elegant, and extensible."}),"\n",(0,r.jsxs)(s.p,{children:["Lambda expressions are written with the ",(0,r.jsx)(s.code,{children:"->"}),' operator, which reads "goes to". The left side of ',(0,r.jsx)(s.code,{children:"->"})," is the input parameters (if any) and the right side is an expression."]}),"\n",(0,r.jsxs)(s.p,{children:["From v2.5 onwards, StarRocks supports using lambda expressions in the following higher-order SQL functions: ",(0,r.jsx)(s.a,{href:"/docusaurusv3/docs/3.0/sql-reference/sql-functions/array-functions/array_map",children:"array_map()"}),", ",(0,r.jsx)(s.a,{href:"/docusaurusv3/docs/3.0/sql-reference/sql-functions/array-functions/array_filter",children:"array_filter()"}),", ",(0,r.jsx)(s.a,{href:"/docusaurusv3/docs/3.0/sql-reference/sql-functions/array-functions/array_sum",children:"array_sum()"}),", and ",(0,r.jsx)(s.a,{href:"/docusaurusv3/docs/3.0/sql-reference/sql-functions/array-functions/array_sortby",children:"array_sortby()"}),"."]}),"\n",(0,r.jsx)(s.h2,{id:"syntax",children:"Syntax"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-Haskell",children:"parameter -> expression\n"})}),"\n",(0,r.jsx)(s.h2,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"parameter"}),": the input parameters for the lambda expression, which can accept zero, one, or more parameters. Two or more input parameters are enclosed in parentheses."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"expression"}),": a simple expression that references ",(0,r.jsx)(s.code,{children:"parameter"}),". The expression must be valid for the input parameters."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"return-value",children:"Return value"}),"\n",(0,r.jsxs)(s.p,{children:["The type of the return value is determined by the result type of ",(0,r.jsx)(s.code,{children:"expression"}),"."]}),"\n",(0,r.jsx)(s.h2,{id:"usage-notes",children:"Usage notes"}),"\n",(0,r.jsx)(s.p,{children:"Almost all scalar functions can be used in a lambda body. But there are a few exceptions:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["Subqueries are not supported, for example, ",(0,r.jsx)(s.code,{children:"x -> 5 + (SELECT 3)"}),"."]}),"\n",(0,r.jsxs)(s.li,{children:["Aggregate functions are not supported, for example, ",(0,r.jsx)(s.code,{children:"x -> min(y)"}),"."]}),"\n",(0,r.jsx)(s.li,{children:"Window functions are not supported."}),"\n",(0,r.jsx)(s.li,{children:"Table functions are not supported."}),"\n",(0,r.jsx)(s.li,{children:"Correlated columns cannot occur in lambda functions."}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"examples",children:"Examples"}),"\n",(0,r.jsx)(s.p,{children:"Simple examples of lambda expressions:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-SQL",children:'-- Accepts no parameters and returns 5.\n() -> 5    \n-- Takes x and returns the value of (x + 2).\nx -> x + 2 \n-- Takes x and y, and returns their sum.\n(x, y) -> x + y \n-- Takes x and applies a function to x.\nx -> COALESCE(x, 0)\nx -> day(x)\nx -> split(x,",")\nx -> if(x>0,"positive","negative")\n'})}),"\n",(0,r.jsx)(s.p,{children:"An example of using lambda expressions in higher-order functions:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-Haskell",children:"select array_map((x,y,z) -> x + y, [1], [2], [4]);\n+----------------------------------------------+\n| array_map((x, y, z) -> x + y, [1], [2], [4]) |\n+----------------------------------------------+\n| [3]                                          |\n+----------------------------------------------+\n1 row in set (0.01 sec)\n"})})]})}const u=function(e={}){const{wrapper:s}=Object.assign({},(0,a.ah)(),e.components);return s?(0,r.jsx)(s,Object.assign({},e,{children:(0,r.jsx)(d,e)})):d(e)}},11151:(e,s,n)=>{n.d(s,{Zo:()=>o,ah:()=>t});var r=n(67294);const a=r.createContext({});function t(e){const s=r.useContext(a);return r.useMemo((()=>"function"==typeof e?e(s):{...s,...e}),[s,e])}const i={};function o({components:e,children:s,disableParentContext:n}){let o;return o=n?"function"==typeof e?e({}):e||i:t(e),r.createElement(a.Provider,{value:o},s)}}}]);