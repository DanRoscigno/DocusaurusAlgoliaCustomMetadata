"use strict";(self.webpackChunkstarrocks=self.webpackChunkstarrocks||[]).push([[19222],{14365:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>t,metadata:()=>l,toc:()=>o});var s=r(85893),a=r(11151);const t={displayed_sidebar:"English"},i="reverse",l={id:"sql-reference/sql-functions/array-functions/reverse",title:"reverse",description:"Description",source:"@site/versioned_docs/version-2.2/sql-reference/sql-functions/array-functions/reverse.md",sourceDirName:"sql-reference/sql-functions/array-functions",slug:"/sql-reference/sql-functions/array-functions/reverse",permalink:"/zh/docs/2.2/sql-reference/sql-functions/array-functions/reverse",draft:!1,unlisted:!1,editUrl:"https://github.com/StarRocks/docs.zh-cn/edit/main/sql-reference/sql-functions/array-functions/reverse.md",tags:[],version:"2.2",frontMatter:{displayed_sidebar:"English"},sidebar:"English",previous:{title:"arrays_overlap",permalink:"/zh/docs/2.2/sql-reference/sql-functions/array-functions/arrays_overlap"},next:{title:"bitmap_and",permalink:"/zh/docs/2.2/sql-reference/sql-functions/bitmap-functions/bitmap_and"}},c={},o=[{value:"Description",id:"description",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Return value",id:"return-value",level:2},{value:"Examples",id:"examples",level:2}];function d(e){const n=Object.assign({h1:"h1",h2:"h2",p:"p",pre:"pre",code:"code"},(0,a.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"reverse",children:"reverse"}),"\n",(0,s.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,s.jsx)(n.p,{children:"Reverses the order in which the elements of a string or array are arranged."}),"\n",(0,s.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-SQL",children:"reverse(param)\n"})}),"\n",(0,s.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"param"}),": the string or array that you want to reverse. The supported data types are VARCHAR, CHAR, and ARRAY. If you specify an array, the array must be a one-dimensional array whose elements are not of the DECIMAL data type."]}),"\n",(0,s.jsx)(n.h2,{id:"return-value",children:"Return value"}),"\n",(0,s.jsxs)(n.p,{children:["Returns a value of the same data type as the object that you specify in the ",(0,s.jsx)(n.code,{children:"param"})," parameter."]}),"\n",(0,s.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(n.p,{children:"Example 1: Reverse a string."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-Plain_Text",children:"MySQL > SELECT reverse('hello');\n\n+------------------+\n\n| REVERSE('hello') |\n\n+------------------+\n\n| olleh            |\n\n+------------------+\n"})}),"\n",(0,s.jsx)(n.p,{children:"Example 2: Reverse an array."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-Plain_Text",children:"MYSQL> SELECT reverse([4,1,5,8]);\n\n+--------------------+\n\n| REVERSE([4,1,5,8]) |\n\n+--------------------+\n\n| [8,5,1,4]          |\n\n+--------------------+\n"})})]})}const h=function(e={}){const{wrapper:n}=Object.assign({},(0,a.ah)(),e.components);return n?(0,s.jsx)(n,Object.assign({},e,{children:(0,s.jsx)(d,e)})):d(e)}},11151:(e,n,r)=>{r.d(n,{Zo:()=>l,ah:()=>t});var s=r(67294);const a=s.createContext({});function t(e){const n=s.useContext(a);return s.useMemo((()=>"function"==typeof e?e(n):{...n,...e}),[n,e])}const i={};function l({components:e,children:n,disableParentContext:r}){let l;return l=r?"function"==typeof e?e({}):e||i:t(e),s.createElement(a.Provider,{value:l},n)}}}]);