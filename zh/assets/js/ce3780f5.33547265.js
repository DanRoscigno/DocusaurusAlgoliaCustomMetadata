"use strict";(self.webpackChunkstarrocks=self.webpackChunkstarrocks||[]).push([[74795],{19089:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>i,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var t=s(85893),r=s(11151);const o={displayed_sidebar:"English"},c="parse_json",a={id:"sql-reference/sql-functions/json-functions/json-constructor-functions/parse_json",title:"parse_json",description:"Description",source:"@site/versioned_docs/version-2.2/sql-reference/sql-functions/json-functions/json-constructor-functions/parse_json.md",sourceDirName:"sql-reference/sql-functions/json-functions/json-constructor-functions",slug:"/sql-reference/sql-functions/json-functions/json-constructor-functions/parse_json",permalink:"/zh/docs/2.2/sql-reference/sql-functions/json-functions/json-constructor-functions/parse_json",draft:!1,unlisted:!1,editUrl:"https://github.com/StarRocks/docs.zh-cn/edit/main/sql-reference/sql-functions/json-functions/json-constructor-functions/parse_json.md",tags:[],version:"2.2",frontMatter:{displayed_sidebar:"English"},sidebar:"English",previous:{title:"json_object",permalink:"/zh/docs/2.2/sql-reference/sql-functions/json-functions/json-constructor-functions/json_object"},next:{title:"JSON \u8fd0\u7b97\u7b26",permalink:"/zh/docs/2.2/sql-reference/sql-functions/json-functions/json-operators"}},i={},l=[{value:"Description",id:"description",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Return value",id:"return-value",level:2},{value:"Examples",id:"examples",level:2}];function d(e){const n=Object.assign({h1:"h1",h2:"h2",p:"p",pre:"pre",code:"code",blockquote:"blockquote",a:"a"},(0,r.ah)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"parse_json",children:"parse_json"}),"\n",(0,t.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,t.jsx)(n.p,{children:"Converts a string to a JSON value."}),"\n",(0,t.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-Plain_Text",children:"parse_json(string_expr)\n"})}),"\n",(0,t.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"string_expr"}),": the expression that represents the string. Only the STRING, VARCHAR, and CHAR data types are supported."]}),"\n",(0,t.jsx)(n.h2,{id:"return-value",children:"Return value"}),"\n",(0,t.jsx)(n.p,{children:"Returns a JSON value."}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["Note: If the string cannot be parsed into a standard JSON value, the PARSE_JSON function returns ",(0,t.jsx)(n.code,{children:"NULL"}),". For more information about the JSON specification, see ",(0,t.jsx)(n.a,{href:"https://tools.ietf.org/html/rfc7159?spm=a2c63.p38356.0.0.14d26b9fcp7fcf#page-4",children:"RFC 7159"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,t.jsxs)(n.p,{children:["Example 1: Convert a STRING value of ",(0,t.jsx)(n.code,{children:"1"})," to a JSON value of ",(0,t.jsx)(n.code,{children:"1"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-Plain_Text",children:"mysql> SELECT parse_json('1');\n\n       -> 1\n"})}),"\n",(0,t.jsx)(n.p,{children:"Example 2: Convert an array of the STRING data type to a JSON array."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-Plain_Text",children:"mysql> SELECT parse_json('[1,2,3]');\n\n       -> [1, 2, 3]   \n"})}),"\n",(0,t.jsx)(n.p,{children:"Example 3: Convert an object of the STRING data type to a JSON object."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-Plain_Text",children:'mysql> SELECT parse_json(\'{"star": "rocks"}\');\n\n       -> {"star": "rocks"}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Example 4: Construct a JSON value of ",(0,t.jsx)(n.code,{children:"NULL"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-Plain_Text",children:"mysql> SELECT parse_json('null');\n\n       -> NULL\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Example 5: If the string cannot be parsed into a standard JSON value, the PARSE_JSON function returns ",(0,t.jsx)(n.code,{children:"NULL"}),'. In this example, star is not enclosed in double quotation marks ("). Therefore, the PARSE_JSON function returns ',(0,t.jsx)(n.code,{children:"NULL"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-Plain_Text",children:"mysql> SELECT parse_json('{star: \"rocks\"}');\n\n       -> NULL\n"})})]})}const u=function(e={}){const{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?(0,t.jsx)(n,Object.assign({},e,{children:(0,t.jsx)(d,e)})):d(e)}},11151:(e,n,s)=>{s.d(n,{Zo:()=>a,ah:()=>o});var t=s(67294);const r=t.createContext({});function o(e){const n=t.useContext(r);return t.useMemo((()=>"function"==typeof e?e(n):{...n,...e}),[n,e])}const c={};function a({components:e,children:n,disableParentContext:s}){let a;return a=s?"function"==typeof e?e({}):e||c:o(e),t.createElement(r.Provider,{value:a},n)}}}]);